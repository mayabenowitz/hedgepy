2020-04-23 10:45:47,830 [1240] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 10:45:47,831 [1240] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 10:45:47,831 [1240] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 10:45:47,834 [1240] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 10:45:47,834 [1240] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 10:45:47,835 [1240] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 10:45:48,619 [1240] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 10:45:48,621 [1240] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 10:45:48,621 [1240] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 10:45:48,623 [1240] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 10:45:48,623 [1240] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 10:45:48,623 [1240] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 10:48:03,148 [26228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 10:48:03,148 [26228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 10:48:03,149 [26228] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 10:48:03,150 [26228] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 10:48:03,151 [26228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 10:48:03,151 [26228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 10:48:03,661 [26228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 10:48:03,661 [26228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 10:48:03,662 [26228] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 10:48:03,663 [26228] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 10:48:03,664 [26228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 10:48:03,664 [26228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 10:52:02,783 [26228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 10:52:02,783 [26228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 10:52:02,784 [26228] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 10:52:02,786 [26228] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 10:52:02,786 [26228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 10:52:02,787 [26228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 10:56:53,171 [26228] ERROR    root:709: [JupyterRequire] File `'hedgepy.ipynb.py'` not found.
2020-04-23 10:57:28,117 [26228] ERROR    root:709: [JupyterRequire] File `'core.ipynb.py'` not found.
2020-04-23 10:57:32,622 [26228] ERROR    root:709: [JupyterRequire] File `'core.py'` not found.
2020-04-23 10:57:40,073 [26228] ERROR    root:709: [JupyterRequire] File `'hedgepy.core.py'` not found.
2020-04-23 11:02:10,940 [26228] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 11:02:10,940 [26228] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 11:02:10,941 [26228] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 11:02:10,942 [26228] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 11:02:10,943 [26228] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 11:02:10,943 [26228] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 11:16:43,363 [36140] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 11:16:43,363 [36140] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 11:16:43,364 [36140] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 11:16:43,365 [36140] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 11:16:43,366 [36140] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 11:16:43,366 [36140] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 11:16:43,874 [36140] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 11:16:43,874 [36140] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 11:16:43,875 [36140] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 11:16:43,876 [36140] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 11:16:43,877 [36140] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 11:16:43,877 [36140] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 11:30:42,711 [36140] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-23 11:30:42,712 [36140] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-23 11:30:42,712 [36140] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-23 11:30:42,719 [36140] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-23 11:30:42,720 [36140] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-23 11:30:42,721 [36140] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-23 11:30:42,721 [36140] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-23 11:30:42,721 [36140] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'hedgepy', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-23 11:39:51,486 [36140] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  This is separate from the ipykernel package so we can avoid doing imports until

2020-04-23 11:40:07,719 [36140] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:3: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  This is separate from the ipykernel package so we can avoid doing imports until

2020-04-23 12:14:39,274 [36140] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:14:39,274 [36140] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:14:39,274 [36140] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:14:39,276 [36140] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:14:39,277 [36140] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:14:39,277 [36140] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:16:16,531 [6440] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:16:16,531 [6440] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:16:16,532 [6440] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:16:16,533 [6440] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:16:16,534 [6440] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:16:16,534 [6440] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:16:19,217 [6440] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-23 12:16:19,217 [6440] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-23 12:16:19,218 [6440] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-23 12:16:19,225 [6440] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-23 12:16:19,226 [6440] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-23 12:16:19,226 [6440] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-23 12:16:19,227 [6440] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-23 12:16:19,227 [6440] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-23 12:16:21,220 [6440] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:16:21,220 [6440] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:16:21,221 [6440] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:16:21,223 [6440] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:16:21,223 [6440] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:16:21,223 [6440] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:26:48,811 [6744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:26:48,811 [6744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:26:48,811 [6744] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:26:48,813 [6744] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:26:48,814 [6744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:26:48,814 [6744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:26:49,322 [6744] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:26:49,322 [6744] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:26:49,322 [6744] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:26:49,324 [6744] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:26:49,325 [6744] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:26:49,325 [6744] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:27:41,752 [12836] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:27:41,752 [12836] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:27:41,752 [12836] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:27:41,754 [12836] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:27:41,754 [12836] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:27:41,756 [12836] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:27:42,264 [12836] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:27:42,266 [12836] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:27:42,266 [12836] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:27:42,268 [12836] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:27:42,268 [12836] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:27:42,268 [12836] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:33:21,701 [2632] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:33:21,701 [2632] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:33:21,702 [2632] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:33:21,704 [2632] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:33:21,704 [2632] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:33:21,705 [2632] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:33:22,302 [2632] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:33:22,303 [2632] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:33:22,303 [2632] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:33:22,305 [2632] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:33:22,305 [2632] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:33:22,305 [2632] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:40:05,709 [35612] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:40:05,710 [35612] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:40:05,710 [35612] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:40:05,712 [35612] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:40:05,713 [35612] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:40:05,713 [35612] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:40:06,230 [35612] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:40:06,231 [35612] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:40:06,231 [35612] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:40:06,232 [35612] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:40:06,233 [35612] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:40:06,233 [35612] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 12:40:53,297 [35612] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-23 12:40:53,298 [35612] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-23 12:40:53,298 [35612] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-23 12:40:53,301 [35612] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-23 12:40:53,302 [35612] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-23 12:40:53,302 [35612] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-23 12:40:53,302 [35612] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-23 12:40:53,303 [35612] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-23 12:49:21,702 [35024] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 12:49:21,702 [35024] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 12:49:21,703 [35024] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 12:49:21,704 [35024] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 12:49:21,705 [35024] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 12:49:21,705 [35024] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 13:45:47,718 [35628] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 13:45:47,719 [35628] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 13:45:47,719 [35628] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 13:45:47,721 [35628] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 13:45:47,721 [35628] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 13:45:47,721 [35628] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 14:12:14,904 [32172] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 14:12:14,904 [32172] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 14:12:14,905 [32172] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 14:12:14,907 [32172] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 14:12:14,907 [32172] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 14:12:14,908 [32172] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 14:13:14,731 [32172] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-23 14:13:14,737 [32172] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-23 14:13:14,962 [32172] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-23 14:13:15,003 [32172] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-23 14:13:15,004 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-23 14:13:15,004 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,004 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,005 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,005 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,005 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,005 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,005 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,006 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,006 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,006 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,006 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,007 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,007 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,007 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,008 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,008 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-23 14:13:15,008 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,008 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,009 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,009 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,009 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,010 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,010 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,010 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,011 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,011 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,011 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,012 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-23 14:13:15,012 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,012 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-04-23 14:13:15,012 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,013 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,013 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,013 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,014 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-04-23 14:13:15,014 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-04-23 14:13:15,014 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,014 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,015 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,015 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,015 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,015 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,016 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,016 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,016 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,017 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,017 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,017 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,017 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-23 14:13:15,018 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,018 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,018 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:15,019 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,019 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,019 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-23 14:13:15,020 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,020 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,020 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,020 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,021 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,021 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 7.613636363636363
2020-04-23 14:13:15,022 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-23 14:13:15,022 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,022 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,023 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-23 14:13:15,023 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,023 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,023 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,023 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,024 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,024 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,024 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,024 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-23 14:13:15,025 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,025 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,025 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-04-23 14:13:15,025 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 7.698636363636363
2020-04-23 14:13:15,025 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 6.613636363636363
2020-04-23 14:13:15,026 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:15,026 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,026 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,026 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,026 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,027 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,027 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,027 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-04-23 14:13:15,027 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,028 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,028 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,028 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,029 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,029 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,029 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-23 14:13:15,029 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,030 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-04-23 14:13:15,030 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,030 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,031 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,031 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,031 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:15,031 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 4.971363636363637
2020-04-23 14:13:15,032 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,032 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,032 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,032 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,032 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,033 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,033 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,033 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,033 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,033 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:15,034 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,034 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,034 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,034 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-23 14:13:15,034 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,035 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,035 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-23 14:13:15,035 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,035 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,036 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-23 14:13:15,036 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,036 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:15,036 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,036 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,037 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,037 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,037 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,037 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:15,037 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,038 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,038 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,038 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:15,038 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,039 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,039 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:15,039 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:15,039 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,039 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 6.698636363636363
2020-04-23 14:13:15,040 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,040 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 7.8986363636363635
2020-04-23 14:13:15,040 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,041 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,041 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-23 14:13:15,041 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,042 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,042 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,042 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:15,042 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 3.9713636363636367
2020-04-23 14:13:15,043 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,043 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,043 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,043 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,044 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,044 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,044 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,044 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,045 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,045 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,045 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,045 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 7.413636363636363
2020-04-23 14:13:15,045 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,046 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,046 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,046 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,046 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-23 14:13:15,047 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,047 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,047 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,047 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,047 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 6.888636363636364
2020-04-23 14:13:15,048 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,048 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,048 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,048 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,048 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,049 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,049 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,049 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,049 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,049 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,050 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,050 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:15,050 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,050 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,050 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,051 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,051 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,051 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:15,051 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-23 14:13:15,051 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,051 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,052 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,052 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,052 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,052 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,052 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 6.8986363636363635
2020-04-23 14:13:15,053 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-23 14:13:15,053 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,053 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,053 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:15,053 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,054 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,054 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-23 14:13:15,054 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,054 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-23 14:13:15,054 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,055 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,055 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-23 14:13:15,055 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-23 14:13:15,055 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,055 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,056 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,056 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,056 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,056 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,056 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,057 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,057 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:15,057 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,057 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:15,058 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:15,058 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,058 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-23 14:13:15,058 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,059 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,059 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:15,059 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:15,059 [32172] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-04-23 14:13:15,087 [32172] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-23 14:13:47,096 [32172] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-23 14:13:47,096 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-23 14:13:47,096 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,097 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,097 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,097 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,097 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,097 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,098 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,098 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,098 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,098 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,098 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,098 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,099 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,099 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,099 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,099 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-23 14:13:47,099 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,100 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,100 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,100 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,100 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,101 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,101 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,101 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,101 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,101 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,101 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,102 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-23 14:13:47,102 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,102 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-23 14:13:47,102 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,102 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,103 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,103 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,103 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-23 14:13:47,103 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-23 14:13:47,103 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,104 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,104 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,104 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,104 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,104 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,105 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,105 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,105 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,105 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,106 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,106 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,106 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-23 14:13:47,106 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,106 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,107 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:47,107 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,107 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,107 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-23 14:13:47,107 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,108 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,108 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,108 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,108 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,109 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-23 14:13:47,109 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-23 14:13:47,109 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,109 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,109 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-23 14:13:47,110 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,110 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,110 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,110 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,110 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,111 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,111 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,111 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-23 14:13:47,111 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,111 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,112 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-23 14:13:47,112 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-23 14:13:47,112 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-23 14:13:47,112 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:47,113 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,113 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,113 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,113 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,114 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,114 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,114 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,114 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,114 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,115 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,115 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,115 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,115 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,115 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-23 14:13:47,116 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,116 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,116 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,116 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,116 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,117 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,117 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:47,117 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,117 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,117 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,117 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,118 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,118 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,118 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,118 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,118 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,119 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,119 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:47,119 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,119 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,119 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,120 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-23 14:13:47,120 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,120 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,120 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-23 14:13:47,120 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,121 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,121 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-23 14:13:47,121 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,121 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:47,122 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,122 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,122 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,122 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,123 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,123 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:47,123 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,123 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,123 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,124 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:47,124 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,124 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,124 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:47,125 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:47,125 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,125 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-23 14:13:47,126 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,126 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-23 14:13:47,126 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,127 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,127 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-23 14:13:47,127 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,127 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,128 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,128 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:47,128 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,128 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,129 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,129 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,129 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,129 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,129 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,130 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,130 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,130 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,130 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,130 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,131 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-23 14:13:47,131 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,131 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,131 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,131 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,131 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-23 14:13:47,132 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,132 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,132 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,132 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,132 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-23 14:13:47,133 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,133 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,133 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,133 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,133 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,134 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,134 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,134 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,134 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,134 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,135 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,135 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-23 14:13:47,135 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,135 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,135 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,136 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,136 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,136 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:47,136 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-23 14:13:47,136 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,137 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,137 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,137 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,137 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,137 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,137 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-23 14:13:47,138 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-23 14:13:47,138 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,138 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,138 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-23 14:13:47,138 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,139 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,139 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-23 14:13:47,139 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,139 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-23 14:13:47,139 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,140 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,140 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-23 14:13:47,140 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-23 14:13:47,140 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,140 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,141 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,141 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,141 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,142 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,142 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,142 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,142 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-23 14:13:47,143 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,143 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-23 14:13:47,143 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-23 14:13:47,143 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,144 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-23 14:13:47,144 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,144 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,144 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-23 14:13:47,144 [32172] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-23 14:13:47,145 [32172] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-23 17:01:57,407 [27864] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 17:01:57,407 [27864] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 17:01:57,407 [27864] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 17:01:57,409 [27864] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 17:01:57,410 [27864] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 17:01:57,410 [27864] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 17:01:57,919 [27864] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-23 17:01:57,919 [27864] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-23 17:01:57,919 [27864] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-23 17:01:57,921 [27864] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-23 17:01:57,922 [27864] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-23 17:01:57,922 [27864] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-23 17:02:21,773 [27864] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-23 17:02:21,773 [27864] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-23 17:02:21,774 [27864] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-23 17:02:21,776 [27864] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-23 17:02:21,777 [27864] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-23 17:02:21,777 [27864] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-23 17:02:21,778 [27864] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-23 17:02:21,778 [27864] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-23 17:20:12,935 [27864] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-23 17:20:12,937 [27864] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-23 17:20:13,046 [27864] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-23 17:20:13,214 [27864] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-23 17:20:13,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-23 17:20:13,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-23 17:20:13,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-23 17:20:13,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-23 17:20:13,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-23 17:20:13,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-23 17:20:13,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-23 17:20:13,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:13,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-23 17:20:13,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-23 17:20:13,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-23 17:20:13,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-23 17:20:13,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-23 17:20:13,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-23 17:20:13,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-23 17:20:13,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-23 17:20:13,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:13,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-23 17:20:13,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:13,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:13,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-23 17:20:13,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-23 17:20:13,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-23 17:20:13,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:13,239 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,239 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,239 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:13,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:13,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:13,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:13,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-23 17:20:13,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-23 17:20:13,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-23 17:20:13,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:13,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,246 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,246 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,246 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,246 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-23 17:20:13,246 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,247 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,247 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,247 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,247 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-23 17:20:13,248 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,248 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,248 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,248 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,248 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-23 17:20:13,249 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,249 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,249 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,249 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,250 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,250 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,250 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,250 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,250 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,251 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,251 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,251 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:13,251 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,251 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,252 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,252 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,252 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,252 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:13,252 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-23 17:20:13,253 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,253 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,253 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,253 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,253 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,254 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,254 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-23 17:20:13,254 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-23 17:20:13,254 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,254 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,255 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:13,255 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,255 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,255 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-23 17:20:13,256 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,256 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-23 17:20:13,256 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,256 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,257 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-23 17:20:13,257 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-23 17:20:13,257 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,257 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,257 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,258 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,258 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,258 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,258 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,259 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,259 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:13,259 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,259 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:13,259 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:13,260 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,260 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-23 17:20:13,260 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,260 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,261 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:13,261 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:13,261 [27864] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-23 17:20:13,290 [27864] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-23 17:20:27,357 [27864] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-23 17:20:27,358 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-23 17:20:27,358 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,358 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,358 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,359 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,359 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,359 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,359 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,359 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,360 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,360 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,360 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,360 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,361 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,361 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,361 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,362 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-23 17:20:27,362 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,362 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,362 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,362 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,363 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,363 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,363 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,364 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,364 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,364 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,364 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,365 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-23 17:20:27,365 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,365 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-23 17:20:27,365 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,365 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,366 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,366 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,366 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-23 17:20:27,366 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-23 17:20:27,366 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,367 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,367 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,367 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,367 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,368 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,368 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,368 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,368 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,369 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,369 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,369 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,369 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-23 17:20:27,369 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,369 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,370 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:27,370 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,370 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,370 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-23 17:20:27,370 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,371 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,371 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,371 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,371 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,371 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-23 17:20:27,372 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-23 17:20:27,372 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,372 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,372 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-23 17:20:27,373 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,373 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,373 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,373 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,373 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,374 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,374 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,374 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-23 17:20:27,374 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,374 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,375 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-23 17:20:27,375 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-23 17:20:27,375 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-23 17:20:27,375 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:27,375 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,375 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,376 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,376 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,376 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,376 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,376 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,377 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,377 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,377 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,377 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,377 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,378 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,378 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-23 17:20:27,378 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,378 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,378 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,379 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,379 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,379 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,379 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:27,379 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,379 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,380 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,380 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,380 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,380 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,380 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,381 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,381 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,381 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,381 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:27,381 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,381 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,382 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,382 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-23 17:20:27,382 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,382 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,382 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-23 17:20:27,383 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,383 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,383 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-23 17:20:27,383 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,383 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:27,384 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,384 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,384 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,384 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,384 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,385 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:27,385 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,385 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,385 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,385 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:27,386 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,386 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,386 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:27,386 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:27,386 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,386 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-23 17:20:27,387 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,387 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-23 17:20:27,387 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,387 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,387 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-23 17:20:27,388 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,388 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,388 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,388 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:27,388 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,389 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,389 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,389 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,389 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,390 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,390 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,390 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,390 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,390 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,391 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,391 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,391 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-23 17:20:27,391 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,391 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,391 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,392 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,392 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-23 17:20:27,392 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,392 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,392 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,393 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,393 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-23 17:20:27,393 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,393 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,393 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,393 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,394 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,394 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,394 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,394 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,394 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,395 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,395 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,395 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-23 17:20:27,395 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,395 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,396 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,396 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,396 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,396 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:27,396 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-23 17:20:27,397 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,397 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,397 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,397 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,397 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,397 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,398 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-23 17:20:27,398 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-23 17:20:27,398 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,398 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,398 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-23 17:20:27,399 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,399 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,399 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-23 17:20:27,399 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,399 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-23 17:20:27,399 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,400 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,400 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-23 17:20:27,400 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-23 17:20:27,400 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,400 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,401 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,401 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,401 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,401 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,401 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,402 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,402 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-23 17:20:27,402 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,402 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-23 17:20:27,402 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-23 17:20:27,402 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,403 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-23 17:20:27,403 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,403 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,403 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-23 17:20:27,403 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-23 17:20:27,404 [27864] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-23 19:53:24,038 [27864] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  """Entry point for launching an IPython kernel.

2020-04-23 19:53:28,944 [27864] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: UserWarning: Boolean Series key will be reindexed to match DataFrame index.
  """Entry point for launching an IPython kernel.

2020-04-23 22:52:36,191 [27864] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2020-04-23 22:52:36,192 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-23 22:52:36,192 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,192 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,192 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,192 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,192 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,193 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,193 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,193 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,193 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,194 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,194 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,194 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,194 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,194 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,195 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,195 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-23 22:52:36,195 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,195 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,195 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,196 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,196 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,196 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,196 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,196 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,197 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,197 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,197 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,197 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-23 22:52:36,197 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,198 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-23 22:52:36,198 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,198 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,198 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,199 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,199 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-23 22:52:36,199 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-23 22:52:36,199 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,200 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,200 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,200 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,201 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,201 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,201 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,201 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,202 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,202 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,202 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,202 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,202 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-23 22:52:36,203 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,203 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,203 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-23 22:52:36,203 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,204 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,204 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-23 22:52:36,204 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,204 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,204 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,205 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,205 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,205 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-23 22:52:36,205 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-23 22:52:36,206 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,206 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,206 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-23 22:52:36,206 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,207 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,207 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,207 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,207 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,208 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,208 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,208 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-23 22:52:36,208 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,208 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,209 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-23 22:52:36,209 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-23 22:52:36,209 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-23 22:52:36,209 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-23 22:52:36,209 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,210 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,210 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,210 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,210 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,210 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,211 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,211 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,211 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,211 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,211 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,212 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,212 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,212 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-23 22:52:36,212 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,212 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,213 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,213 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,213 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,213 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,213 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-23 22:52:36,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,214 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,215 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-23 22:52:36,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,216 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-23 22:52:36,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,217 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-23 22:52:36,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-23 22:52:36,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-23 22:52:36,218 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,219 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-23 22:52:36,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-23 22:52:36,220 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-23 22:52:36,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-23 22:52:36,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,221 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-23 22:52:36,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-23 22:52:36,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,222 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-23 22:52:36,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-23 22:52:36,223 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,224 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,225 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-23 22:52:36,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,226 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-23 22:52:36,227 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,228 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-23 22:52:36,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,229 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,230 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,231 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-23 22:52:36,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,232 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,233 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-23 22:52:36,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-23 22:52:36,234 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,235 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-23 22:52:36,236 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-23 22:52:36,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,237 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-23 22:52:36,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-23 22:52:36,238 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,239 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-23 22:52:36,239 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,239 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-23 22:52:36,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-23 22:52:36,240 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,241 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,242 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-23 22:52:36,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,243 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-23 22:52:36,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-23 22:52:36,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-23 22:52:36,244 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-23 22:52:36,245 [27864] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-23 22:52:36,245 [27864] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 13:29:21,926 [22448] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-24 13:29:21,926 [22448] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-24 13:29:21,927 [22448] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-24 13:29:21,928 [22448] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-24 13:29:21,929 [22448] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-24 13:29:21,929 [22448] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-24 13:29:31,640 [22448] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-24 13:29:31,641 [22448] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-24 13:29:31,641 [22448] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-24 13:29:31,648 [22448] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-24 13:29:31,649 [22448] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-24 13:29:31,649 [22448] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-24 13:29:31,650 [22448] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-24 13:29:31,650 [22448] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-24 13:39:46,371 [22448] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-24 13:39:46,377 [22448] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-24 13:39:46,584 [22448] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-24 13:39:47,066 [22448] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-24 13:39:52,732 [22448] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-24 13:39:52,755 [22448] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-24 13:39:52,755 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-24 13:39:52,755 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,756 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,756 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,756 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,756 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,756 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,757 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,757 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,757 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,757 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,757 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,757 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,758 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,758 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,758 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,758 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-24 13:39:52,758 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,759 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,759 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,759 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,759 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,759 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,760 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,760 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,760 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,760 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,760 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,761 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-24 13:39:52,761 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,761 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-24 13:39:52,761 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,761 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,762 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,762 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,762 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-24 13:39:52,762 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-24 13:39:52,762 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,763 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,763 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,763 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,763 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,763 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,764 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,764 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,764 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,764 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,764 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,765 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,765 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-24 13:39:52,765 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,765 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,765 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,765 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,766 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,766 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-24 13:39:52,766 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,766 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,766 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,767 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,767 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,767 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-24 13:39:52,767 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-24 13:39:52,767 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,768 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,768 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-24 13:39:52,768 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,768 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,768 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,769 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,769 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,769 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,769 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,770 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-24 13:39:52,770 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,770 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,770 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-24 13:39:52,771 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-24 13:39:52,771 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-24 13:39:52,771 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,771 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,772 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,772 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,772 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,772 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,772 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,773 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,773 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,773 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,773 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,774 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,774 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,774 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,775 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-24 13:39:52,775 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,775 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,775 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,776 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,776 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,776 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,776 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,776 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,777 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,777 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,777 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,778 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,778 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,778 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,778 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,779 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,779 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,779 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,779 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,780 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,780 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,780 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-24 13:39:52,781 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,781 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,781 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-24 13:39:52,781 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,782 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,782 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-24 13:39:52,782 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,783 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,783 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,783 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,784 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,784 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,784 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,784 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,785 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,785 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,785 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,786 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,786 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,786 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,787 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,787 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,787 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,788 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-24 13:39:52,788 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,788 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-24 13:39:52,788 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,789 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,789 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-24 13:39:52,789 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,790 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,790 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,790 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,790 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,791 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,791 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,791 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,792 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,792 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,792 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,792 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,793 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,793 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,793 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,794 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,794 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-24 13:39:52,794 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,794 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,795 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,795 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,795 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-24 13:39:52,795 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,795 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,796 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,796 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,796 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-24 13:39:52,796 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,797 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,797 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,797 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,797 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,798 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,798 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,798 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,798 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,799 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,800 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,800 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,800 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,800 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,800 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,801 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,801 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,801 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,801 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-24 13:39:52,801 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,802 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,802 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,802 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,803 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,803 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,803 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-24 13:39:52,803 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,804 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,804 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,804 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,805 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,805 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,805 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-24 13:39:52,805 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,806 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-24 13:39:52,806 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,806 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,806 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-24 13:39:52,807 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-24 13:39:52,807 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,807 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,807 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,808 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,809 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,809 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,810 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,810 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,810 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,810 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,811 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,811 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,812 [22448] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 13:39:52,821 [22448] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-24 13:39:52,821 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-24 13:39:52,823 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,823 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,823 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,823 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,823 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,823 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,824 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,824 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,824 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,824 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,824 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,825 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,826 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,826 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,826 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,826 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,827 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,827 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,827 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,827 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,827 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,828 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-24 13:39:52,828 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,828 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-24 13:39:52,828 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,828 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,829 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,829 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,829 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-24 13:39:52,829 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-24 13:39:52,829 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,830 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,830 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,830 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,830 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,830 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,830 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,831 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,831 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,831 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,831 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,831 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,832 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-24 13:39:52,832 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,832 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,832 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,832 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,832 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,833 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-24 13:39:52,833 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,833 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,834 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,834 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,834 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,834 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-24 13:39:52,834 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-24 13:39:52,835 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,835 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,835 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-24 13:39:52,835 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,836 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,836 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,836 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,836 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,837 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,837 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,837 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-24 13:39:52,838 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,838 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,838 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-24 13:39:52,838 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-24 13:39:52,838 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-24 13:39:52,839 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,839 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,839 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,839 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,839 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,840 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,840 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,840 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,840 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,841 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,841 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,841 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,841 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,841 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,842 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-24 13:39:52,842 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,842 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,842 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,843 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,843 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,843 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,843 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,843 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,844 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,844 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,844 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,844 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,845 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,845 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,845 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,845 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,845 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,847 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,847 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,847 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,847 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,848 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-24 13:39:52,848 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,848 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,848 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-24 13:39:52,848 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,849 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,849 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-24 13:39:52,849 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,849 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,849 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,850 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,850 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,850 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,850 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,850 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,851 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,852 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,852 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,852 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-24 13:39:52,852 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,853 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-24 13:39:52,853 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,853 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,853 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-24 13:39:52,853 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,854 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,854 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,854 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,854 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,854 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,855 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,856 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,856 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,856 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-24 13:39:52,856 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,856 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,857 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,857 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,857 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-24 13:39:52,857 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,857 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,857 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,858 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,858 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-24 13:39:52,858 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,858 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,858 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,859 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,859 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,859 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,859 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,859 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,859 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,861 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,861 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,861 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-24 13:39:52,861 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,861 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,861 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,862 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,862 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,862 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,862 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-24 13:39:52,862 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-24 13:39:52,863 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-24 13:39:52,864 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,864 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,864 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-24 13:39:52,864 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,864 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,865 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-24 13:39:52,865 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,865 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-24 13:39:52,865 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,865 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,866 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-24 13:39:52,866 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-24 13:39:52,866 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,866 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,866 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,866 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,867 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,867 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,867 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,867 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,867 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-24 13:39:52,868 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,868 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-24 13:39:52,868 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-24 13:39:52,868 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,869 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-24 13:39:52,869 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,869 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,869 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-24 13:39:52,870 [22448] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-24 13:39:52,870 [22448] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 13:40:15,022 [22448] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:16:39,314 [19544] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-24 14:16:39,314 [19544] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-24 14:16:39,314 [19544] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-24 14:16:39,316 [19544] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-24 14:16:39,317 [19544] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-24 14:16:39,317 [19544] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-24 14:16:39,824 [19544] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-24 14:16:39,824 [19544] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-24 14:16:39,824 [19544] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-24 14:16:39,826 [19544] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-24 14:16:39,827 [19544] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-24 14:16:39,827 [19544] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-24 14:16:44,383 [19544] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-24 14:16:44,384 [19544] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-24 14:16:44,385 [19544] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-24 14:16:44,392 [19544] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-24 14:16:44,394 [19544] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-24 14:16:44,394 [19544] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-24 14:16:44,394 [19544] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-24 14:16:44,394 [19544] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-24 14:16:48,588 [19544] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-24 14:16:48,594 [19544] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-24 14:16:48,931 [19544] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-24 14:16:50,444 [19544] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-24 14:16:57,457 [19544] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-24 14:16:57,478 [19544] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-24 14:16:57,479 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-24 14:16:57,479 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,480 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,480 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,480 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,480 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,480 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,481 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,481 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,481 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,481 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,482 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,482 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,482 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,482 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,483 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,483 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-24 14:16:57,483 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,483 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,484 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,484 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,484 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,484 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,485 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,485 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,485 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,485 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,486 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,486 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-24 14:16:57,486 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,486 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-24 14:16:57,486 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,487 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,487 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,487 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,487 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-24 14:16:57,488 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-24 14:16:57,488 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,488 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,488 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,489 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,489 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,489 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,489 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,490 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,490 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,490 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,490 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,491 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,491 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-24 14:16:57,491 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,491 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,492 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,492 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,492 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,492 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-24 14:16:57,493 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,493 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,493 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,493 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,494 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,494 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-24 14:16:57,494 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-24 14:16:57,494 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,495 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,495 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-24 14:16:57,495 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,495 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,496 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,496 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,496 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,496 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,496 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,497 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-24 14:16:57,497 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,497 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,497 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-24 14:16:57,498 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-24 14:16:57,498 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-24 14:16:57,498 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,498 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,498 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,499 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,499 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,499 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,499 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,499 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,500 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,500 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,500 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,500 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,500 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,501 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,501 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-24 14:16:57,501 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,501 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,501 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,502 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,502 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,502 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,502 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,502 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,502 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,503 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,503 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,503 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,503 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,503 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,503 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,504 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,504 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,504 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,504 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,504 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,505 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,505 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-24 14:16:57,505 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,505 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,505 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-24 14:16:57,505 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,506 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,506 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-24 14:16:57,506 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,506 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,506 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,506 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,507 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,507 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,507 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,507 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,507 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,508 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,508 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,508 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,508 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,508 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,508 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,509 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,509 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,509 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-24 14:16:57,509 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,509 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-24 14:16:57,509 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,510 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,510 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-24 14:16:57,510 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,510 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,510 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,510 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,511 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,511 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,511 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,511 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,512 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,512 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,512 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,512 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,512 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,513 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,513 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,513 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,513 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-24 14:16:57,513 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,514 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,514 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,514 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,514 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-24 14:16:57,514 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,515 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,515 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,515 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,515 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-24 14:16:57,515 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,516 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,516 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,516 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,516 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,516 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,516 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,517 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,517 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,517 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,517 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,517 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,517 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,518 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,518 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,518 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,518 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,518 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,518 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-24 14:16:57,519 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,519 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,519 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,519 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,519 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,519 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,520 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-24 14:16:57,520 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,520 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,520 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,520 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,520 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,521 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,521 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-24 14:16:57,521 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,521 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-24 14:16:57,521 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,521 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,522 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-24 14:16:57,522 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-24 14:16:57,522 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,522 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,522 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,522 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,523 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,523 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,523 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,523 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,523 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,524 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,524 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,524 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,524 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,524 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,524 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,525 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,525 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,525 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,525 [19544] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 14:16:57,534 [19544] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-24 14:16:57,534 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-24 14:16:57,534 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,535 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,535 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,535 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,535 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,535 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,535 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,536 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,536 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,536 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,536 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,536 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,536 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,537 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,537 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,537 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-24 14:16:57,537 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,537 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,537 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,538 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,538 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,538 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,538 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,538 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,538 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,539 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,539 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,539 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-24 14:16:57,539 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,539 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-24 14:16:57,539 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,540 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,540 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,540 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,540 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-24 14:16:57,540 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-24 14:16:57,540 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,541 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,541 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,541 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,541 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,541 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,542 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,542 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,542 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,542 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,542 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,542 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,543 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-24 14:16:57,543 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,543 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,543 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,543 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,543 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,544 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-24 14:16:57,544 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,544 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,544 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,544 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,545 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,545 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-24 14:16:57,545 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-24 14:16:57,545 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,546 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,546 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-24 14:16:57,546 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,546 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,546 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,547 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,547 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,547 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,547 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,547 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-24 14:16:57,547 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,548 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,548 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-24 14:16:57,548 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-24 14:16:57,548 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-24 14:16:57,548 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,548 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,549 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,549 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,549 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,549 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,549 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,549 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,550 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,550 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,550 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,550 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,550 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,550 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,551 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-24 14:16:57,551 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,551 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,551 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,551 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,551 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,552 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,552 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,552 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,552 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,552 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,552 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,553 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,553 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,553 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,553 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,553 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,553 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,554 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,554 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,554 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,554 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,554 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-24 14:16:57,554 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,555 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,555 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-24 14:16:57,555 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,555 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,555 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-24 14:16:57,555 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,556 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,556 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,556 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,556 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,556 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,556 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,557 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,557 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,557 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,557 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,557 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,557 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,558 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,558 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,558 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,558 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,558 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-24 14:16:57,559 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,559 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-24 14:16:57,559 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,559 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,559 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-24 14:16:57,560 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,560 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,560 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,560 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,560 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,560 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,561 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,561 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,561 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,561 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,562 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,562 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,562 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,562 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,563 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,563 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,563 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-24 14:16:57,563 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,563 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,564 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,564 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,564 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-24 14:16:57,564 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,564 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,564 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,565 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,565 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-24 14:16:57,565 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,565 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,565 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,565 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,566 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,566 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,566 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,566 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,566 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,566 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,567 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,567 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-24 14:16:57,567 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,567 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,567 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,567 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,568 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,568 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,568 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-24 14:16:57,568 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,568 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,568 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,569 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,569 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,569 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,569 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-24 14:16:57,569 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-24 14:16:57,570 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,570 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,570 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-24 14:16:57,570 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,570 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,570 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-24 14:16:57,571 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,571 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-24 14:16:57,571 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,571 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,571 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-24 14:16:57,571 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-24 14:16:57,572 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,572 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,572 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,572 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,572 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,572 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,573 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,573 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,573 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-24 14:16:57,573 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,573 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-24 14:16:57,573 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-24 14:16:57,574 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,574 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-24 14:16:57,574 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,574 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,574 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-24 14:16:57,574 [19544] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-24 14:16:57,575 [19544] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 14:17:23,260 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:19:01,072 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:20:30,641 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:20:50,213 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:21:49,538 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:22:07,585 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:24:44,759 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:26:14,048 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:26:27,731 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:27:54,055 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:31:53,830 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:42:19,541 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:42:34,755 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 14:44:25,313 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:21:13,750 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:35:08,755 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:35:41,783 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:35:59,445 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:50:05,703 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:50:58,928 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:51:22,730 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:51:29,743 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:51:40,282 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:51:50,225 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:52:03,186 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 15:52:42,837 [19544] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 16:50:31,770 [13668] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-24 16:50:31,770 [13668] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-24 16:50:31,770 [13668] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-24 16:50:31,773 [13668] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-24 16:50:31,774 [13668] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-24 16:50:31,774 [13668] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-24 16:50:32,289 [13668] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-24 16:50:32,289 [13668] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-24 16:50:32,289 [13668] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-24 16:50:32,293 [13668] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-24 16:50:32,294 [13668] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-24 16:50:32,295 [13668] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-24 16:50:42,800 [13668] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-24 16:50:42,801 [13668] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-24 16:50:42,801 [13668] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-24 16:50:42,808 [13668] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-24 16:50:42,810 [13668] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-24 16:50:42,811 [13668] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-24 16:50:42,811 [13668] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-24 16:50:42,811 [13668] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-24 16:50:48,923 [13668] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-24 16:50:48,939 [13668] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-24 16:50:49,142 [13668] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-24 16:50:49,582 [13668] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-24 16:51:00,973 [13668] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,006 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,007 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,007 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,007 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,009 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,010 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,010 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,010 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,010 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,012 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,013 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,013 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,013 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-24 16:51:01,013 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-24 16:51:01,013 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,014 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,014 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,014 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,014 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,015 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,015 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,015 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,015 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,015 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,016 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,016 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,016 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-24 16:51:01,016 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,017 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,017 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,017 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,017 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,017 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-24 16:51:01,018 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,018 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,018 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,018 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,019 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,019 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-24 16:51:01,019 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-24 16:51:01,019 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,019 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,020 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-24 16:51:01,020 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,020 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,020 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,020 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,021 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,021 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,021 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,021 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-24 16:51:01,022 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,022 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,022 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-24 16:51:01,022 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-24 16:51:01,022 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,024 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,039 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,039 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,039 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,039 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,040 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,040 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,040 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,040 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,040 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,041 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,041 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,041 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,041 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-24 16:51:01,041 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,042 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,042 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,042 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,042 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-24 16:51:01,043 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,043 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,043 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,043 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,043 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-24 16:51:01,044 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,044 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,044 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,044 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,045 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,045 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,045 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,045 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,046 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,046 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,046 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,046 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,047 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,047 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,047 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,047 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,048 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,048 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,048 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-24 16:51:01,048 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,048 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,049 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,049 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,049 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,049 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,050 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-24 16:51:01,050 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,050 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,050 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,051 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,051 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,051 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,052 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-24 16:51:01,052 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,052 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-24 16:51:01,052 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,053 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,053 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-24 16:51:01,053 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-24 16:51:01,053 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,054 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,054 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,054 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,054 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,055 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,055 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,055 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,056 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,056 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,056 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,057 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,073 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,088 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,091 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,091 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,091 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,091 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,091 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-24 16:51:01,092 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,092 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,092 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-24 16:51:01,092 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,092 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,093 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-24 16:51:01,093 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,093 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,093 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,093 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,094 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,094 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,094 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,094 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,094 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,094 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,095 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,095 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,095 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,095 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,095 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,096 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,096 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,096 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-24 16:51:01,096 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,096 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-24 16:51:01,096 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,097 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,097 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-24 16:51:01,097 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,097 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,097 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,098 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,098 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,098 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,098 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,098 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,099 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,099 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,099 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,099 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,099 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,099 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,100 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,100 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,100 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-24 16:51:01,100 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,100 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,101 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,101 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,101 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-24 16:51:01,101 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,101 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,101 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,102 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,102 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-24 16:51:01,102 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,102 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,102 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,102 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,103 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,103 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,103 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,103 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,103 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,104 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,104 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,104 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-24 16:51:01,104 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,104 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,104 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,105 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,105 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,105 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,105 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-24 16:51:01,105 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,106 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,106 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,106 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,106 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,106 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,106 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-24 16:51:01,107 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-24 16:51:01,107 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,107 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,107 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-24 16:51:01,108 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,108 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,108 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-24 16:51:01,108 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,108 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-24 16:51:01,109 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,109 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,109 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-24 16:51:01,109 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-24 16:51:01,109 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,110 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,110 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,110 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,110 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,110 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,111 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,111 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,111 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-24 16:51:01,111 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,112 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-24 16:51:01,112 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-24 16:51:01,112 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,112 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-24 16:51:01,112 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,113 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,113 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-24 16:51:01,113 [13668] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-24 16:51:01,113 [13668] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-24 17:03:23,317 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 17:10:16,343 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 17:20:47,464 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 17:28:58,498 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 17:29:30,924 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 17:29:45,087 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 17:31:00,933 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 18:03:01,567 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 18:05:28,385 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 18:05:56,472 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 18:22:15,344 [13668] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\networkx\algorithms\centrality\subgraph_alg.py:246: RuntimeWarning: invalid value encountered in true_divide
  B = (expA - scipy.linalg.expm(A.A)) / expA

2020-04-24 18:25:25,657 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 18:25:54,808 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 18:27:47,612 [13668] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\networkx\algorithms\centrality\subgraph_alg.py:246: RuntimeWarning: invalid value encountered in true_divide
  B = (expA - scipy.linalg.expm(A.A)) / expA

2020-04-24 19:45:18,204 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 19:46:32,061 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 19:47:38,154 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:16:36,334 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:17:00,692 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:20:06,270 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:21:19,703 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:22:19,489 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:25:25,624 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:26:26,507 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:27:01,964 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-24 20:59:16,092 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-25 01:14:34,166 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-25 01:24:06,156 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-25 01:34:51,999 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-25 01:46:25,170 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-25 10:08:53,138 [13668] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 10:11:08,158 [13668] ERROR    asyncio:1608: [JupyterRequire] Exception in callback BaseSelectorEventLoop._read_from_self()
handle: <Handle BaseSelectorEventLoop._read_from_self()>
Traceback (most recent call last):
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\selector_events.py", line 114, in _read_from_self
    data = self._ssock.recv(4096)
ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host
2020-04-26 10:11:08,158 [13668] ERROR    asyncio:1608: [JupyterRequire] Exception in callback BaseSelectorEventLoop._read_from_self()
handle: <Handle BaseSelectorEventLoop._read_from_self()>
Traceback (most recent call last):
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\selector_events.py", line 114, in _read_from_self
    data = self._ssock.recv(4096)
ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host
2020-04-26 11:57:23,115 [23208] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-26 11:57:23,115 [23208] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-26 11:57:23,115 [23208] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-26 11:57:23,118 [23208] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-26 11:57:23,118 [23208] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-26 11:57:23,119 [23208] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-26 11:57:23,905 [23208] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-26 11:57:23,905 [23208] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-26 11:57:23,905 [23208] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-26 11:57:23,907 [23208] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-26 11:57:23,907 [23208] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-26 11:57:23,908 [23208] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-26 11:57:27,856 [23208] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-26 11:57:27,856 [23208] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-26 11:57:27,857 [23208] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-26 11:57:27,863 [23208] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-26 11:57:27,865 [23208] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-26 11:57:27,865 [23208] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-26 11:57:27,865 [23208] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-26 11:57:27,866 [23208] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-26 12:19:23,414 [23208] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-26 12:19:23,420 [23208] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-26 12:19:23,621 [23208] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-26 12:19:23,790 [23208] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-26 12:19:27,037 [23208] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-26 12:19:27,083 [23208] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-26 12:19:27,084 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-26 12:19:27,084 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,084 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,085 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,085 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,085 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,086 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,086 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,086 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,086 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,087 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,087 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,087 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,088 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,088 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,088 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,088 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-26 12:19:27,089 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,089 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,089 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,090 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,090 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,091 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,091 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,091 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,092 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,092 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,092 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,092 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-26 12:19:27,093 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,093 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-26 12:19:27,093 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,093 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,093 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,094 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,094 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-26 12:19:27,094 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-26 12:19:27,094 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,094 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,095 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,095 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,095 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,095 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,095 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,096 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,096 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,096 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,097 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,097 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,097 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-26 12:19:27,097 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,098 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,098 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,098 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,098 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,099 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-26 12:19:27,099 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,099 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,099 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,100 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,100 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,100 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-26 12:19:27,100 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-26 12:19:27,101 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,101 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,101 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-26 12:19:27,101 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,102 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,102 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,102 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,103 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,103 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,103 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,104 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-26 12:19:27,104 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,104 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,104 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-26 12:19:27,105 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-26 12:19:27,105 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-26 12:19:27,105 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,105 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,106 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,106 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,106 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,106 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,107 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,107 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,107 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,107 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,107 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,108 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,108 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,108 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,108 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-26 12:19:27,108 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,108 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,109 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,109 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,109 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,109 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,109 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,110 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,110 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,110 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,110 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,110 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,111 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,111 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,111 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,111 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,111 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,112 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,112 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,112 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,112 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,113 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-26 12:19:27,113 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,113 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,113 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-26 12:19:27,114 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,114 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,114 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-26 12:19:27,114 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,114 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,115 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,115 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,115 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,115 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,115 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,116 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,116 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,116 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,116 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,116 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,116 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,117 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,117 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,117 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,117 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,117 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-26 12:19:27,118 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,118 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-26 12:19:27,118 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,118 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,118 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-26 12:19:27,119 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,119 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,119 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,119 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,120 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,120 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,120 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,120 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,120 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,121 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,121 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,121 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,121 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,121 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,122 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,122 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,122 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-26 12:19:27,122 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,122 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,123 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,123 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,123 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-26 12:19:27,123 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,123 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,123 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,124 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,124 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-26 12:19:27,124 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,124 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,124 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,125 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,125 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,125 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,125 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,125 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,126 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,126 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,126 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,126 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,126 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,127 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,127 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,127 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,127 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,127 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,127 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-26 12:19:27,128 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,128 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,128 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,128 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,128 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,129 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,129 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-26 12:19:27,129 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,129 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,130 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,130 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,130 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,130 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,130 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-26 12:19:27,130 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,131 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-26 12:19:27,131 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,131 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,131 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-26 12:19:27,131 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-26 12:19:27,132 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,132 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,132 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,132 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,132 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,132 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,133 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,133 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,133 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,133 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,134 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,134 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,134 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,134 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,134 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,135 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,135 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,135 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,135 [23208] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-26 12:19:27,143 [23208] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-26 12:19:27,144 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-26 12:19:27,144 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,144 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,144 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,144 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,145 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,145 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,145 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,145 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,145 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,146 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,146 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,146 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,146 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,146 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,147 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,147 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-26 12:19:27,147 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,147 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,147 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,147 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,148 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,148 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,148 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,148 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,148 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,149 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,149 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,149 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-26 12:19:27,149 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,150 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-26 12:19:27,150 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,150 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,150 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,151 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,151 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-26 12:19:27,151 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-26 12:19:27,151 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,152 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,152 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,152 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,152 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,153 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,153 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,153 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,153 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,153 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,154 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,154 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,154 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-26 12:19:27,154 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,154 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,155 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,155 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,155 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,155 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-26 12:19:27,155 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,156 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,156 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,156 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,156 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,157 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-26 12:19:27,157 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-26 12:19:27,157 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,157 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,158 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-26 12:19:27,158 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,158 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,158 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,158 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,159 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,159 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,159 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,159 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-26 12:19:27,160 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,160 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,160 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-26 12:19:27,160 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-26 12:19:27,161 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-26 12:19:27,161 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,161 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,161 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,161 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,162 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,162 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,162 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,162 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,162 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,163 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,163 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,163 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,163 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,164 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,164 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-26 12:19:27,164 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,164 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,165 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,165 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,165 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,165 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,166 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,166 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,166 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,166 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,166 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,167 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,167 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,167 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,167 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,167 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,167 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,168 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,168 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,168 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,168 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,168 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-26 12:19:27,169 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,169 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,169 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-26 12:19:27,169 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,170 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,170 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-26 12:19:27,170 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,171 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,171 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,171 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,171 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,172 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,172 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,172 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,172 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,172 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,172 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,173 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,173 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,173 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,173 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,173 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,174 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,174 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-26 12:19:27,174 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,174 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-26 12:19:27,174 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,175 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,175 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-26 12:19:27,175 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,175 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,175 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,176 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,176 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,176 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,176 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,176 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,177 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,177 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,177 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,177 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,177 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,177 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,178 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,178 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,178 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-26 12:19:27,178 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,178 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,179 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,179 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,179 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-26 12:19:27,179 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,179 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,180 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,180 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,180 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-26 12:19:27,180 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,180 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,181 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,181 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,181 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,181 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,181 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,181 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,182 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,182 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,182 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,182 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-26 12:19:27,182 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,183 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,183 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,183 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,183 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,183 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,184 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-26 12:19:27,184 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,184 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,184 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,184 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,184 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,185 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,185 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-26 12:19:27,185 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-26 12:19:27,185 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,185 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,186 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-26 12:19:27,186 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,186 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,186 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-26 12:19:27,186 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,187 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-26 12:19:27,187 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,187 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,187 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-26 12:19:27,187 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-26 12:19:27,188 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,188 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,188 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,188 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,188 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,189 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,189 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,189 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,189 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-26 12:19:27,190 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,190 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-26 12:19:27,190 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-26 12:19:27,190 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,191 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-26 12:19:27,191 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,191 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,191 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-26 12:19:27,192 [23208] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-26 12:19:27,192 [23208] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-26 12:21:13,939 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 13:01:22,382 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 13:23:34,610 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 13:28:36,377 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 14:18:38,830 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 18:07:49,554 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 18:21:09,338 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 22:04:44,221 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 22:18:45,333 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 22:53:22,785 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-26 22:57:27,749 [23208] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 10:12:18,365 [24056] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-27 10:12:18,365 [24056] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-27 10:12:18,366 [24056] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-27 10:12:18,368 [24056] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-27 10:12:18,369 [24056] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-27 10:12:18,369 [24056] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-27 10:12:19,084 [24056] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-27 10:12:19,084 [24056] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-27 10:12:19,084 [24056] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-27 10:12:19,086 [24056] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-27 10:12:19,086 [24056] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-27 10:12:19,087 [24056] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-27 10:12:36,329 [24056] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\jedi\api\interpreter.py
2020-04-27 10:12:36,335 [24056] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\IPython\core\autocall.py
2020-04-27 10:12:36,400 [24056] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\IPython\core\interactiveshell.py
2020-04-27 10:12:36,791 [24056] DEBUG    parso.cache:126: [JupyterRequire] pickle loaded: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\memoization\memoization.py
2020-04-27 10:15:46,015 [24056] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-27 10:15:46,015 [24056] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-27 10:15:46,016 [24056] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-27 10:15:46,024 [24056] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-27 10:15:46,026 [24056] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-27 10:15:46,026 [24056] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-27 10:15:46,026 [24056] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-27 10:15:46,027 [24056] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'jedi.evaluate.stdlib', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-27 10:43:29,730 [24056] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-27 10:43:29,736 [24056] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-27 10:43:29,932 [24056] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-27 10:43:30,081 [24056] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-27 10:43:40,989 [24056] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-27 10:43:40,990 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-27 10:43:40,991 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,991 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:40,992 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,992 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:40,992 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,993 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,993 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,993 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,994 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:40,994 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,994 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,995 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,995 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,995 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,995 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,995 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-27 10:43:40,996 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,996 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,996 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:40,996 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,997 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:43:40,997 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,997 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,997 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,998 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,998 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:40,998 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,998 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-27 10:43:40,998 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:40,999 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-27 10:43:40,999 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:40,999 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:40,999 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,000 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,000 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-27 10:43:41,000 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-27 10:43:41,000 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,000 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,001 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,001 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,001 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,001 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,002 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,002 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,002 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,002 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,003 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,003 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,003 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-27 10:43:41,004 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,004 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,004 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-27 10:43:41,004 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,005 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,005 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-27 10:43:41,005 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,005 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,005 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,006 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,006 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,006 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-27 10:43:41,007 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-27 10:43:41,007 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,007 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,008 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-27 10:43:41,008 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,008 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,008 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,008 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,009 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,009 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,009 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,009 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-27 10:43:41,009 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,009 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,010 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-27 10:43:41,010 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-27 10:43:41,010 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-27 10:43:41,010 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:43:41,011 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,011 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,011 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,011 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-27 10:43:41,011 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,011 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,012 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,012 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,012 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,012 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,012 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,013 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,013 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,013 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-27 10:43:41,013 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,013 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,013 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,014 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,014 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,014 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,014 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-27 10:43:41,014 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,015 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,015 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,015 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,015 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,015 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,016 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,016 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,016 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,016 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,016 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-27 10:43:41,017 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,017 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,017 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,018 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-27 10:43:41,018 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,018 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,018 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-27 10:43:41,018 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,019 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,019 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-27 10:43:41,019 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,020 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-27 10:43:41,020 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,020 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,020 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,021 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,021 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,022 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-27 10:43:41,022 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,022 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,023 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,023 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-27 10:43:41,024 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,024 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,024 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:43:41,025 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-27 10:43:41,025 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,025 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-27 10:43:41,026 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,026 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-27 10:43:41,026 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,027 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,027 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-27 10:43:41,027 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,027 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,028 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,028 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-27 10:43:41,028 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,029 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,029 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,029 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,030 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,030 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,030 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,031 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,031 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,032 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,032 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,033 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,033 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-27 10:43:41,034 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,034 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,034 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,035 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,035 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-27 10:43:41,035 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,036 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,036 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,036 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,037 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-27 10:43:41,037 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,037 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,038 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,038 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,038 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,039 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,039 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,039 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,040 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,040 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,041 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,041 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-27 10:43:41,041 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,042 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,042 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,042 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,042 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,043 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:43:41,043 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-27 10:43:41,043 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,044 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,044 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,044 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,044 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,044 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,045 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-27 10:43:41,045 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-27 10:43:41,045 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,045 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,046 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:43:41,046 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,046 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,046 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-27 10:43:41,047 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,047 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-27 10:43:41,047 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,048 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,048 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-27 10:43:41,048 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-27 10:43:41,048 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,049 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,049 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,049 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,049 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,050 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,050 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,050 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,051 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:43:41,051 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,051 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-27 10:43:41,051 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:43:41,052 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,052 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-27 10:43:41,052 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,052 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,052 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-27 10:43:41,053 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:43:41,053 [24056] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-27 10:59:36,060 [24056] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-27 10:59:36,088 [24056] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-27 10:59:36,089 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-27 10:59:36,089 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,089 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,089 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,090 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,090 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,090 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,090 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,090 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,091 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,091 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,091 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,091 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,091 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,092 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,092 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,092 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-27 10:59:36,092 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,092 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,092 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,093 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,093 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,093 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,093 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,093 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,094 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,094 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,094 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,094 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-27 10:59:36,094 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,095 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-27 10:59:36,095 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,095 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,095 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,095 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,096 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-27 10:59:36,096 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-27 10:59:36,096 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,096 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,096 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,097 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,097 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,097 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,097 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,098 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,098 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,098 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,098 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,098 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,099 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-27 10:59:36,099 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,099 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,100 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-27 10:59:36,100 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,100 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,101 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-27 10:59:36,101 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,101 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,102 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,102 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,102 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,103 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-27 10:59:36,103 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-27 10:59:36,104 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,104 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,104 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-27 10:59:36,104 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,105 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,105 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,105 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,106 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,106 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,106 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,107 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-27 10:59:36,107 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,107 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,108 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-27 10:59:36,108 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-27 10:59:36,108 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-27 10:59:36,108 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:59:36,109 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,109 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,109 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,109 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,110 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,110 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,110 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,111 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,111 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,111 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,111 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,111 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,112 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,112 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-27 10:59:36,112 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,112 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,112 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,113 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,113 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,113 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,113 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-27 10:59:36,113 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,114 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,114 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,114 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,115 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,115 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,115 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,115 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,116 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,116 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,116 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-27 10:59:36,116 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,117 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,117 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,117 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-27 10:59:36,117 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,118 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,118 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-27 10:59:36,118 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,118 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,118 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-27 10:59:36,119 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,119 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-27 10:59:36,119 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,119 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,119 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,120 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,120 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,120 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-27 10:59:36,121 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,121 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,121 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,121 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-27 10:59:36,122 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,122 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,122 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:59:36,123 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-27 10:59:36,123 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,123 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-27 10:59:36,123 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,123 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-27 10:59:36,124 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,124 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,124 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-27 10:59:36,125 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,125 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,125 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,125 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-27 10:59:36,126 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,126 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,126 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,126 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,126 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,127 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,127 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,127 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,127 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,128 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,128 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,128 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,128 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-27 10:59:36,129 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,129 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,129 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,129 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,130 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-27 10:59:36,130 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,130 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,130 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,131 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,131 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-27 10:59:36,131 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,131 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,132 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,132 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,132 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,132 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,133 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,133 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,133 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,134 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,134 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,134 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-27 10:59:36,134 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,135 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,135 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,135 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,135 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,136 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:59:36,136 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-27 10:59:36,136 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,137 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,137 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,137 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,137 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,138 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,138 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-27 10:59:36,138 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-27 10:59:36,138 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,138 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,139 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-27 10:59:36,139 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,139 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,139 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-27 10:59:36,139 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,139 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-27 10:59:36,140 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,140 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,140 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-27 10:59:36,140 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-27 10:59:36,141 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,141 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,141 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,141 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,142 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,142 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,142 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,142 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,142 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-27 10:59:36,143 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,143 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-27 10:59:36,143 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-27 10:59:36,143 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,143 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-27 10:59:36,144 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,144 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,144 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-27 10:59:36,144 [24056] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-27 10:59:36,144 [24056] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-27 11:06:02,431 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 12:35:04,704 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 13:00:11,511 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 13:22:27,137 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 13:38:06,854 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 13:49:33,549 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 14:13:57,430 [24056] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  """Entry point for launching an IPython kernel.

2020-04-27 14:14:07,658 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 14:15:07,036 [24056] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  """Entry point for launching an IPython kernel.

2020-04-27 14:15:21,806 [24056] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  """Entry point for launching an IPython kernel.

2020-04-27 14:15:54,772 [24056] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame.
Try using .loc[row_indexer,col_indexer] = value instead

See the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/indexing.html#indexing-view-versus-copy
  """Entry point for launching an IPython kernel.

2020-04-27 14:15:55,952 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 14:20:16,761 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 14:22:37,294 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:48:08,271 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:50:49,398 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:51:11,988 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:56:00,411 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:57:06,032 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:57:34,442 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:57:51,409 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 20:58:03,997 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 21:04:58,622 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 21:45:08,385 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 21:45:19,661 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 22:22:20,224 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-27 23:03:15,464 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 09:32:43,416 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 09:53:40,828 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 09:59:54,253 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:04:40,393 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:08:35,130 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:09:41,688 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:10:16,858 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:10:53,300 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:11:02,968 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:11:41,570 [24056] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:13:03,194 [23416] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-28 10:13:03,195 [23416] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-28 10:13:03,195 [23416] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-28 10:13:03,197 [23416] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-28 10:13:03,197 [23416] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-28 10:13:03,198 [23416] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-28 10:13:03,813 [23416] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-28 10:13:03,814 [23416] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-28 10:13:03,814 [23416] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-28 10:13:03,815 [23416] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-28 10:13:03,816 [23416] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-28 10:13:03,816 [23416] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-28 10:13:07,566 [23416] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-28 10:13:07,567 [23416] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-28 10:13:07,567 [23416] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-28 10:13:07,574 [23416] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-28 10:13:07,575 [23416] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-28 10:13:07,575 [23416] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-28 10:13:07,575 [23416] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-28 10:13:07,576 [23416] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-28 10:13:40,663 [23416] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-28 10:13:40,669 [23416] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-28 10:13:40,872 [23416] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-28 10:13:41,345 [23416] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-28 10:13:43,544 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-28 10:13:43,604 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-28 10:13:43,605 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 10:13:43,605 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 10:13:43,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-28 10:13:43,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,614 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-28 10:13:43,614 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,614 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,614 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-28 10:13:43,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-28 10:13:43,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 10:13:43,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 10:13:43,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-28 10:13:43,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 10:13:43,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 10:13:43,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 10:13:43,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-28 10:13:43,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-28 10:13:43,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-28 10:13:43,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 10:13:43,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 10:13:43,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 10:13:43,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 10:13:43,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-28 10:13:43,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-28 10:13:43,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 10:13:43,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-28 10:13:43,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 10:13:43,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-28 10:13:43,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 10:13:43,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-28 10:13:43,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 10:13:43,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 10:13:43,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 10:13:43,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 10:13:43,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,656 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-28 10:13:43,664 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-28 10:13:43,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 10:13:43,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 10:13:43,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-28 10:13:43,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-28 10:13:43,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-28 10:13:43,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-28 10:13:43,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 10:13:43,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 10:13:43,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-28 10:13:43,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 10:13:43,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 10:13:43,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 10:13:43,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-28 10:13:43,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-28 10:13:43,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-28 10:13:43,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 10:13:43,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 10:13:43,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 10:13:43,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 10:13:43,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,692 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,692 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,692 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-28 10:13:43,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-28 10:13:43,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 10:13:43,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-28 10:13:43,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 10:13:43,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-28 10:13:43,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 10:13:43,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 10:13:43,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-28 10:13:43,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 10:13:43,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 10:13:43,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 10:13:43,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 10:13:43,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 10:13:43,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 10:13:43,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 10:13:43,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 10:13:43,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 10:13:43,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 10:13:43,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 10:13:43,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 10:13:43,712 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-28 10:14:11,772 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:15:18,385 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:15:39,544 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:16:41,871 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:18:05,952 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:20:01,741 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:20:49,256 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:23:19,634 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:23:53,675 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 10:24:09,988 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 18:08:38,782 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:247: FutureWarning: behaviour="old" is deprecated and will be removed in version 0.22. Please use behaviour="new", which makes the decision_function change to match other anomaly detection algorithm API.
  FutureWarning)

2020-04-28 18:08:38,922 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:415: DeprecationWarning: threshold_ attribute is deprecated in 0.20 and will be removed in 0.22.
  " be removed in 0.22.", DeprecationWarning)

2020-04-28 18:09:44,831 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:247: FutureWarning: behaviour="old" is deprecated and will be removed in version 0.22. Please use behaviour="new", which makes the decision_function change to match other anomaly detection algorithm API.
  FutureWarning)

2020-04-28 18:09:44,978 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:415: DeprecationWarning: threshold_ attribute is deprecated in 0.20 and will be removed in 0.22.
  " be removed in 0.22.", DeprecationWarning)

2020-04-28 18:10:04,574 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:237: FutureWarning: default contamination parameter 0.1 will change in version 0.22 to "auto". This will change the predict method behavior.
  FutureWarning)

2020-04-28 18:10:04,575 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:247: FutureWarning: behaviour="old" is deprecated and will be removed in version 0.22. Please use behaviour="new", which makes the decision_function change to match other anomaly detection algorithm API.
  FutureWarning)

2020-04-28 18:10:09,071 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:247: FutureWarning: behaviour="old" is deprecated and will be removed in version 0.22. Please use behaviour="new", which makes the decision_function change to match other anomaly detection algorithm API.
  FutureWarning)

2020-04-28 18:10:09,209 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:415: DeprecationWarning: threshold_ attribute is deprecated in 0.20 and will be removed in 0.22.
  " be removed in 0.22.", DeprecationWarning)

2020-04-28 18:11:20,809 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:237: FutureWarning: default contamination parameter 0.1 will change in version 0.22 to "auto". This will change the predict method behavior.
  FutureWarning)

2020-04-28 18:11:20,809 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:247: FutureWarning: behaviour="old" is deprecated and will be removed in version 0.22. Please use behaviour="new", which makes the decision_function change to match other anomaly detection algorithm API.
  FutureWarning)

2020-04-28 18:11:20,943 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:415: DeprecationWarning: threshold_ attribute is deprecated in 0.20 and will be removed in 0.22.
  " be removed in 0.22.", DeprecationWarning)

2020-04-28 18:12:10,836 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\ensemble\iforest.py:247: FutureWarning: behaviour="old" is deprecated and will be removed in version 0.22. Please use behaviour="new", which makes the decision_function change to match other anomaly detection algorithm API.
  FutureWarning)

2020-04-28 18:40:18,019 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:18,019 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:18,022 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:18,022 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:18,026 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:18,027 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:18,028 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:18,028 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:18,028 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:18,029 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:18,060 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,060 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,061 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,061 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2020-04-28 18:40:18,061 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,061 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 1.335
2020-04-28 18:40:18,061 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,062 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,062 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,062 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,062 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,062 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,062 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,063 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,063 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,063 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,063 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,063 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,064 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,064 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,064 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,065 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,065 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,065 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,065 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,065 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,065 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,066 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,066 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,066 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,066 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,066 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,067 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,067 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,067 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,067 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,067 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,068 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,068 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,068 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,068 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,068 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,069 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,069 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,069 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,069 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,069 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,070 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,070 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,070 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,070 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,070 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,070 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,071 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,071 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,071 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,071 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,071 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,072 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,072 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,072 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,072 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,072 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,072 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,073 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,073 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,073 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,073 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,073 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,073 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,074 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,074 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,074 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,074 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,074 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,075 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,075 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,075 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,075 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,076 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,076 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,076 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,076 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,076 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,076 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,077 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,077 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,077 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,077 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,077 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,077 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,078 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,078 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,078 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,078 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,078 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,078 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,079 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,079 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,079 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,079 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,079 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,080 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,080 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,080 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,080 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,080 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,080 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,081 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,081 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,081 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,081 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,081 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,081 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,082 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,082 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,082 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,082 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,082 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,082 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,083 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,083 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,083 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,083 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,083 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,083 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,084 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,084 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,084 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,084 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,084 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,085 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,085 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,085 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,085 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,085 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,085 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,086 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,086 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,086 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,086 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,087 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,087 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,087 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,087 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,087 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,087 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,088 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,088 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,088 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,088 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,088 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,088 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,089 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,089 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,089 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,089 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,089 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,089 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,090 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,090 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,090 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,090 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,090 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,091 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,091 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,091 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,091 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,091 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,091 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,092 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,092 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,092 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,092 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,092 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,092 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,093 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,093 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,093 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,093 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,093 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,093 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,094 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,094 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,094 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,094 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,094 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,094 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,095 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,095 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,095 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,095 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,096 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,097 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,097 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,097 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,097 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,097 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,098 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,098 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,098 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,098 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,098 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,099 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,099 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,099 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,099 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,099 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,103 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf') with score of 0.050000.
2020-04-28 18:40:18,104 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-28 18:40:18,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2020-04-28 18:40:18,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 1.05
2020-04-28 18:40:18,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-28 18:40:18,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 1.335
2020-04-28 18:40:18,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-28 18:40:18,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-28 18:40:18,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 10.145
2020-04-28 18:40:18,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 11.145
2020-04-28 18:40:18,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 10.25
2020-04-28 18:40:18,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 11.24
2020-04-28 18:40:18,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 11.145
2020-04-28 18:40:18,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 11.25
2020-04-28 18:40:18,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 11.24
2020-04-28 18:40:18,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 10.145
2020-04-28 18:40:18,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 10.525
2020-04-28 18:40:18,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 10.535
2020-04-28 18:40:18,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 11.525
2020-04-28 18:40:18,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 10.24
2020-04-28 18:40:18,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 11.535
2020-04-28 18:40:18,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 11.525
2020-04-28 18:40:18,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 10.145
2020-04-28 18:40:18,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,145 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,145 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,145 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,145 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,145 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,145 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,146 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,146 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,146 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,146 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,146 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf') with score of 0.050000.
2020-04-28 18:40:18,147 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2020-04-28 18:40:18,148 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2020-04-28 18:40:18,148 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,148 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2020-04-28 18:40:18,148 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,148 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 1.0
2020-04-28 18:40:18,148 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,149 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,149 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,149 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,149 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,149 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,150 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,150 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,150 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 0.33499999999999996
2020-04-28 18:40:18,150 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,150 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,151 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.0
2020-04-28 18:40:18,151 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,151 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,151 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2020-04-28 18:40:18,151 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,152 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,152 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,152 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,152 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,153 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,153 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,153 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 0.0
2020-04-28 18:40:18,153 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXGeneral ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf') with score of 0.000000.
2020-04-28 18:40:18,154 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,154 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,154 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,154 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,154 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,155 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,155 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,155 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,155 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,155 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,155 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,156 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,156 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,156 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,156 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,156 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,156 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,157 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,157 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,157 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,157 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2020-04-28 18:40:18,157 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,157 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,158 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,158 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,158 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,158 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,158 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 1.335
2020-04-28 18:40:18,159 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,159 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,159 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,159 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,159 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,159 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,160 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,160 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,160 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,160 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,160 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,161 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,161 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,161 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,161 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,161 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,161 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,162 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,162 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,162 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,162 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,162 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,162 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,163 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,163 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,163 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,163 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,163 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,164 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,164 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,164 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,164 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,164 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,164 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,165 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,165 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,165 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,165 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,165 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,166 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,166 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,166 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,166 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,166 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,166 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,167 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,167 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,167 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,167 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,168 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,168 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,168 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,168 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,169 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,169 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,169 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,170 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,170 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,170 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,170 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,170 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,171 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,171 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,171 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,171 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,172 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,172 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,172 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,172 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,172 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,173 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,173 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,173 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,173 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,173 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,174 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,174 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,174 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,175 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,175 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,175 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,175 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,175 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,176 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,176 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,176 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,176 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,176 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,177 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,177 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,177 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,177 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,177 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,178 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,178 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,178 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,178 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,178 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,179 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,179 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,179 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,179 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,179 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,180 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,180 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,180 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,180 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,181 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,181 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,181 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,181 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,181 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,181 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,182 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,182 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,182 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,182 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,182 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,182 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,183 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,183 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,183 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,183 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,183 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,184 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,184 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,184 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,184 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,184 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,185 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,185 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,185 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,185 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,186 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,186 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,186 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,186 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,187 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,187 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,187 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,187 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,188 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,188 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,188 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,188 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,188 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,189 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,189 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,189 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,189 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,189 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,190 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,190 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,190 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,190 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,191 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,191 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,191 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,191 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,191 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,192 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,192 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,192 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,192 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,192 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,193 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,193 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,193 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,193 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,194 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,194 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,194 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,194 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,194 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,195 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,195 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,195 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,195 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,196 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,196 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,196 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,196 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,197 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,197 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,197 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,197 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,197 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,198 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,198 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,198 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,198 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,198 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,199 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,199 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,199 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,199 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,199 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,200 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,200 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,200 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,200 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,200 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,200 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf') with score of 0.050000.
2020-04-28 18:40:18,201 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,201 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-28 18:40:18,202 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,202 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,202 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,202 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,202 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 1.05
2020-04-28 18:40:18,203 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,203 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,203 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,203 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,203 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,204 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,204 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,204 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,204 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,204 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,204 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-28 18:40:18,205 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,205 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 1.335
2020-04-28 18:40:18,205 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2020-04-28 18:40:18,205 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,205 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,205 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,206 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,206 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,206 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,206 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,206 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,206 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,207 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,207 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,207 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,207 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,207 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,208 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,208 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-28 18:40:18,208 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-28 18:40:18,208 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,208 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,209 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,209 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,209 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,209 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,209 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,209 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,210 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,210 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,210 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,210 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,210 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 10.145
2020-04-28 18:40:18,211 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,211 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,211 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,211 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,211 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,211 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 11.145
2020-04-28 18:40:18,212 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,212 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,212 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,212 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,212 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,213 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 10.25
2020-04-28 18:40:18,213 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,213 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,213 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,213 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 11.24
2020-04-28 18:40:18,213 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,214 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,214 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,214 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,214 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,214 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,214 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,215 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 11.145
2020-04-28 18:40:18,215 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,215 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,215 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,215 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,215 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 11.25
2020-04-28 18:40:18,216 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,216 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,216 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,216 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,216 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,216 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,217 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,217 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,217 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,217 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,217 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,217 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,218 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,218 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,218 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 11.24
2020-04-28 18:40:18,219 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,219 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,219 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,219 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,219 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,220 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,220 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,220 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,220 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,221 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,221 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,221 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,221 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,222 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,222 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,222 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,222 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,222 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,222 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,223 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,223 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,223 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,223 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,223 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,224 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 10.145
2020-04-28 18:40:18,224 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,224 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,224 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 10.525
2020-04-28 18:40:18,224 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,225 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,225 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,225 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,225 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,225 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,226 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,226 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,226 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,226 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,226 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,226 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,227 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,227 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,227 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,227 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,227 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,228 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,228 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,228 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 10.535
2020-04-28 18:40:18,228 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,228 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,228 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,229 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,229 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,229 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,229 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,229 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,230 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,230 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,230 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,230 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,230 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,231 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,231 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,231 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,231 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,231 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,232 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,232 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,232 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,232 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,232 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,233 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,233 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,233 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,233 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,233 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,233 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,234 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 11.525
2020-04-28 18:40:18,234 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,234 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,234 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,234 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,235 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,235 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,235 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,235 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,235 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,236 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,236 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,236 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,236 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,236 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,236 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,237 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,237 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,237 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,237 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 10.24
2020-04-28 18:40:18,237 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,237 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,238 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,238 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,238 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,238 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,238 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 11.535
2020-04-28 18:40:18,238 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,239 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,239 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,239 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,239 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,239 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,240 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,240 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,240 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,240 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,240 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,241 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 11.525
2020-04-28 18:40:18,241 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 10.145
2020-04-28 18:40:18,241 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,241 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,241 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,241 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,242 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,242 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,242 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,242 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,242 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,243 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,243 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,243 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,243 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,243 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,243 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,244 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,244 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,244 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,244 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf') with score of 0.050000.
2020-04-28 18:40:18,246 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2020-04-28 18:40:18,246 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2020-04-28 18:40:18,247 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,247 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2020-04-28 18:40:18,247 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,247 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,247 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 0.33499999999999996
2020-04-28 18:40:18,247 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,248 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,248 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,248 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,248 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,248 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,248 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,249 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,249 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,249 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,249 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.0
2020-04-28 18:40:18,249 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,250 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 0.0
2020-04-28 18:40:18,250 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXNonUnicode ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf') with score of 0.000000.
2020-04-28 18:40:18,250 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,250 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,251 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,251 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,251 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,251 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,252 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,252 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,252 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,252 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,252 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,252 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,253 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,253 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,253 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,253 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,253 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,254 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,254 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,254 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,254 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,254 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,255 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,255 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,255 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,255 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,255 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,255 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,256 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,256 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,256 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,256 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,256 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,256 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,257 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,257 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,257 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,257 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,257 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,258 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,258 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,258 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,258 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,258 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,258 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,259 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,259 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,259 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,259 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,259 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,259 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,260 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,260 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,260 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,260 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,260 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,261 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,261 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,261 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,261 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,261 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,261 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,262 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,262 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,262 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,262 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,263 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,263 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,263 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,263 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,263 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,263 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,264 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,264 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,264 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,264 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,264 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,264 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,265 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,265 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,265 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,265 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,265 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,266 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,266 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,266 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,266 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,266 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,266 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,267 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,267 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,267 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,267 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,267 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,268 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,268 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,268 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,268 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,268 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,269 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,269 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,269 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,269 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,269 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,269 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,270 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,270 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,270 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,270 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,270 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,271 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,271 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,271 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,271 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,271 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,272 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,272 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,272 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,272 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,272 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,272 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,273 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,273 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,273 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,273 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,273 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,274 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,274 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,274 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,274 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,274 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,275 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,275 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,275 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,275 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,275 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,275 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,276 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,276 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,276 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,276 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,276 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,276 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,277 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,277 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,277 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,277 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,277 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,278 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,278 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,278 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,278 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,278 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,279 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,279 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,279 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,279 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,280 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,280 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,280 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,280 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,281 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,281 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,281 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,281 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,282 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,282 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,282 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,282 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,282 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,283 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,283 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,283 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,284 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,284 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,284 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,284 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,285 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,285 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,285 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,285 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,286 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,286 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,286 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,286 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,287 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,287 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,287 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,287 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,287 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,288 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,288 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,288 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,288 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,288 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,288 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,289 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,289 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,289 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,289 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,289 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,290 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,290 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,290 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,290 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,290 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,291 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,291 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,291 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,291 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,291 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,292 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,292 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,292 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,292 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,292 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,292 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,293 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,293 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,293 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,293 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,293 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,293 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,294 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,294 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,294 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,294 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,294 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,295 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,295 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,295 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeOneSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf') with score of 0.050000.
2020-04-28 18:40:18,296 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,296 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,296 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,296 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,297 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,297 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,297 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,298 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,298 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,298 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,298 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,298 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,299 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,299 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,299 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,299 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,299 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,299 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,300 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,300 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,300 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,300 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,300 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,301 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,301 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,301 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,301 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,302 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,302 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,302 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,302 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,302 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,302 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,303 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,303 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,303 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,303 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,303 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,304 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,304 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,304 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,304 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,304 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,305 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,305 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,305 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,305 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,305 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,305 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,306 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,306 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,306 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,306 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,307 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,307 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,307 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,307 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,307 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,307 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,308 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,308 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,308 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,308 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,308 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,309 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,309 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,309 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,309 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,309 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,310 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,310 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,310 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,310 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,310 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,310 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,311 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,311 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,311 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,311 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,312 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,312 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,312 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,312 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,312 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,312 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,313 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,313 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,313 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,313 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,313 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,314 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,314 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,314 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,314 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,314 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,315 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,315 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,315 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,315 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,315 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,315 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,316 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,316 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,316 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,316 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,316 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,317 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,317 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,317 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,317 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,318 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,318 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,318 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,318 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,318 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,319 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,319 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,319 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,319 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,320 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,320 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,320 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,320 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,320 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,321 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,321 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,321 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,321 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,321 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,322 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,322 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,322 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,322 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,322 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,323 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,323 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,323 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,323 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,323 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,323 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,324 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,324 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,324 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,324 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,324 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,324 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,325 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,325 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,325 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,325 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,325 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,326 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,326 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,326 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,326 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,326 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,326 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,327 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,327 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,327 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,327 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,327 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,328 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,328 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,328 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,328 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,328 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,329 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,329 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,329 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,329 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,329 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,330 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,330 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,330 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,330 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,330 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,331 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,331 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,331 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,331 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,331 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,331 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,332 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,332 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,332 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,332 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,332 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,332 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,333 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,333 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,333 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,333 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,333 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,334 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,334 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,334 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,334 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,334 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,335 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,335 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,335 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,335 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,335 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,336 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,336 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,336 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,336 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,336 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,336 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,337 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,337 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,337 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,337 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,337 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,337 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,338 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,338 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,338 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,338 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,338 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,338 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,339 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,339 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,339 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,339 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,340 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,340 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,340 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,340 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,340 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeTwoSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf') with score of 0.050000.
2020-04-28 18:40:18,341 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,342 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,342 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,342 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,342 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,343 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,343 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,343 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,343 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,343 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,343 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,344 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,344 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,344 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,344 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,344 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,345 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,345 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,345 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,345 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,345 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,346 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,346 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,346 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,346 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,346 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,346 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,347 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,347 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,347 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,347 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,347 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,347 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,348 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,348 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,348 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,348 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,348 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,349 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,349 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,349 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,349 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,349 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,350 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,350 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,350 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,350 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,350 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,351 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,351 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,351 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,351 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,351 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,351 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,352 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,352 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,352 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,352 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,352 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,353 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,353 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,353 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,353 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,353 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,354 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,354 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,354 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,354 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,354 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,354 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,355 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,355 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,355 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,355 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,355 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,356 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,356 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,356 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,356 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,356 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,356 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,357 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,357 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,357 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,357 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,357 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,358 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,358 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,358 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,358 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,358 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,358 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,359 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,359 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,359 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,359 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,359 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,359 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,360 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,360 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,360 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,360 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,360 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,361 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,361 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,361 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,361 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,361 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,362 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,362 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,362 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,362 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,362 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,362 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,363 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,363 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,363 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,363 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,363 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,364 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,364 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,364 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,364 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,364 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,364 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,365 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,365 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,365 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,365 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,365 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,365 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,366 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,366 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,366 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,366 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,366 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,367 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,367 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,367 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,367 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,367 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,367 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,368 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,368 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,368 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,368 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,368 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,369 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,369 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,369 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,369 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,369 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,369 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,370 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,370 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,370 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,370 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,370 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,371 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,371 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,371 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,371 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,371 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,371 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,372 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,372 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,372 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,372 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,373 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,373 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,373 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,373 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,373 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,373 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,374 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,374 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,374 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,374 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,374 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,375 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,375 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,375 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,375 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,375 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,375 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,376 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,376 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,376 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,376 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,376 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,377 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,377 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,377 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,377 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,377 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,378 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,378 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,378 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,378 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,378 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,378 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,379 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,379 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,379 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,379 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,380 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,380 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,380 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,380 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,380 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,381 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,381 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,381 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,381 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,381 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,382 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,382 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,382 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,382 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,382 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,382 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,383 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,383 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,383 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,383 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,383 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,384 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,384 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,384 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,384 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,384 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeThreeSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf') with score of 0.050000.
2020-04-28 18:40:18,385 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,385 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,386 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,386 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,386 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,386 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,387 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,387 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,387 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,387 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,387 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,388 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,388 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,388 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,388 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,388 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,389 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,389 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,389 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,389 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,389 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,390 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,390 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,390 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,390 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,390 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,391 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,391 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,391 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,391 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,391 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,392 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,392 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,392 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,392 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,392 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,392 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,393 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,393 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,393 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,393 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,393 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,393 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,394 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,394 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,394 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,394 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,394 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,395 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,395 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,395 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,395 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,396 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,396 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,396 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,397 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,397 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,397 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,397 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,398 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,398 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,399 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,399 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,399 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,400 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,400 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,400 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,400 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,400 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,401 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,401 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,401 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,401 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,402 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,402 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,402 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,402 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,402 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,403 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,403 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,403 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,403 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,403 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,404 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,404 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,404 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,404 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,404 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,404 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,405 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,405 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,405 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,406 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,406 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,406 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,406 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,407 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,407 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,407 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,408 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,408 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,408 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,408 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,408 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,409 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,409 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,409 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,409 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,409 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,410 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,410 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,410 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,410 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,410 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,411 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,411 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,411 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,411 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,411 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,411 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,412 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,412 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,412 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,412 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,412 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,413 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,413 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,413 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,413 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,413 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,414 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,414 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,414 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,414 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,414 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,414 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,415 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,415 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,415 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,415 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,415 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,415 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,416 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,416 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,416 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,416 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,417 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,417 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,417 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,417 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,417 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,418 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,418 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,418 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,418 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,418 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,419 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,419 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,419 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,419 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,419 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,420 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,420 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,420 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,420 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,420 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,421 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,421 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,421 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,421 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,421 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,422 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,422 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,422 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,422 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,422 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,422 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,423 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,423 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,423 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,423 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,423 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,424 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,424 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,424 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,424 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,424 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,425 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,425 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,425 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,425 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,425 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,426 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,426 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,426 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,426 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,426 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,426 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,427 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,427 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,427 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,427 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,428 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,428 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,428 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,428 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,428 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,428 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,429 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,429 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,429 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,429 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,429 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,429 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,430 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,430 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,430 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,430 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,430 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,431 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,431 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,431 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,431 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,431 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,431 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,432 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,432 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,432 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,432 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,432 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,432 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFourSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf') with score of 0.050000.
2020-04-28 18:40:18,433 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,433 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,433 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,433 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,434 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,434 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,434 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,434 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,434 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,435 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-28 18:40:18,435 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,435 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,435 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,435 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,436 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,436 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,436 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,436 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,436 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,436 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,437 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,437 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,437 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,437 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,437 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,438 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,438 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,438 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,438 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,438 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,438 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,439 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,439 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,439 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,439 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,439 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,440 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,440 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,440 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,440 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,440 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,441 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,441 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,441 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,441 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,441 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,441 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,442 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,442 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,442 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,442 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,442 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,442 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,443 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,443 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,443 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,443 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,443 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,444 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,444 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,444 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,444 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,444 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,444 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,445 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,445 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,445 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,445 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,445 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,445 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,446 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,446 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,446 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,446 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,446 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,446 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,447 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,447 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,447 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,447 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,447 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,448 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,448 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,448 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,448 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,448 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,448 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,449 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,449 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,449 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,449 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,449 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,450 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,450 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,450 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,450 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,450 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,451 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,451 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,451 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,451 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,451 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,452 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,452 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,452 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,452 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,452 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,453 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,453 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,453 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,453 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,453 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,453 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,454 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,454 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,454 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,454 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,454 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,454 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,455 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,455 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,455 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,455 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,455 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,455 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,456 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,456 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,456 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,456 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,456 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,457 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,457 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,457 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,457 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,457 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,457 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,458 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,458 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,458 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,458 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,458 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,458 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,459 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,459 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,459 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,459 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,459 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,459 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,460 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,460 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,460 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,460 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,460 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,461 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,461 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,461 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,461 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,461 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,461 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,462 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,462 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,462 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,462 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,462 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,463 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,463 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,463 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,463 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,463 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,463 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,464 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,464 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,464 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,464 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,464 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,464 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,465 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,465 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,465 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,465 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,465 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,465 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,466 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,466 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,466 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,466 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,466 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,466 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,467 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,467 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,467 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,467 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,467 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,467 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,468 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,468 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,468 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,468 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,468 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,469 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,469 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,469 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,469 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,469 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,470 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,470 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,470 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,470 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,470 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,470 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,471 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,471 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,471 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,472 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,472 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,472 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,472 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,472 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,472 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,473 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,473 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,473 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,473 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,473 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,474 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,474 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,474 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,474 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,474 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,474 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,475 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFiveSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf') with score of 0.050000.
2020-04-28 18:40:18,476 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,477 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,477 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,477 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,477 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,477 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,477 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,478 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,478 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,478 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,478 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,478 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,479 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,479 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,479 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,479 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,479 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,480 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,480 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,480 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,480 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,480 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,480 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,481 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,481 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,481 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,482 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,482 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,482 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,483 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,483 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,483 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,483 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,484 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,484 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,484 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,484 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,484 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,485 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,485 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,485 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,486 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,486 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,486 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,486 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,486 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,487 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,487 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,487 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,487 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,487 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,488 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,488 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,488 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,488 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,488 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,488 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,489 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,489 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,489 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,489 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,489 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,490 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,490 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,490 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,490 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,490 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,491 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,491 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,491 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,491 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,491 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,491 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,492 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,492 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,492 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,492 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,492 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,492 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,493 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,493 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,493 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,493 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,493 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,494 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,494 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,494 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,494 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,494 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,495 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,495 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,495 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,495 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,495 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,496 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,496 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,496 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,496 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,496 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,497 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,497 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,497 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,497 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,497 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,498 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,498 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,498 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,498 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,498 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,499 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,499 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,499 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,499 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,500 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,500 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,500 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,500 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,501 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,501 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,501 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,501 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,502 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,502 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,502 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,502 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,502 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,502 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,503 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,503 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,503 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,503 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,503 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,504 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,504 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,504 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,504 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,504 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,505 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,505 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,505 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,505 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,505 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,505 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,506 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,506 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,506 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,506 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,506 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,506 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,507 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,507 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,507 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,507 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,507 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,508 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,508 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,508 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,508 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,508 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,508 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,509 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,509 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,509 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,509 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,509 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,509 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,510 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,510 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,510 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,510 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,510 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,511 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,511 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,511 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,511 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,511 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,511 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,512 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,512 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,512 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,512 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,512 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,513 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,513 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,513 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,513 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,513 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,513 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,514 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,514 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,514 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,514 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,514 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,514 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,515 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,515 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,515 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,515 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,515 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,515 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,516 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,516 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,516 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,516 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,516 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,517 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,517 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,517 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,517 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,517 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,517 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,518 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,518 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,518 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,518 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,519 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,519 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,519 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,519 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,519 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,520 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,520 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,520 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,520 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,520 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,520 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,521 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,521 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,521 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,521 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,521 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmsy10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf') with score of 0.050000.
2020-04-28 18:40:18,522 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,522 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,523 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,523 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,523 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,523 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,523 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,524 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,524 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,524 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,524 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,524 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,524 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,525 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,525 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,525 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,525 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,525 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,526 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,526 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,526 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,526 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,526 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,527 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,527 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,527 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,527 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,527 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,527 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,528 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,528 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,528 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,528 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,528 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,529 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,529 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,529 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,529 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,529 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,529 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,530 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,530 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,530 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,530 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,530 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,531 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,531 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,531 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,531 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,531 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,531 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,532 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,532 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,532 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,532 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,532 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,532 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,533 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,533 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,533 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,533 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,533 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,533 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,534 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,534 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,534 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,534 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,534 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,535 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,535 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,535 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,535 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,535 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,535 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,536 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,536 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,536 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,536 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,536 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,536 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,537 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,537 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,537 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,537 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,537 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,538 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,538 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,538 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,538 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,538 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,538 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,539 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,539 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,539 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,539 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,539 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,540 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,540 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,540 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,540 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,540 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,540 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,541 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,541 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,541 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,541 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,541 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,542 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,542 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,542 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,542 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,542 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,542 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,543 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,543 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,543 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,543 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,543 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,543 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,544 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,544 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,544 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,544 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,544 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,544 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,545 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,545 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,545 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,545 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,545 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,545 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,546 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,546 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,546 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,546 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,546 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,546 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,547 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,547 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,547 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,547 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,547 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,547 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,548 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,548 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,548 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,548 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,549 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,549 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,549 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,549 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,550 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,550 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,550 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,550 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,550 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,550 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,551 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,551 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,551 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,552 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,552 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,552 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,552 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,552 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,553 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,553 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,553 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,553 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,554 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,554 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,554 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,555 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,555 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,555 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,555 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,556 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,556 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,556 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,556 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,556 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,557 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,557 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,557 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,557 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,557 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,558 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,558 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,558 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,558 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,558 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,559 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,559 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,559 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,559 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,559 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,560 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,560 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,560 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,560 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,560 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,561 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,561 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,561 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,561 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,561 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,562 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,562 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,562 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,562 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,562 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,562 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,563 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,563 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,563 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,563 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,563 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,563 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,564 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,564 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,564 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,564 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,564 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,564 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,565 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,565 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,565 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,565 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,565 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,566 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,566 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmr10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf') with score of 0.050000.
2020-04-28 18:40:18,566 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,566 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,567 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,567 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,567 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,567 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,567 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,567 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,568 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,568 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,568 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,568 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,568 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,569 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,569 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,569 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,569 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,569 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,569 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,570 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,570 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,570 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,570 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,571 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,571 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,571 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,571 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,572 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,572 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,572 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,572 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,572 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,572 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,573 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,573 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,573 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,573 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,574 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,574 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,574 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,574 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,574 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,574 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,575 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,575 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,575 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,575 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,575 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,576 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,576 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,576 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,576 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,576 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,576 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,577 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,577 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,577 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,577 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,577 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,578 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,578 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,578 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,578 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,578 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,579 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,579 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,579 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,579 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,579 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,579 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,580 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,580 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,580 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,580 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,580 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,581 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,581 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,581 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,582 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,582 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,582 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,582 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,582 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,583 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,583 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,583 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,583 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,584 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,584 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,584 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,584 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,584 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,585 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,585 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,585 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,585 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,586 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,586 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,586 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,586 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,586 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,587 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,587 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,587 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,587 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,587 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,588 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,588 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,588 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,588 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,588 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,589 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,589 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,589 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,589 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,589 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,590 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,590 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,590 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,590 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,590 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,591 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,591 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,591 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,591 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,591 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,592 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,592 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,592 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,592 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,593 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,593 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,593 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,593 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,593 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,594 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,594 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,594 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,594 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,594 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,595 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,595 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,595 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,595 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,595 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,595 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,596 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,596 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,596 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,596 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,596 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,597 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,597 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,597 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,597 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,597 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,598 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,598 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,598 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,598 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,598 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,599 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,599 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,599 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,599 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,599 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,600 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,600 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,600 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,600 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,601 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,601 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,601 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,601 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,601 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,602 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,602 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,602 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,602 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,602 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,602 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,603 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,603 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,603 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,603 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,604 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,604 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,604 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,604 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,605 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,605 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,605 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,605 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,606 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,607 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,608 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,609 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,610 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,611 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,612 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,613 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,613 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmtt10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf') with score of 0.050000.
2020-04-28 18:40:18,614 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,614 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,614 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,615 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,616 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,617 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,618 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,619 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,620 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,621 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,622 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,623 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,624 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,625 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,626 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,627 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,628 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,629 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,630 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,631 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,632 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,633 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,634 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,635 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,636 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,637 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,638 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,639 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,640 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,641 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,642 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,643 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,644 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,645 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,646 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,647 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,648 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,649 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,650 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,651 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,652 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,653 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,654 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,655 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,656 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,657 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,657 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,657 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,657 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,657 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,657 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,658 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,658 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,658 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,659 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,659 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,659 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,659 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,659 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,660 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,660 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,660 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,660 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmmi10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf') with score of 0.050000.
2020-04-28 18:40:18,661 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,661 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,661 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,661 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,662 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,662 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,662 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,662 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,662 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,662 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,663 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,663 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,663 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,663 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,663 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,663 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,664 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,664 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,664 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,664 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,664 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,665 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,666 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,667 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,668 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,669 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,670 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,671 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,672 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,673 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,674 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,675 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,676 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,677 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,678 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,679 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,680 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,681 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,682 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,683 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,684 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,685 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,686 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,687 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,688 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,689 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,690 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,691 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,692 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,692 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,692 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,693 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,694 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,695 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,696 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,697 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,698 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,699 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,700 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,701 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,702 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,703 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,704 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,705 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,706 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,707 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,707 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmb10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf') with score of 0.050000.
2020-04-28 18:40:18,708 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,708 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,709 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,710 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,711 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,712 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,713 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,713 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,713 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,713 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,714 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,714 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,714 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,714 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,714 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,714 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,715 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,715 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,715 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,715 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,715 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,716 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,716 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,716 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,716 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,716 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,716 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,717 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,717 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,717 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,717 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,718 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,718 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,718 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,719 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,719 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,719 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,719 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,719 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,720 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,720 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,720 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,720 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,721 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,721 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,721 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,721 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,721 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,722 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,722 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,722 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,722 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,722 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,723 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,723 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,723 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,723 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,723 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,724 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,724 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,724 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,724 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,725 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,725 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,725 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,725 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,726 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,726 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,726 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,726 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,726 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,727 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,727 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,727 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,728 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,728 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,728 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,728 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,729 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,729 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,729 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,729 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,730 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,730 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,730 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,730 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,730 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,731 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,731 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,731 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,731 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,731 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,731 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,732 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,732 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,732 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,732 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,733 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,733 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,733 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,733 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,733 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,733 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,734 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,734 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,734 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,734 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,734 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,735 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,735 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,735 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,735 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,735 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,736 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,736 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,736 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,736 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,737 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,737 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,737 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,737 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,737 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,738 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,738 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,738 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,738 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,738 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,738 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,739 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,739 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,739 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,739 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,739 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,740 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,740 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,740 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,740 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,740 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,741 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,741 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,741 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,741 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,741 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,741 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,742 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,742 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,742 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,742 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,742 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,743 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,743 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,743 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,743 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,743 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,743 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,744 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,744 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,744 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,744 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,744 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,745 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,745 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,745 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,745 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,745 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,745 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,746 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,746 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,746 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,746 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,746 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,747 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,747 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,747 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,747 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,748 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,748 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,748 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,748 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,748 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,748 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,749 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,749 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,749 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,749 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,749 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,750 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,750 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,750 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,750 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,750 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,751 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,751 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,751 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,751 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,751 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,751 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,752 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,752 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,752 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,752 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,752 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,753 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,753 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,753 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,753 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,753 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,753 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,754 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,754 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,754 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmss10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf') with score of 0.050000.
2020-04-28 18:40:18,755 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,755 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,755 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,755 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,755 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,756 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,756 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,756 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,756 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,756 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,756 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,757 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,757 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,757 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,757 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,757 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,758 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,758 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,758 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,758 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,758 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,759 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,759 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,759 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,759 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,759 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,760 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,760 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,760 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,760 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,760 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,761 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,761 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,761 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,761 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,761 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,762 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,762 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,762 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,762 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,762 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,762 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,763 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,763 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,763 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,763 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,763 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,763 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,764 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,764 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,764 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,764 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,764 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,764 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,765 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,765 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,765 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,765 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,765 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,766 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,766 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,766 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,766 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,766 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,766 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,767 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,767 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,767 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,767 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,767 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,768 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,768 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,768 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,768 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,769 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,769 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,769 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,769 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,769 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,770 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,770 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,770 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,770 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,770 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,771 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,771 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,771 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,771 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,771 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,771 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,772 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,772 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,772 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,772 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,772 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,773 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,773 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,773 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,773 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,773 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,773 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,774 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,774 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,774 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,774 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,774 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,775 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,775 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,775 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,775 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,775 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,776 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,776 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,776 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,776 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,776 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,777 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,777 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,777 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,777 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,777 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,777 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,778 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,778 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,778 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,778 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,778 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,779 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,779 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,779 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,780 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,780 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,780 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,780 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,781 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,781 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,781 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,781 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,782 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,782 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,782 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,782 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,782 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,782 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,783 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,783 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,783 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,783 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,783 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,784 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,784 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,784 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,784 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,784 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,785 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,785 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,785 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,785 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,786 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,786 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,786 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,786 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,786 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,787 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,787 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,787 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,787 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,787 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,787 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,788 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,788 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,788 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,788 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,788 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,789 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,789 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,789 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,789 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,789 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,790 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,790 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,790 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,791 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,791 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,791 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,791 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,791 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,792 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,792 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,792 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,792 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,793 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,793 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,793 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,793 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,794 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,794 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,794 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,794 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,794 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,794 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,795 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,795 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,795 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,795 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,795 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,796 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,796 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,796 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,796 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,796 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,796 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,797 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,797 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,797 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,797 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,797 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,798 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,798 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,798 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,798 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,798 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,799 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,799 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,799 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,799 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,799 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,799 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,800 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,800 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,800 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmex10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf') with score of 0.050000.
2020-04-28 18:40:18,801 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,801 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,801 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,802 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,802 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,802 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,802 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,802 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,802 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,803 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,803 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,803 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,803 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,803 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,804 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,804 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,804 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,804 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,804 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,804 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,805 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,805 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,805 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,805 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,806 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,806 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,806 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,807 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,807 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,807 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,807 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,807 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,808 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,808 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,808 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,809 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,809 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-04-28 18:40:18,809 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-04-28 18:40:18,809 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,809 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,810 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,810 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,810 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,810 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,810 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,811 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,811 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,811 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,811 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,811 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,812 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,812 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,812 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,812 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,812 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,813 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,813 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,813 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,813 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,813 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,813 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,814 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,814 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,814 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,814 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,815 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,815 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,815 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,815 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,815 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,815 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,816 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,816 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,816 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,816 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,816 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,816 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,817 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,817 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,817 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,817 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,818 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,818 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,818 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,818 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,818 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,819 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,819 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,819 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,819 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,819 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,820 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,820 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,820 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,820 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,821 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,821 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,821 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,821 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,821 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,821 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,822 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,822 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,822 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,822 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,822 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,822 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,823 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,823 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,823 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,823 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,824 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,824 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,824 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,824 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,824 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,825 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,825 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,825 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,826 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,826 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,826 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,826 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,827 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,827 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,827 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,827 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,828 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,828 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,828 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,828 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,828 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,829 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,829 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,829 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,829 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,829 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,830 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,830 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,830 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,830 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,831 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,831 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,831 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,831 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,831 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,831 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,832 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,832 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,832 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,832 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,832 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,833 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,833 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,833 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,833 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,833 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,833 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,834 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,834 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,834 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,834 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,835 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,835 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,835 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,835 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,835 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,836 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,836 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,836 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,836 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,836 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,837 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,837 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,837 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,837 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,837 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,837 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,838 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,838 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,838 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,838 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,838 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,838 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,839 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,839 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,839 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,839 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,839 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,840 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,840 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,840 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,840 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,840 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,841 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,841 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,841 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,841 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,841 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,842 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,842 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,842 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,842 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,842 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,842 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,843 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,843 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,843 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,843 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,843 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,844 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,844 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,844 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,844 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,844 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,844 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,845 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,845 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,845 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,845 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,846 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,846 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,846 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,846 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,846 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,846 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,847 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,847 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,847 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,847 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,847 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-04-28 18:40:18,849 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,849 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-28 18:40:18,850 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,850 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,850 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,850 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,850 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,851 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,851 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,851 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,851 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,851 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,852 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,852 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,852 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,852 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,852 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,852 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-28 18:40:18,853 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,853 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,853 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,853 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,853 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,853 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,854 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,854 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,854 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,854 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,854 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,855 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 1.335
2020-04-28 18:40:18,855 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,855 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2020-04-28 18:40:18,855 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,855 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,856 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,856 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,856 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 0.43499999999999994
2020-04-28 18:40:18,857 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2020-04-28 18:40:18,857 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,857 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,857 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,858 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,858 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,858 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,858 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,859 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,859 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,859 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,859 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,859 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,860 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 10.145
2020-04-28 18:40:18,860 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,860 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,860 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,860 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,860 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,861 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 11.145
2020-04-28 18:40:18,861 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,861 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,861 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,861 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,862 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,862 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 10.25
2020-04-28 18:40:18,862 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,862 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,862 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,862 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 11.24
2020-04-28 18:40:18,863 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,863 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,863 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,863 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,863 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,863 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,864 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,864 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 11.145
2020-04-28 18:40:18,864 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,864 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,864 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,865 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,865 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 11.25
2020-04-28 18:40:18,865 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,865 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,865 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,865 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,866 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,866 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,866 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,866 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,866 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,866 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,867 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,867 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,867 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,867 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,867 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 11.24
2020-04-28 18:40:18,868 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,868 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,868 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,868 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,868 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,869 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,869 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,869 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,869 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,869 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,870 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,870 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,870 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,870 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,870 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,871 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,871 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,871 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,871 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,871 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,871 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,872 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,872 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,872 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,872 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 10.145
2020-04-28 18:40:18,872 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,872 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,873 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 10.525
2020-04-28 18:40:18,873 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,873 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,873 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,873 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,874 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,874 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,874 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,874 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,874 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,874 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,875 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,875 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,875 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,875 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,875 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,875 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,876 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,876 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,876 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,876 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 10.535
2020-04-28 18:40:18,876 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,876 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,877 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,877 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,877 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,877 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,877 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,878 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,878 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,878 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,878 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,878 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,879 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,879 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,879 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,879 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,879 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,880 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,880 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,880 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,880 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,880 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,881 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,881 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,881 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 11.145
2020-04-28 18:40:18,881 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,881 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,881 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,882 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,882 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 11.525
2020-04-28 18:40:18,882 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,882 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,882 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,883 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,883 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,883 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,883 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,883 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,884 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,884 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,884 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,884 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 11.24
2020-04-28 18:40:18,884 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,885 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,885 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,885 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,885 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,886 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,886 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 10.24
2020-04-28 18:40:18,886 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,886 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,887 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,887 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,887 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,887 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,888 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 11.535
2020-04-28 18:40:18,888 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 11.05
2020-04-28 18:40:18,888 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,888 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,888 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 10.05
2020-04-28 18:40:18,888 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,889 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,889 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,889 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,889 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 11.24
2020-04-28 18:40:18,890 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,890 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,890 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 11.525
2020-04-28 18:40:18,890 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 10.145
2020-04-28 18:40:18,890 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,891 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,891 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,891 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,891 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,891 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,891 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,892 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,892 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 10.335
2020-04-28 18:40:18,892 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,892 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 10.24
2020-04-28 18:40:18,892 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 11.335
2020-04-28 18:40:18,892 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,893 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 10.05
2020-04-28 18:40:18,893 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,893 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,893 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 11.05
2020-04-28 18:40:18,893 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 11.05
2020-04-28 18:40:18,894 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf') with score of 0.150000.
2020-04-28 18:40:18,894 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2020-04-28 18:40:18,894 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2020-04-28 18:40:18,895 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,895 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2020-04-28 18:40:18,895 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,895 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,895 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,895 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,896 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,896 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,896 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,896 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,896 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,896 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,897 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,897 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,897 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,897 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.0
2020-04-28 18:40:18,897 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,898 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,898 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2020-04-28 18:40:18,898 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,898 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-28 18:40:18,898 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,898 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,899 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,899 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2020-04-28 18:40:18,899 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-28 18:40:18,899 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.0
2020-04-28 18:40:18,899 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.0
2020-04-28 18:40:18,899 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.000000.
2020-04-28 18:40:18,900 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,900 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-04-28 18:40:18,901 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,901 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,901 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,902 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,902 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,902 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,902 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,903 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,903 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,903 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,903 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,903 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,904 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,904 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,904 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,904 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-04-28 18:40:18,904 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,904 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,905 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,905 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-28 18:40:18,905 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,905 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,905 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,906 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,906 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,906 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,906 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,906 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,906 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,907 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,907 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,907 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,907 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,907 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,908 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,908 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,908 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,908 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,908 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,908 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,909 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,909 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,909 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,909 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,909 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,910 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,910 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,910 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,910 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,910 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,910 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,911 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,911 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,911 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,911 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,911 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,912 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,912 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,912 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,912 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,912 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,913 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,913 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,913 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,913 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,913 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,913 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,914 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,914 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,914 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,914 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,914 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,915 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,915 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,915 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,915 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,915 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,915 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,916 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,916 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,916 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,916 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,916 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,916 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,917 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,917 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,917 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,917 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,917 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,918 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,918 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,918 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,918 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,918 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,918 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,919 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,919 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,919 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,919 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,919 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,920 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,920 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,920 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,920 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,921 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,921 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,921 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,921 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,922 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,922 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,922 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,923 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,923 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,923 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,923 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,923 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,924 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,924 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,924 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,924 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,924 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,925 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,925 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,925 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,925 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,925 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,925 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,926 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,926 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,926 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,926 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,926 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,926 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,927 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,927 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,927 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,927 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,927 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,928 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,928 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,928 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,928 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,928 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,928 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,929 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,929 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,929 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,929 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,929 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,930 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,930 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,930 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,930 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,930 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,930 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,931 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,931 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,931 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,931 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,931 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,932 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,932 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,932 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,932 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,932 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,932 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,933 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,933 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,933 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,933 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,934 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,934 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,934 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,934 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,934 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,935 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,935 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,935 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,935 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,935 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,936 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,936 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,936 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,936 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,937 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,937 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,937 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,937 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,938 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,938 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,938 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,938 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,938 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,939 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,939 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,939 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,939 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,939 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,940 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,940 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,940 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,940 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,941 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,941 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,941 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,941 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,941 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,941 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,942 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,942 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,942 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,942 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,942 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,943 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,943 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,943 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,943 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,943 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,944 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,944 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,944 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,944 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,944 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,945 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,945 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,945 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,945 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,945 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,945 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Mono ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf') with score of 0.050000.
2020-04-28 18:40:18,947 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-28 18:40:18,948 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,948 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,948 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,948 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,948 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,948 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,949 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,949 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,949 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,949 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,949 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,950 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,950 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2020-04-28 18:40:18,950 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,950 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,950 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,950 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,951 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,951 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,951 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,951 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,951 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,952 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,952 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,952 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,952 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,952 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,953 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,953 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,953 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,953 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,953 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,954 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,954 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,954 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,954 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:18,954 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:18,955 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,955 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,955 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,955 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,956 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,956 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,956 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,956 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,956 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,956 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,957 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,957 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,957 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,957 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,957 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,958 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,958 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,958 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,958 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,958 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,958 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,959 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,959 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,959 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,959 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-28 18:40:18,959 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,959 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,960 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,960 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:18,960 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,960 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,960 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,961 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,961 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,961 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,961 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,961 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:18,962 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,962 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,962 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,962 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,962 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-28 18:40:18,962 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,963 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,963 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,963 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,963 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,963 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,963 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,964 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,964 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,964 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,964 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,964 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,964 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,965 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,965 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:18,965 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,965 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,965 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,966 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,966 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,966 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,966 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,966 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,967 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,967 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,967 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,967 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,967 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,968 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,968 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,968 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,968 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,968 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,969 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,969 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,969 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,969 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,969 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,970 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,970 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:18,970 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,970 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,971 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:18,971 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,971 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,971 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,971 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,971 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,972 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,972 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,972 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,972 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,972 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,973 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,973 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,973 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,973 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,974 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,974 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,974 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,974 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,974 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,974 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-28 18:40:18,975 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,975 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,975 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,975 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,975 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,975 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,976 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,976 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,976 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,976 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,976 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,976 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,977 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,977 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,977 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,977 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,977 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,978 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,978 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,978 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,978 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,979 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,979 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,979 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,979 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:18,979 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,980 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,980 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,980 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,980 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,980 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,981 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,981 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,981 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,981 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,981 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,981 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,982 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,982 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,982 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,982 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,982 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:18,982 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,983 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,983 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,983 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,983 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,983 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,984 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:18,984 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,984 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,984 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,984 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,984 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,985 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,985 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-28 18:40:18,985 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:18,985 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,985 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,985 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:18,986 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,986 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,986 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,986 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,987 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:18,987 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,987 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,987 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:18,988 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:18,988 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,988 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,989 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,989 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,989 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,989 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,990 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,990 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,990 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:18,990 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,991 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:18,991 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:18,991 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,991 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:18,992 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,992 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,992 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:18,993 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:18,993 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Display ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf') with score of 0.050000.
2020-04-28 18:40:19,091 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,091 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,092 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,093 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,093 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,093 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,099 [23416] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2020-04-28 18:40:19,099 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-28 18:40:19,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,100 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,101 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,102 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,103 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,103 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-28 18:40:19,103 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,103 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,103 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,104 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,104 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,104 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,104 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,104 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-28 18:40:19,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,105 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-28 18:40:19,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,106 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-28 18:40:19,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-28 18:40:19,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,107 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,108 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:19,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,109 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:19,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:19,110 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,111 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-28 18:40:19,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:19,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-28 18:40:19,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,112 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,113 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-28 18:40:19,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-28 18:40:19,114 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-28 18:40:19,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-28 18:40:19,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:19,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,115 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,116 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,117 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-28 18:40:19,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,118 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:19,119 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,120 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,121 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:19,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,122 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-28 18:40:19,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-28 18:40:19,123 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-28 18:40:19,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:19,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,124 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:19,125 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:19,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,126 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:19,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:19,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-28 18:40:19,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-28 18:40:19,127 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-28 18:40:19,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,128 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:19,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,129 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,130 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-28 18:40:19,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,131 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-28 18:40:19,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,132 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-28 18:40:19,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,133 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,134 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,135 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-28 18:40:19,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,136 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:19,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-28 18:40:19,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,137 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-28 18:40:19,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-28 18:40:19,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,138 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-28 18:40:19,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:19,139 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-28 18:40:19,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-28 18:40:19,140 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-28 18:40:19,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,141 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-28 18:40:19,142 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-28 18:40:19,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-28 18:40:19,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-28 18:40:19,143 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-28 18:40:19,144 [23416] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-28 18:40:19,144 [23416] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-28 18:40:19,146 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,146 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,147 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,147 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,148 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,148 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,178 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,178 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,179 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,179 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,180 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,180 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,192 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,192 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,193 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,193 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,194 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,194 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,199 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,199 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,200 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,200 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,201 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,201 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,209 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,210 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,210 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,211 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,212 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,212 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,215 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,215 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,216 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,217 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,217 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,218 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,225 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,226 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,227 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,227 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,228 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,228 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,233 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,233 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,234 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,234 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,235 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,235 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,243 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,243 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,244 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,244 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,245 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,245 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,249 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,249 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,250 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,250 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,251 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,251 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,258 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,258 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,259 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,260 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,261 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,261 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,266 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,266 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,267 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,267 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,268 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,268 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,277 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,277 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,278 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,278 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,279 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,279 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,283 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,283 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,284 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,284 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,285 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,286 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,291 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,291 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,292 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,292 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,293 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,293 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,298 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,298 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,299 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,299 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,300 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,300 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,309 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,309 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,310 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,311 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,311 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,312 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,315 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,315 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,316 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,316 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,317 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,317 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,325 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,325 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,326 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,326 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,327 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,327 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,332 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,332 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,333 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,333 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,334 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,334 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,342 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,342 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,343 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,343 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,344 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,344 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,348 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,348 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,349 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,349 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,349 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,350 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,357 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,357 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,358 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,359 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,359 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,360 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,380 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,381 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,382 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,382 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:19,383 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:19,383 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:19,391 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,391 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,392 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,392 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,393 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,393 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:19,404 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,405 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,405 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,406 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e+02, 1.e+03, 1.e+04, 1.e+05, 1.e+06])
2020-04-28 18:40:19,407 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1098.1022547226526 vmax 14073.207963886069
2020-04-28 18:40:19,407 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05,
       2.e+06, 3.e+06, 4.e+06, 5.e+06, 6.e+06, 7.e+06, 8.e+06, 9.e+06])
2020-04-28 18:40:28,530 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,530 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,533 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,534 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,538 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,539 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,540 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,540 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,541 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,541 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,588 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,588 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,589 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,590 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,591 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,591 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,600 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,600 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,601 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,601 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,602 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,602 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,633 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,633 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,634 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,634 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,635 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,636 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,648 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,649 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,650 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,650 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,651 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,651 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,656 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,656 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,657 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,657 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,658 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,658 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,666 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,667 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,668 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,669 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,670 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,670 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,675 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,675 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,677 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,677 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,679 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,679 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,692 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,693 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,694 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,694 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,695 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,695 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,700 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,700 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,701 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,701 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,702 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,702 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,710 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,711 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,711 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,712 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,712 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,713 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,716 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,717 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,718 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,718 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,719 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,719 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,728 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,729 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,730 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,730 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,731 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,731 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,736 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,737 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,738 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,738 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,739 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,739 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,747 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,747 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,748 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,748 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,749 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,749 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,754 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,754 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,755 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,755 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,756 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,756 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,763 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,763 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,764 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,764 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,765 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,765 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,770 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,770 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,771 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,771 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,772 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,772 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,780 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,781 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,782 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,782 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,783 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,783 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,787 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,787 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,788 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,788 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,789 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,789 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,798 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,798 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,799 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,799 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,800 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,800 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,805 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,805 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,806 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,806 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,807 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,807 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,816 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,816 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,817 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,817 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,818 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,818 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,822 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,823 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,823 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,824 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,824 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,825 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,833 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,833 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,834 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,835 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,835 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,836 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,857 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,857 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,858 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,858 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 18:40:28,859 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 18:40:28,859 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 18:40:28,866 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,867 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,868 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,868 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,869 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,869 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 18:40:28,876 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,876 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,877 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,877 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04])
2020-04-28 18:40:28,878 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 1.9674185048552373 vmax 168.44164709901645
2020-04-28 18:40:28,878 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04])
2020-04-28 19:20:37,370 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 19:23:15,576 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 19:37:11,166 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 22:03:38,500 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 22:04:13,002 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 22:06:50,733 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 22:16:10,185 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,185 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,188 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,189 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,193 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,193 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,194 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,194 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,195 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,195 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,245 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,245 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,246 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,247 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,248 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,249 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,257 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,257 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,258 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,259 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,260 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,260 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,288 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,288 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,289 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,289 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,290 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,290 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,302 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,302 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,303 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,304 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,304 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,305 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,309 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,309 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,310 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,310 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,311 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,311 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,319 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,320 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,321 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,321 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,321 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,322 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,325 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,325 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,326 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,326 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,327 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,327 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,336 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,336 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,337 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,337 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,338 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,338 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,344 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,344 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,345 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,346 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,347 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,347 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,356 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,356 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,356 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,358 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,358 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,358 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,361 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,361 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,362 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,362 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,363 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,363 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,373 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,373 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,374 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,375 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,375 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,375 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,379 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,381 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,382 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,383 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,384 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,384 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,394 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,394 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,395 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,395 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,396 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,397 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,402 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,402 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,403 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,404 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,404 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,404 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,411 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,411 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,413 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,413 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,414 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,415 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,420 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,420 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,421 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,421 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,422 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,422 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,436 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,436 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,437 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,438 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,438 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,439 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,442 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,442 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,443 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,443 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,444 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,444 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,452 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,453 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,454 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,454 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,456 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,456 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,461 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,461 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,462 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,462 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,463 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,463 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,471 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,472 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,473 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,473 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,474 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,474 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,477 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,477 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,478 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,479 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,479 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,480 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,488 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,488 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,489 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,489 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,490 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,490 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,512 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,513 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,514 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,514 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 22:16:10,515 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 22:16:10,515 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 22:16:10,523 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,523 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,524 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,524 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,525 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,525 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 22:16:10,532 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,532 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,533 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,534 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 22:16:10,535 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 22:16:10,535 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:06:49,975 [23416] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-04-28 23:07:54,311 [23416] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\collections.py:857: RuntimeWarning: invalid value encountered in sqrt
  scale = np.sqrt(self._sizes) * dpi / 72.0 * self._factor

2020-04-28 23:34:25,574 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,575 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,578 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,578 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,582 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,583 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,584 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,584 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,584 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,585 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,631 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,632 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,634 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,634 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,635 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,636 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,647 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,647 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,648 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,649 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,650 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,650 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,679 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,679 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,680 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,681 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,681 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,682 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,695 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,695 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,696 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,696 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,697 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,697 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,702 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,702 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,703 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,703 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,704 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,704 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,713 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,713 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,714 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,714 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,715 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,715 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,719 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,720 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,721 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,721 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,722 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,722 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,730 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,730 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,731 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,731 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,733 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,733 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,738 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,738 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,739 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,739 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,740 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,740 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,748 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,748 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,749 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,750 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,750 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,751 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,754 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,754 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,755 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,755 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,756 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,756 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,764 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,764 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,765 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,765 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,766 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,767 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,771 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,771 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,772 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,772 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,773 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,773 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,781 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,781 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,783 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,783 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,784 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,784 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,788 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,788 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,789 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,790 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,790 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,791 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,799 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,800 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,801 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,802 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,803 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,803 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,809 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,809 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,810 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,811 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,813 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,813 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,823 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,823 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,824 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,824 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,825 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,825 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,829 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,830 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,832 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,832 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,834 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,834 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,843 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,843 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,844 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,845 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,845 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,846 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,851 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,851 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,852 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,853 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,853 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,854 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,862 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,862 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,863 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,863 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,864 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,864 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,868 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,868 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,869 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,869 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,870 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,870 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,878 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,879 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,880 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,880 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,881 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,881 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,901 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,901 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,902 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,902 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-28 23:34:25,903 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-28 23:34:25,903 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-28 23:34:25,911 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,911 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,912 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,912 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,913 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,913 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-28 23:34:25,919 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,919 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,920 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,920 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-28 23:34:25,921 [23416] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.195377310355196 vmax 94.6715574274432
2020-04-28 23:34:25,921 [23416] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 10:18:07,160 [28820] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-29 10:18:07,160 [28820] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-29 10:18:07,161 [28820] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-29 10:18:07,163 [28820] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-29 10:18:07,164 [28820] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-29 10:18:07,165 [28820] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-29 10:18:07,672 [28820] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-29 10:18:07,672 [28820] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-29 10:18:07,672 [28820] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-29 10:18:07,674 [28820] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-29 10:18:07,675 [28820] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-29 10:18:07,675 [28820] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-29 10:18:09,929 [28820] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-04-29 10:18:09,929 [28820] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-29 10:18:09,930 [28820] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-04-29 10:18:09,932 [28820] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-04-29 10:18:09,933 [28820] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-04-29 10:18:09,934 [28820] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-04-29 10:18:09,934 [28820] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-04-29 10:18:09,934 [28820] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-04-29 11:54:42,587 [28820] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-04-29 11:54:42,593 [28820] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-04-29 11:54:42,808 [28820] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-29 11:54:42,974 [28820] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-04-29 11:54:44,372 [28820] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-04-29 11:54:44,415 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-04-29 11:54:44,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 11:54:44,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 11:54:44,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-29 11:54:44,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-29 11:54:44,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-29 11:54:44,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-29 11:54:44,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 11:54:44,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 11:54:44,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-29 11:54:44,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 11:54:44,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 11:54:44,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 11:54:44,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-29 11:54:44,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-29 11:54:44,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-29 11:54:44,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 11:54:44,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 11:54:44,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 11:54:44,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 11:54:44,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-29 11:54:44,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-29 11:54:44,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 11:54:44,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-29 11:54:44,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 11:54:44,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-29 11:54:44,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,462 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,462 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,462 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,462 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 11:54:44,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-29 11:54:44,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 11:54:44,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 11:54:44,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 11:54:44,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 11:54:44,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,472 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-29 11:54:44,481 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-04-29 11:54:44,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 11:54:44,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 11:54:44,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-29 11:54:44,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-29 11:54:44,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-29 11:54:44,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-29 11:54:44,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 11:54:44,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 11:54:44,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-29 11:54:44,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 11:54:44,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 11:54:44,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 11:54:44,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-29 11:54:44,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-29 11:54:44,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-29 11:54:44,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 11:54:44,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 11:54:44,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 11:54:44,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 11:54:44,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-29 11:54:44,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-29 11:54:44,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 11:54:44,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-29 11:54:44,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 11:54:44,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-29 11:54:44,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 11:54:44,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 11:54:44,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-29 11:54:44,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 11:54:44,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 11:54:44,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 11:54:44,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 11:54:44,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 11:54:44,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 11:54:44,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 11:54:44,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 11:54:44,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 11:54:44,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 11:54:44,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 11:54:44,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 11:54:44,531 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-29 12:02:16,309 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:16,310 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:16,313 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:16,313 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:16,319 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:16,320 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:16,321 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:16,322 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:16,323 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:16,323 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:16,362 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.05
2020-04-29 12:02:16,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 1.335
2020-04-29 12:02:16,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,387 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,387 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,387 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,387 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,387 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,388 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,388 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,388 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,388 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,388 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,388 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,389 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,389 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,389 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,389 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,389 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,390 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,390 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,390 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,390 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,390 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,390 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,391 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,391 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,391 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,391 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,391 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,391 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,392 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,392 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,392 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,392 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,392 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,393 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,393 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,393 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,393 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,393 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,394 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,394 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,394 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,394 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,394 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,395 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,395 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,395 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,395 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,395 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,396 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,396 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,396 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,397 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,397 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,397 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,398 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,398 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,398 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,398 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,398 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,399 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,399 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,399 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,399 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,399 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,399 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,400 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,400 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,400 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,400 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,400 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,401 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,401 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,401 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,401 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,401 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,401 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,402 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,402 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,402 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,402 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,402 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,402 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,403 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,403 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,403 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,403 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,403 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,403 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,404 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,404 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,404 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,404 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,404 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,405 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,405 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,405 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,405 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,405 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,405 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,406 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,406 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,406 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,406 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,406 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,406 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,407 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,407 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf') with score of 0.050000.
2020-04-29 12:02:16,407 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,408 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-29 12:02:16,408 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,408 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 0.05
2020-04-29 12:02:16,408 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,408 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,409 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,409 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,409 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,409 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,409 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,409 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,410 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,410 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,410 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 1.05
2020-04-29 12:02:16,410 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,410 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,410 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-29 12:02:16,411 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,411 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,411 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,411 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,411 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,411 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,412 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,412 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,412 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,412 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,412 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 1.335
2020-04-29 12:02:16,413 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,413 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,413 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,413 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,414 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,414 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,414 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,414 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-29 12:02:16,415 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-29 12:02:16,415 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,415 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,415 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,415 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,416 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,417 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 10.145
2020-04-29 12:02:16,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,418 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 11.145
2020-04-29 12:02:16,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,419 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 10.25
2020-04-29 12:02:16,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:16,420 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 11.24
2020-04-29 12:02:16,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,421 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,422 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 11.145
2020-04-29 12:02:16,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,423 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 11.25
2020-04-29 12:02:16,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,424 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,425 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,426 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 11.24
2020-04-29 12:02:16,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,427 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,428 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,429 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,430 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,431 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 11.145
2020-04-29 12:02:16,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,432 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 10.145
2020-04-29 12:02:16,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 10.525
2020-04-29 12:02:16,433 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,434 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,435 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,436 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 10.535
2020-04-29 12:02:16,437 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 11.145
2020-04-29 12:02:16,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,438 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,439 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,440 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,441 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 11.145
2020-04-29 12:02:16,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,442 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 11.525
2020-04-29 12:02:16,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,443 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,444 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,445 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,446 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 10.24
2020-04-29 12:02:16,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,447 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,448 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 11.535
2020-04-29 12:02:16,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,449 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:16,450 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:16,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,451 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 11.525
2020-04-29 12:02:16,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 10.145
2020-04-29 12:02:16,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,452 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,453 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,454 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,455 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,455 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXGeneral ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf') with score of 0.050000.
2020-04-29 12:02:16,456 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2020-04-29 12:02:16,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2020-04-29 12:02:16,456 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 1.335
2020-04-29 12:02:16,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 1.0
2020-04-29 12:02:16,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,457 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:16,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,458 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 0.33499999999999996
2020-04-29 12:02:16,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.0
2020-04-29 12:02:16,459 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2020-04-29 12:02:16,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,460 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:16,461 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 0.0
2020-04-29 12:02:16,462 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXGeneral:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXGeneral ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf') with score of 0.000000.
2020-04-29 12:02:16,462 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,462 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,462 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,463 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,464 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,465 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,466 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 1.05
2020-04-29 12:02:16,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,467 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 1.335
2020-04-29 12:02:16,468 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,469 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,470 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,471 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,472 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,473 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,473 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,473 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,473 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,473 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,474 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,474 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,474 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,474 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,474 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,475 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,475 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,475 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,475 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,476 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,476 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,476 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,476 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,477 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,477 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,477 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,477 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,478 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,478 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,478 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,478 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,478 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,478 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,479 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,479 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,479 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,479 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,480 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,480 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,480 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,480 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,481 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,482 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,483 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,517 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf') with score of 0.050000.
2020-04-29 12:02:16,518 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-29 12:02:16,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 1.05
2020-04-29 12:02:16,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-29 12:02:16,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 1.335
2020-04-29 12:02:16,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 0.05
2020-04-29 12:02:16,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-29 12:02:16,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-29 12:02:16,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 10.145
2020-04-29 12:02:16,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 11.145
2020-04-29 12:02:16,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 10.25
2020-04-29 12:02:16,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:16,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 11.24
2020-04-29 12:02:16,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,536 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,536 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,536 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,536 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,537 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,537 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,537 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 11.145
2020-04-29 12:02:16,537 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,537 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,538 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,538 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,538 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 11.25
2020-04-29 12:02:16,538 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,539 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,539 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,539 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,539 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,539 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,540 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,540 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,540 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,540 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,541 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,541 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,541 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,541 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,541 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 11.24
2020-04-29 12:02:16,541 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,542 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,542 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,542 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,542 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,542 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,543 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,543 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,543 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,543 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,543 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,544 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,544 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,544 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,544 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,544 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,545 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,545 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,545 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,545 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,545 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,546 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 11.145
2020-04-29 12:02:16,546 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,546 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,547 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 10.145
2020-04-29 12:02:16,547 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,547 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,548 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 10.525
2020-04-29 12:02:16,548 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,548 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,548 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,549 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,549 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,549 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,549 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,549 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,550 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,550 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,550 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,550 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,550 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,551 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,551 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,551 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,551 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,551 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,551 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,552 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 10.535
2020-04-29 12:02:16,552 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,552 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,552 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 11.145
2020-04-29 12:02:16,552 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,553 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,553 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,553 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,553 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,553 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,554 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,554 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,554 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,554 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,554 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,554 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,555 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,555 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,555 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,556 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,556 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,556 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,557 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,557 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,557 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,557 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 11.145
2020-04-29 12:02:16,558 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,558 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,558 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,558 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,558 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 11.525
2020-04-29 12:02:16,559 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,559 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,559 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,559 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,559 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,560 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,560 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,560 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,560 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,560 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,561 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,561 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:16,561 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,561 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,562 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,562 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,562 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,562 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,563 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 10.24
2020-04-29 12:02:16,563 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,563 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,563 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,563 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,564 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,564 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,564 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 11.535
2020-04-29 12:02:16,564 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 11.05
2020-04-29 12:02:16,565 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,565 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,565 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:16,565 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,565 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,566 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:16,566 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,566 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:16,566 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,567 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,567 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 11.525
2020-04-29 12:02:16,567 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 10.145
2020-04-29 12:02:16,567 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,568 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,568 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,568 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,568 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,568 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,569 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,569 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,569 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:16,569 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,569 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:16,570 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:16,570 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,570 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 10.05
2020-04-29 12:02:16,570 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,570 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,571 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:16,571 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:16,571 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXNonUnicode ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf') with score of 0.050000.
2020-04-29 12:02:16,572 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2020-04-29 12:02:16,572 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2020-04-29 12:02:16,572 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,572 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2020-04-29 12:02:16,572 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,573 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:16,573 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 0.33499999999999996
2020-04-29 12:02:16,573 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,573 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,573 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,573 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:16,574 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,574 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,574 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:16,574 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:16,574 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,575 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,575 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.0
2020-04-29 12:02:16,575 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:16,575 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 0.0
2020-04-29 12:02:16,575 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXNonUnicode:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to STIXNonUnicode ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf') with score of 0.000000.
2020-04-29 12:02:16,576 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,576 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,576 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,576 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,577 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,577 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,577 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,577 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,577 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,578 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,578 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,578 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,578 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,578 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,579 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,579 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,579 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,579 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,579 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,580 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,580 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,580 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,581 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,581 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,581 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,581 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,582 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,582 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,582 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,582 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,582 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,582 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,583 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,583 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,583 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,583 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,584 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,584 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,584 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,584 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,584 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,585 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,585 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,585 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,585 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,585 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,586 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,586 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,586 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,586 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,586 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,587 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,587 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,587 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,587 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,588 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,588 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,588 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,588 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,588 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,589 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,589 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,589 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,589 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,589 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,590 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,590 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,590 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,590 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,591 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,591 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,591 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,591 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,591 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,591 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,592 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,592 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,592 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,592 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,593 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,593 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,593 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,593 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,593 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,593 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,594 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,594 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,594 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,594 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,594 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,595 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,595 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,595 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,595 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,595 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,595 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,596 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,596 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,596 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,596 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,597 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,597 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,597 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,598 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,598 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,598 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,598 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,598 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,599 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,599 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,599 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,599 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,600 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,600 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,600 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,600 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,600 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,601 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,601 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,601 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,601 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,601 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,602 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,602 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,602 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,602 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,602 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,602 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,603 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,603 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,603 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,603 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,603 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,604 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,604 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,604 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,604 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,604 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,604 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,605 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,605 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,605 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,605 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,605 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,606 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,606 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,606 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,606 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,606 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,607 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,607 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,607 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,607 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,607 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,608 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,608 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,608 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,608 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,608 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,608 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,609 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,609 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,609 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,609 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,609 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,610 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,610 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,610 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,610 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,610 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,611 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,611 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,611 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,611 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,611 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,612 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,612 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,612 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,613 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,613 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,613 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,613 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,614 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,614 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,614 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,614 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,614 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,615 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,615 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,615 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,615 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,615 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,616 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,616 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,616 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,616 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,616 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,616 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,617 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,617 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,617 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,617 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,617 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,618 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,618 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,618 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,618 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,618 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,619 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,619 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,619 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,619 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,619 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,620 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,620 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,620 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,620 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,620 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,620 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,621 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,621 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,621 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,621 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,621 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,622 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,622 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,622 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,622 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,622 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,623 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,623 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeOneSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeOneSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf') with score of 0.050000.
2020-04-29 12:02:16,623 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,623 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,624 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,624 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,624 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,624 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,625 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,625 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,625 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,625 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,625 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,626 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,626 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,626 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,626 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,626 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,627 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,627 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,627 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,627 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,627 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,628 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,628 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,628 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,628 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,629 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,629 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,629 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,629 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,630 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,630 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,630 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,630 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,631 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,631 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,631 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,631 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,631 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,632 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,632 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,632 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,632 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,632 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,633 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,633 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,633 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,633 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,633 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,633 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,634 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,634 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,634 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,634 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,634 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,635 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,635 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,635 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,635 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,635 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,636 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,636 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,636 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,636 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,636 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,636 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,637 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,637 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,637 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,637 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,638 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,638 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,638 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,638 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,638 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,638 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,639 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,639 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,639 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,639 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,639 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,640 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,640 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,640 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,640 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,640 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,641 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,641 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,641 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,641 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,641 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,641 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,642 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,642 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,642 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,642 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,642 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,643 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,643 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,643 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,643 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,643 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,644 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,644 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,644 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,644 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,645 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,645 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,645 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,645 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,645 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,646 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,646 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,646 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,646 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,647 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,647 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,647 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,648 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,648 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,648 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,648 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,649 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,649 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,649 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,649 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,649 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,650 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,650 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,650 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,650 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,651 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,651 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,651 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,651 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,652 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,652 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,652 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,652 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,652 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,653 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,653 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,653 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,653 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,653 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,654 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,654 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,654 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,654 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,655 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,655 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,655 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,655 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,656 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,656 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,656 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,656 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,656 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,657 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,657 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,657 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,657 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,657 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,658 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,658 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,658 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,658 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,659 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,659 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,659 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,659 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,659 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,660 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,660 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,660 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,660 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,661 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,661 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,661 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,661 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,661 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,662 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,662 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,662 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,663 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,663 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,663 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,663 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,664 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,664 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,664 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,664 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,665 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,665 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,665 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,665 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,666 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,666 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,666 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,666 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,667 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,667 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,667 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,667 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,668 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,668 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,668 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,669 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,669 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,669 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,669 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,670 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,670 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,670 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,671 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,671 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,671 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,671 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,671 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,672 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,672 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,672 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,673 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,673 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,673 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,673 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,673 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,674 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,674 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,674 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,674 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,675 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeTwoSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeTwoSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf') with score of 0.050000.
2020-04-29 12:02:16,675 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,675 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,675 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,676 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,676 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,676 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,676 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,677 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,677 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,677 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,677 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,677 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,678 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,678 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,678 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,678 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,678 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,679 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,679 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,679 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,679 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,679 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,680 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,680 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,680 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,681 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,681 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,681 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,681 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,682 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,682 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,682 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,683 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,683 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,683 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,684 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,684 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,684 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,684 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,685 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,685 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,685 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,685 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,685 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,685 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,686 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,686 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,686 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,686 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,687 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,687 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,687 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,687 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,688 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,688 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,688 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,688 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,688 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,689 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,689 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,689 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,689 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,690 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,690 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,690 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,690 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,691 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,691 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,691 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,691 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,691 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,692 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,692 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,692 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,693 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,693 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,693 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,693 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,694 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,694 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,694 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,694 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,694 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,695 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,695 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,695 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,695 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,696 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,696 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,696 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,696 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,697 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,697 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,697 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,697 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,698 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,698 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,698 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,698 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,699 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,699 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,699 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,699 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,700 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,700 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,700 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,700 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,701 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,701 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,701 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,702 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,702 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,702 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,703 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,703 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,703 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,703 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,704 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,704 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,705 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,705 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,705 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,705 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,706 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,706 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,706 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,706 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,706 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,707 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,707 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,707 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,707 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,707 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,708 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,708 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,708 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,708 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,708 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,709 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,709 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,709 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,709 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,709 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,709 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,710 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,710 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,710 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,710 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,710 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,710 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,711 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,711 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,711 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,711 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,711 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,711 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,712 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,712 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,712 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,712 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,712 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,713 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,713 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,713 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,714 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,714 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,714 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,714 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,714 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,715 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,715 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,715 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,715 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,715 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,715 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,716 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,716 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,716 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,716 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,716 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,716 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,717 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,717 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,717 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,717 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,717 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,718 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,718 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,718 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,718 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,718 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,719 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,719 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,719 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,719 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,719 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,719 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,720 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,720 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,720 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,720 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,720 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,720 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,721 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,721 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,721 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,722 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,722 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,722 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,722 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,722 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,722 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,723 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,723 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,723 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,723 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,723 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,723 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,724 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,724 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,724 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,724 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,724 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,725 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,725 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,725 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,725 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,726 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,726 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,726 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,726 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeThreeSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeThreeSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf') with score of 0.050000.
2020-04-29 12:02:16,727 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,727 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,728 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,728 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,728 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,728 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,728 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,728 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,729 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,729 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,729 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,729 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,730 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,730 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,730 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,730 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,731 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:16,731 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,731 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,731 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,731 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,732 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,732 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,732 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,732 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,732 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,733 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,733 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,733 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,733 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,733 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,734 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,734 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,734 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,734 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,734 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,734 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,735 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,735 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,735 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,735 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,735 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,736 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,736 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,736 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,736 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,736 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,736 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,737 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,737 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,737 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,737 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,738 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,738 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,738 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,738 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,738 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,738 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,739 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,739 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,739 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,739 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,739 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,740 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,740 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,740 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,740 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,740 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,741 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,741 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,741 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,741 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,741 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,742 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,742 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,742 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,742 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,742 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,742 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,743 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,743 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,743 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,743 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,743 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,744 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,744 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,744 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,744 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,744 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,745 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,745 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,745 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,745 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,745 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,745 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,746 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,746 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,746 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,746 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,746 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,747 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,747 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,747 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,747 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,748 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,748 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,748 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,748 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,748 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,749 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,749 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,749 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,749 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,749 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,749 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,750 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,750 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,750 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,750 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,750 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,751 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,751 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,751 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,751 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,751 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,751 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,752 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,752 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,752 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,752 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,752 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,753 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,753 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,753 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,753 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,753 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,753 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,754 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,754 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,754 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,754 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,755 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,755 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,755 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,755 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,755 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,755 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,756 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,756 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,756 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,756 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,756 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,757 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,757 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,757 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,757 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,758 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,758 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,758 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,758 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,758 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,759 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,759 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,759 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,759 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,760 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,760 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,760 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,760 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,760 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,761 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,761 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,761 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,761 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,761 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,762 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,762 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,762 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,762 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,763 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,763 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,763 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,763 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,763 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,764 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,764 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,764 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,764 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,764 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,765 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,765 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,765 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,765 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,765 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,766 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,766 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,766 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,766 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,766 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,767 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,767 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,767 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,767 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,768 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,768 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,768 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,768 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,768 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,769 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,769 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,769 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,769 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,769 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,770 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,770 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,770 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,770 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,770 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,770 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,771 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,771 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,771 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,771 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,771 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,772 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,772 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,772 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,772 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,772 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,772 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,773 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeFourSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFourSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf') with score of 0.050000.
2020-04-29 12:02:16,773 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,773 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,774 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,774 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,774 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,774 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,775 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,775 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,775 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,775 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 0.05
2020-04-29 12:02:16,776 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,776 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,776 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,776 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,776 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,777 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,777 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,777 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,777 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,777 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,778 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,778 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,778 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,778 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,779 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,779 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,779 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,779 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,780 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,780 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,780 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,780 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,781 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,781 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,781 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,781 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,781 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,782 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,782 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,782 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,782 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,782 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,782 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,783 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,783 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,783 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,783 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,783 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,783 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,784 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,784 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,784 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,784 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,784 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,784 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,785 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,785 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,785 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,785 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,785 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,786 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,786 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,786 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,786 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,786 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,787 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,787 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,787 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,787 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,787 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,787 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,788 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,788 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,788 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,789 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,789 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,789 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,789 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,789 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,790 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,790 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,790 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,790 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,790 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,790 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,791 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,791 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,791 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,791 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,791 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,792 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,792 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,792 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,792 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,792 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,792 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,793 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,793 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,793 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,793 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,793 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,793 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,794 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,794 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,794 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,794 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,794 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,795 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,795 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,795 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,795 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,795 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,795 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,796 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,796 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,796 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,796 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,796 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,797 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,797 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,797 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,797 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,797 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,798 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,798 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,798 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,798 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,798 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,798 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,799 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,799 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,799 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,799 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,800 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,800 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,800 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,800 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,800 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,801 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,801 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,801 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,801 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,801 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,802 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,802 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,802 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,802 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,802 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,803 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,803 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,803 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,803 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,803 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,804 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,804 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,804 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,804 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,804 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,804 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,805 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,805 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,805 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,805 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,805 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,806 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,806 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,806 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,806 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,806 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,807 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,807 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,807 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,807 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,807 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,807 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,808 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,808 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,808 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,808 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,808 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,809 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,809 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,809 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,809 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,809 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,810 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,810 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,810 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,810 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,810 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,810 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,811 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,811 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,811 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,811 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,812 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,812 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,812 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,812 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,812 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,813 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,813 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,813 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,814 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,814 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,814 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,814 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,814 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,815 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,815 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,815 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,815 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,815 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,816 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,816 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,816 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,816 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,816 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,817 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,817 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,817 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,817 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,818 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,818 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,818 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,818 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,818 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,819 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,819 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,819 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,819 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=STIXSizeFiveSym:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to STIXSizeFiveSym ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf') with score of 0.050000.
2020-04-29 12:02:16,820 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,820 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,820 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,821 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,821 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,821 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,821 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,821 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,822 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,822 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,822 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,822 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,822 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,823 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,823 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,823 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,823 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,823 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,824 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,824 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,824 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,824 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,825 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,825 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,825 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,825 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:16,826 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,826 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,826 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,826 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,827 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,827 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,827 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,828 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,828 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,828 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,828 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,828 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,829 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,829 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,829 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,829 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,830 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,830 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,830 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,830 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,831 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,831 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,831 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,831 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,832 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,832 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,832 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,832 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,832 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,833 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,833 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,833 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,833 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,834 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,834 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,834 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,834 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,834 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,834 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,835 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,835 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,835 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,836 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,836 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,836 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,836 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,836 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,837 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,837 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,837 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,837 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,838 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,838 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,838 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,839 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,839 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,839 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,840 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,840 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,840 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,840 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,841 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,841 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,841 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,841 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,842 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,842 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,842 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,842 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,843 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,843 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,843 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,843 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,844 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,844 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,844 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,844 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,845 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,845 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,845 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,845 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,846 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,846 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,846 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,846 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,847 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,847 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,847 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,848 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,848 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,848 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,849 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,849 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,850 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,850 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,850 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,851 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,851 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,851 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,852 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,852 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,852 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,852 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,853 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,853 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,853 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,853 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,854 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,854 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,854 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,854 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,854 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,855 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,855 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,855 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,855 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,855 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,856 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,856 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,856 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,856 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,856 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,857 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,857 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,857 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,858 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,858 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,858 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,858 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,858 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,859 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,859 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,859 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,859 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,860 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,860 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,860 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,860 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,861 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,861 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,861 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,861 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,862 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,862 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,862 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,863 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,863 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,863 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,863 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,863 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,864 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,864 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,864 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,864 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,865 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,865 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,865 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,865 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,866 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,866 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,866 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,867 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,867 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,867 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,868 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,868 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,868 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,868 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,869 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,869 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,869 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,869 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,870 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,870 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,870 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,870 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,870 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,871 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,871 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,871 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,871 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,871 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,872 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,872 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,872 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,872 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,872 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,873 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,873 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,873 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,873 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,874 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,874 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,874 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,874 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,874 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,875 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,875 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,875 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,875 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,875 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,876 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,876 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,876 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,876 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmsy10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmsy10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf') with score of 0.050000.
2020-04-29 12:02:16,877 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,877 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,877 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,877 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,877 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:16,878 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,878 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,878 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,878 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,878 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,879 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,879 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,879 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,879 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,879 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,879 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,880 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,880 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,880 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,880 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,880 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,881 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,881 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,881 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,881 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,881 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,882 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,882 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,882 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,882 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,883 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,883 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,883 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,883 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,883 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,884 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,884 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,884 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,884 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,885 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,885 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,885 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,885 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,885 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,886 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,886 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,886 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,886 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,887 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,887 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,887 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,887 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,887 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,888 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,888 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,888 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,888 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,889 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,889 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,889 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,889 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,889 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,890 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,890 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,890 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,890 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,890 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,890 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,891 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,891 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,891 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,891 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,891 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,892 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,892 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,892 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,892 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,892 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,892 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,893 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,893 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,893 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,893 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,893 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,894 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,894 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,894 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,894 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,894 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,894 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,895 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,895 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,895 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,895 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,895 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,895 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,896 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,896 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,896 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,896 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,897 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,897 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,897 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,897 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,898 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,898 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,898 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,898 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,898 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,898 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,899 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,899 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,899 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,899 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,899 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,900 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,900 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,900 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,900 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,900 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,900 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,901 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,901 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,901 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,901 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,901 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,902 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,902 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,902 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,902 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,902 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,902 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,903 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,903 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,903 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,903 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,903 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,904 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,904 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,904 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,904 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,904 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,904 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,905 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,905 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,905 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,905 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,905 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,905 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,906 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,906 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,906 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,906 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,906 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,907 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,907 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,907 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,907 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,907 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,907 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,908 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,908 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,908 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,908 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,908 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,909 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,909 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,909 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,909 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,909 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,909 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,910 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,910 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,910 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,910 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,910 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,911 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,911 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,911 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,911 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,911 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,911 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,912 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,912 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,912 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,912 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,912 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,913 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,913 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,913 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,913 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,914 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,914 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,914 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,914 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,914 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,915 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,915 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,915 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,915 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,915 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,915 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,916 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,916 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,916 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,916 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,916 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,917 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,917 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,917 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,917 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,917 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,918 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,918 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,918 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,918 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,918 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,919 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,919 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,919 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,919 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,919 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,920 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,920 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,920 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,920 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,920 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,921 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,921 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,921 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,921 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmr10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmr10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf') with score of 0.050000.
2020-04-29 12:02:16,922 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,922 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,922 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,922 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,922 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,923 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,923 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,923 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,923 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:16,923 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,924 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,924 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,924 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,924 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,924 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,925 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,925 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,925 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,925 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,925 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,925 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,926 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,926 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,926 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,926 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,927 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,927 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,927 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,927 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,927 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,928 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,928 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,928 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,928 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,929 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,929 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,929 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,929 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,930 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,930 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,930 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,931 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,931 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,931 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,931 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,931 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,932 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,932 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,932 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,932 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,933 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,933 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,933 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,933 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,934 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,934 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,934 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,934 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,935 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,935 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,935 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,935 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,935 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,936 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,936 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,936 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,936 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,936 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,937 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,937 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,937 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,937 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,937 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,938 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,938 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,938 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,938 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,938 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,938 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,939 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,939 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,939 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,939 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,939 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,939 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,940 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,940 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,940 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,940 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,940 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,941 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,941 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,941 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,941 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,941 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,941 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,942 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,942 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,942 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,942 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,942 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,943 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,943 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,943 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,943 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,943 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,943 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,944 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,944 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,944 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,945 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,945 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,945 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,945 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,945 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,946 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,946 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,946 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,946 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,946 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,947 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,947 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,947 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,947 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,947 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,947 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,948 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,948 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,948 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,948 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,948 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,949 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,949 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,949 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,949 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,949 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,949 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,950 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,950 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,950 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,950 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,950 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,951 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:16,951 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,951 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,951 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,952 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,952 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,952 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,952 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,953 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,953 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,953 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,953 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,953 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,954 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,954 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,954 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,954 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,954 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,955 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,955 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,955 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,955 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,955 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,955 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,956 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,956 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,956 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,956 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,956 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,957 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,957 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,957 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,957 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,957 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,958 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,958 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,958 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,958 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,958 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,958 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,959 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,959 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,959 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,959 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,959 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,960 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,960 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,960 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,960 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,960 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:16,961 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,961 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,961 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,961 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,961 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,961 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,962 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:16,962 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,962 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,962 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,962 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,963 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,963 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,963 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,963 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,964 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,964 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,964 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,964 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:16,965 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,965 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,965 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,965 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,965 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,966 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,966 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,966 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,966 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,966 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,967 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,967 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,967 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,967 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,968 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,968 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,968 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,968 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,968 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,969 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmtt10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmtt10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf') with score of 0.050000.
2020-04-29 12:02:16,969 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:16,969 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,970 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,970 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,970 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,970 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,970 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,971 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,971 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,971 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,971 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,971 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,971 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,972 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,972 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,972 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,972 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,972 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,973 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,973 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,973 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,973 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,973 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,974 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,974 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,974 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,974 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,974 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,975 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,975 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,975 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,975 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,975 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,975 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,976 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,976 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:16,976 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:16,976 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:16,976 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,977 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,977 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,977 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,977 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,977 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,978 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,978 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,978 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,978 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,978 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,978 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,979 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:16,979 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,979 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,979 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,980 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,980 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,980 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,980 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,980 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,981 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,981 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,981 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,981 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:16,981 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:16,982 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,982 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,982 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:16,982 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,982 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,983 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,983 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,983 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,983 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,983 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,984 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:16,984 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,984 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,984 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,984 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,985 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:16,985 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,985 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,985 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,986 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,986 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:16,986 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,986 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,987 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,987 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,987 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,988 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,988 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,988 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,988 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,988 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:16,988 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,989 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,989 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,989 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,989 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,990 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,990 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,990 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,991 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,991 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,991 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,991 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,991 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,992 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,992 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,992 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,992 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,992 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,992 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,993 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,993 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,993 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:16,993 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,993 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,994 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:16,994 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,994 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,994 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:16,995 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,995 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,995 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,996 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,996 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,996 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,996 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:16,997 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,997 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,997 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,998 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:16,998 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:16,998 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,998 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:16,999 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:16,999 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:16,999 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:16,999 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:16,999 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,000 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,000 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,000 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,001 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,001 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,001 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,002 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,002 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,002 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,002 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,003 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,003 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,003 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,003 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,004 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,004 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,004 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,005 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,005 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,005 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,005 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,006 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,006 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,006 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,006 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,006 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,007 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,007 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,007 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,007 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,008 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,008 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,008 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,008 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,009 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,009 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,009 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,010 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,010 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,010 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,010 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,010 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,011 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,011 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,011 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,011 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,012 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,012 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,012 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,012 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,012 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,013 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,013 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,013 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,013 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,014 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,014 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,014 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,014 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,014 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,015 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,015 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,015 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,015 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,015 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,015 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,016 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,016 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,016 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,016 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,016 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,017 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,017 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,017 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,017 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,018 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,018 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,018 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,018 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,019 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,019 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,019 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,019 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,020 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,020 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,020 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,020 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,021 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,021 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmmi10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmmi10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf') with score of 0.050000.
2020-04-29 12:02:17,021 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,022 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,022 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,022 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,023 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,023 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,023 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,023 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,024 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,024 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,024 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,024 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,025 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,025 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,025 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,025 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,025 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,026 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,026 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,026 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,026 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,027 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,027 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,027 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,027 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:17,028 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,028 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,028 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,028 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,029 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,029 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,029 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,030 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,030 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,030 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,031 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,031 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,031 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,032 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,032 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,032 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,033 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,033 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,033 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,034 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,034 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,035 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,035 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,035 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,035 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,036 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,036 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,036 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,036 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,037 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,037 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,037 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,038 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,038 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,038 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,039 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,039 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,039 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:17,039 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,040 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,040 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,040 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,040 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,040 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,041 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,041 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,041 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,041 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,041 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,042 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,042 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,042 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,042 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,043 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,043 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:17,043 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,043 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,044 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,044 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,044 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,044 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,044 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,045 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,045 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,045 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,045 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,046 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,046 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,046 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,046 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,047 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,047 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,047 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,048 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,048 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,049 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,049 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,049 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,050 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,050 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,050 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,050 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,051 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,051 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,052 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,052 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,052 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,052 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,053 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,053 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,053 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,053 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,054 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,054 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,054 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,054 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,055 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,055 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,055 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,055 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,056 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,056 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,056 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,056 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,057 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,057 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,057 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,057 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,057 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,058 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,058 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,058 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,058 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,059 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,059 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,059 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,059 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,059 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,060 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,060 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,060 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,060 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,061 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,061 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,061 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,061 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,061 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,062 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,062 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,062 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,062 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,063 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,063 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,063 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,063 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,064 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,064 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,064 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,064 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,065 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,065 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,065 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,065 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,065 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,065 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,066 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,066 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,066 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,066 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,066 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,067 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,067 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,067 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,067 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,067 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,068 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,068 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,068 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,068 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,069 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,069 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,069 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,069 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,069 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,069 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,070 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,070 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,070 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,070 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,070 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,071 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,071 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,071 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,071 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,071 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,072 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,072 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,072 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,072 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,072 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,072 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,073 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,073 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,073 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,073 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,073 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,074 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,074 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,074 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,074 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,074 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,074 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,075 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,075 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,075 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,075 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,075 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,076 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,076 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,076 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,076 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,076 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,076 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,077 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,077 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,077 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmb10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmb10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf') with score of 0.050000.
2020-04-29 12:02:17,078 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,078 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,078 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,078 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,079 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,079 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,079 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,079 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,079 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,080 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,080 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,080 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,080 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,081 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,081 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,081 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,081 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,081 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,082 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,082 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,082 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,082 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,082 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,083 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,083 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,083 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,083 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:17,083 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,083 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,084 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,084 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,084 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,084 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,084 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,085 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,085 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,085 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,085 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,085 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,085 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,086 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,086 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,086 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,086 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,086 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,087 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,087 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,087 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,087 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,087 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,088 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,088 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,088 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,088 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,088 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,089 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,089 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,089 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,089 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,089 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,089 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,090 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,090 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:17,090 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,090 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,090 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,090 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,091 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,091 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,091 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,091 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,091 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,092 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,092 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,092 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,092 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,092 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,092 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,093 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,093 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:17,093 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,093 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,093 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,094 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,094 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,094 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,094 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,094 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,094 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,095 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,095 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,095 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,095 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,095 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,096 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,096 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,096 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,096 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,097 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,097 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,097 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,097 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,098 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,098 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,098 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,098 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,098 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,099 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,099 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,099 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,099 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,100 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,100 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,100 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,100 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,100 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,101 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,101 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,101 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,101 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,102 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,102 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,102 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,102 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,102 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,103 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,103 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,103 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,103 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,103 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,103 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,104 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,104 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,104 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,104 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,104 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,105 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,105 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,105 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,105 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,105 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,106 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,106 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,106 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,106 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,106 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,107 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,107 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,107 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,107 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,107 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,108 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,108 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,108 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,108 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,108 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,108 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,109 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,109 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,109 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,109 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,109 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,109 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,110 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,110 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,110 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,110 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,110 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,111 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,111 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,111 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,111 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,111 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,111 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,112 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,112 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,112 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,112 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,112 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,113 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,113 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,113 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,113 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,113 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,114 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,114 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,114 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,114 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,114 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,114 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,115 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,115 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,115 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,115 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,116 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,116 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,116 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,116 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,117 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,117 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,117 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,117 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,118 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,118 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,118 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,118 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,118 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,119 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,119 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,119 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,119 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,119 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,120 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,120 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,120 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,120 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,120 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,121 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,121 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,121 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,121 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,121 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,122 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,122 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,122 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,122 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,122 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,122 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,123 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,123 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,123 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmss10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmss10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf') with score of 0.050000.
2020-04-29 12:02:17,124 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,124 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,124 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,124 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,125 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,125 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,125 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,125 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,125 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,126 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,126 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,126 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,126 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,126 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,126 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,127 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,127 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,127 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,127 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,127 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,128 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,128 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,128 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,128 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:17,128 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,129 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,129 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,129 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,129 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,129 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,130 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,130 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,130 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,131 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,131 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,131 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,132 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,132 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,132 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,132 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,133 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,133 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,133 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,133 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,133 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,134 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,134 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,134 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,134 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,134 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,134 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,135 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,135 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,135 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,135 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,135 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,136 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,136 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,136 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,136 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,136 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,137 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,137 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:17,137 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,137 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,137 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,137 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,138 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,138 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,138 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,138 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,138 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,139 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,139 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,139 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,139 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,139 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,140 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,140 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,140 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:17,140 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,140 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,141 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,141 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,141 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,141 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,141 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,141 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,142 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,142 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,142 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,142 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,142 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,143 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,143 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,143 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,143 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,143 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,144 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,144 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,144 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,144 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,144 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,145 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,145 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,145 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,145 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,145 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,145 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,146 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,146 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,146 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,147 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,147 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,147 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,147 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,148 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,148 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,148 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,148 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,148 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,149 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,149 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,149 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,149 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,149 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,150 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,150 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,150 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,150 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,150 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,151 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,151 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,151 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,151 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,151 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,152 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,152 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,152 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,152 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,152 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,153 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,153 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,153 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,153 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,154 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,154 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,154 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,154 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,154 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,155 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,155 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,155 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,155 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,156 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,156 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,156 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,156 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,157 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,157 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,157 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,157 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,157 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,158 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,158 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,158 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,158 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,159 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,159 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,159 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,159 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,159 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,160 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,160 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,160 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,160 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,160 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,161 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,161 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,161 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,161 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,161 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,162 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,162 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,162 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,162 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,163 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,163 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,163 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,164 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,164 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,164 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,164 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,164 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,165 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,165 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,165 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,165 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,166 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,166 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,166 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,166 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,167 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,167 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,167 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,167 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,168 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,168 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,168 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,168 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,169 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,169 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,169 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,169 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,170 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,170 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,170 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,170 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,171 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,171 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,171 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,172 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,172 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,172 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,172 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,173 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,173 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,173 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,173 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,174 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,174 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=cmex10:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to cmex10 ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf') with score of 0.050000.
2020-04-29 12:02:17,175 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,175 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,175 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,175 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,175 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,176 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,176 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,176 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,176 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,177 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,177 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,177 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,177 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,177 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,178 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,178 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,178 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,178 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,179 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,179 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,179 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,179 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,180 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,180 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,180 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,180 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,181 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,181 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,181 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,181 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:17,181 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,182 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:17,182 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,182 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,182 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,183 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,183 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-04-29 12:02:17,183 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-04-29 12:02:17,183 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,183 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,183 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,184 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,184 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,184 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,184 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,184 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,184 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,185 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,185 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,185 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,185 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,186 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,186 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,186 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,186 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,187 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,187 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,187 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,188 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,188 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,188 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,188 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,189 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:17,189 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,189 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,189 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,190 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,190 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,190 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,190 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,190 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,191 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,191 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,191 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,191 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,191 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,191 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,192 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,192 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,192 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:17,192 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,192 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,193 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,193 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,193 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,193 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,193 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,194 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,194 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,194 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,194 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,194 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,195 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,195 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,195 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,195 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,195 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,196 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,196 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,196 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,196 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,197 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,197 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,197 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,197 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,198 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,198 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,198 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,198 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,199 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,199 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,199 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,199 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,199 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,200 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,200 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,200 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,200 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,200 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,201 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,201 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,201 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,201 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,201 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,202 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,202 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,202 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,202 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,202 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,202 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,203 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,203 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,203 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,203 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,203 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,204 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,204 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,204 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,204 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,204 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,204 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,205 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,205 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,205 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,205 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,205 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,205 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,206 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,206 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,206 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,207 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,207 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,207 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,208 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,208 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,208 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,208 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,209 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,209 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,209 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,210 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,210 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,210 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,210 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,211 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,211 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,211 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,211 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,212 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,212 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,212 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,213 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,213 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,213 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,214 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,214 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,214 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,214 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,215 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,215 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,215 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,215 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,215 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,216 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,216 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,216 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,216 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,217 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,217 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,217 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,218 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,218 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,218 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,218 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,218 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,219 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,219 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,219 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,220 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,220 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,220 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,220 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,221 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,221 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,221 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,221 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,221 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,222 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,222 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,222 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,222 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,222 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,222 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,223 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,223 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,223 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,223 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,223 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,224 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,224 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,224 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,224 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,224 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,225 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,225 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,225 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,225 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,226 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,226 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,226 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,227 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2020-04-29 12:02:17,227 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,227 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 10.15
2020-04-29 12:02:17,228 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,228 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,228 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,228 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,228 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,229 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,229 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,229 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,229 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,230 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,230 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,230 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,230 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,230 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,231 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,231 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 10.434999999999999
2020-04-29 12:02:17,231 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,232 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,232 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,232 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,233 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,233 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,233 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,234 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,234 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,234 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,234 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,234 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 1.335
2020-04-29 12:02:17,235 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,235 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 1.05
2020-04-29 12:02:17,235 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,235 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,235 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,236 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,236 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 0.43499999999999994
2020-04-29 12:02:17,236 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 0.15000000000000002
2020-04-29 12:02:17,236 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,237 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,237 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,237 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,237 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,237 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,238 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,238 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,238 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,238 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,238 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,239 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,239 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 10.145
2020-04-29 12:02:17,239 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,239 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,239 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:17,240 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,240 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,240 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 11.145
2020-04-29 12:02:17,240 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,240 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,240 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,241 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,241 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,241 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 10.25
2020-04-29 12:02:17,241 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:17,241 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,242 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,242 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 11.24
2020-04-29 12:02:17,242 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,242 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,243 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,243 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,243 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,243 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,243 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,243 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 11.145
2020-04-29 12:02:17,244 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,244 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,244 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,244 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,244 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 11.25
2020-04-29 12:02:17,245 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:17,245 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,245 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,245 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,245 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,245 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,246 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,246 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,246 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,246 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,246 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,247 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,247 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,247 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,247 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 11.24
2020-04-29 12:02:17,248 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,248 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,248 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,248 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,249 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,249 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,249 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:17,249 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,249 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,250 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,250 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,250 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,250 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,250 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,251 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,251 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,251 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,251 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:17,251 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,252 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,252 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,252 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 11.145
2020-04-29 12:02:17,252 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,252 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,252 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 10.145
2020-04-29 12:02:17,253 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,253 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,253 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 10.525
2020-04-29 12:02:17,253 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,253 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:17,254 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,254 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,254 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,254 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,254 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,255 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:17,255 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,255 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,255 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,255 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:17,255 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,256 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,256 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:17,256 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:17,256 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,257 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,257 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,257 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 10.535
2020-04-29 12:02:17,257 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,257 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,257 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 11.145
2020-04-29 12:02:17,258 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,258 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,258 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,258 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:17,258 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,259 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,259 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,259 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,259 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,259 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,260 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,260 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,260 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,260 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,261 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,261 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,261 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,261 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,261 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,261 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,262 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,262 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 11.145
2020-04-29 12:02:17,262 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,262 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,262 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,263 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,263 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 11.525
2020-04-29 12:02:17,263 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,264 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,264 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,264 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,264 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,264 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,265 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,265 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,265 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,265 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,265 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,265 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 11.24
2020-04-29 12:02:17,266 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,266 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,266 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,266 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,266 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,267 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:17,267 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 10.24
2020-04-29 12:02:17,267 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,267 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,268 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,268 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,268 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,268 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,268 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 11.535
2020-04-29 12:02:17,269 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 11.05
2020-04-29 12:02:17,269 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,269 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,269 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 10.05
2020-04-29 12:02:17,270 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,270 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,270 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:17,270 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,270 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 11.24
2020-04-29 12:02:17,270 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,271 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,271 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 11.525
2020-04-29 12:02:17,271 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 10.145
2020-04-29 12:02:17,271 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,271 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,272 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,272 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,272 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,272 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,272 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,273 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,273 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 10.335
2020-04-29 12:02:17,273 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,273 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 10.24
2020-04-29 12:02:17,273 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 11.335
2020-04-29 12:02:17,274 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,274 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 10.05
2020-04-29 12:02:17,274 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,274 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,275 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 11.05
2020-04-29 12:02:17,275 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 11.05
2020-04-29 12:02:17,275 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=italic:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf') with score of 0.150000.
2020-04-29 12:02:17,276 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0.
2020-04-29 12:02:17,276 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.335
2020-04-29 12:02:17,276 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,276 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.335
2020-04-29 12:02:17,276 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,277 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:17,277 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,277 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,277 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,277 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,278 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:17,278 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,278 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,278 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,278 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,278 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:17,279 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:17,279 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.0
2020-04-29 12:02:17,279 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:17,279 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:17,280 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.335
2020-04-29 12:02:17,280 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:17,280 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.335
2020-04-29 12:02:17,280 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,280 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,281 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,281 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.335
2020-04-29 12:02:17,281 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.0
2020-04-29 12:02:17,281 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.0
2020-04-29 12:02:17,281 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 0.0
2020-04-29 12:02:17,281 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans:style=normal:variant=normal:weight=bold:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf') with score of 0.000000.
2020-04-29 12:02:17,282 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,282 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-04-29 12:02:17,282 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,283 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,283 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,283 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,283 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,283 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,284 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,284 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,284 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,284 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,284 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,285 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,285 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,285 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,285 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,285 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 1.335
2020-04-29 12:02:17,286 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,286 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,286 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,286 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 0.33499999999999996
2020-04-29 12:02:17,286 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,287 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,287 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,287 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,287 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,287 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,287 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,288 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,288 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,288 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,288 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:17,289 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,289 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,289 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,289 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,289 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,289 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,290 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,290 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,290 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,290 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,290 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,291 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,291 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,291 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,291 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,291 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,291 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,292 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,292 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,292 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,292 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,292 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,293 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,293 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,293 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,293 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,293 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,293 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,294 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,294 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:17,294 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,294 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,294 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,295 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,295 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,295 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,295 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,295 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,295 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,296 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,296 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,296 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,296 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,296 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,297 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,297 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,297 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:17,297 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,298 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,298 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,298 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,298 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,298 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,298 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,299 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,299 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,299 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,299 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,300 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,300 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,300 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,300 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,301 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,301 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,301 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,301 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,301 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,301 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,302 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,302 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,302 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,302 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,302 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,303 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,303 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,303 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,303 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,303 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,303 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,304 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,304 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,304 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,304 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,304 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,305 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,305 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,305 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,305 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,305 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,305 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,306 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,306 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,306 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,306 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,306 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,307 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,307 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,307 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,307 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,307 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,308 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,308 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,308 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,308 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,308 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,308 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,309 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,309 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,309 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,309 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,309 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,310 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,310 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,310 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,310 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,310 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,310 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,311 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,311 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,311 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,311 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,311 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,312 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,312 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,312 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,312 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,312 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,313 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,313 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,313 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,313 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,313 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,314 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,314 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,314 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,314 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,314 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,315 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,315 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,315 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,315 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,315 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,315 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,316 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,316 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,316 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,316 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,316 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,317 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,317 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,317 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,318 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,318 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,318 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,318 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,318 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,319 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,319 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,319 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,319 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,320 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,320 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,320 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,320 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,321 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,321 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,321 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,321 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,322 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,322 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,322 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,323 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,323 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,323 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,323 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,324 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,324 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,324 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,324 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,324 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,324 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,325 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,325 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,325 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,325 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,325 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,326 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,326 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,326 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,326 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,327 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,327 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,327 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,327 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,327 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,328 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,328 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,328 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans Mono:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Mono ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf') with score of 0.050000.
2020-04-29 12:02:17,329 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-04-29 12:02:17,329 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,329 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,329 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,329 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,330 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,330 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,330 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,330 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,331 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,331 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,331 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,331 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,331 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 0.05
2020-04-29 12:02:17,332 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,332 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,332 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,332 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,333 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,333 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,333 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,333 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,333 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,334 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,334 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,334 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,334 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,334 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,334 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,335 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,335 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,335 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,335 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,336 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,336 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,336 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,336 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,336 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,336 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,337 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,337 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,337 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,337 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,337 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,338 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,338 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,338 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,338 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,338 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,339 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,339 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,339 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,339 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,339 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,340 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,340 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,340 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,340 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,340 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,341 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,341 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,341 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,342 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 11.25
2020-04-29 12:02:17,342 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,342 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,342 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,342 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,343 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,343 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,343 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,344 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,344 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,344 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,344 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,345 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,345 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,345 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,345 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,346 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,346 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 10.25
2020-04-29 12:02:17,346 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,346 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,347 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,347 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,347 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,348 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,348 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,348 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,348 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,349 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,349 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,349 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,349 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,350 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,350 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,350 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,351 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,351 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,351 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,351 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,352 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,352 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,352 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,352 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,353 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,353 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,353 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,353 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,353 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,354 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,354 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,354 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,354 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,355 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,355 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,355 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,355 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,355 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,356 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,356 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,356 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,357 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,357 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,357 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,357 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,358 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,358 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,358 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,359 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,359 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,359 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,359 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,360 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,360 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,360 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,360 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,360 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,361 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,361 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,361 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,361 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,362 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,362 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 11.535
2020-04-29 12:02:17,362 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,362 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,363 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,364 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,365 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,366 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,367 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,368 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,369 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,370 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,371 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,372 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,373 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,374 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,375 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,376 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 10.535
2020-04-29 12:02:17,377 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,378 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,379 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,380 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,381 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,382 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,383 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,384 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,385 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,386 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,386 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=DejaVu Sans Display:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans Display ('C:\\Users\\maya.benowitz\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf') with score of 0.050000.
2020-04-29 12:02:17,475 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,475 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,476 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,476 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,477 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,478 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,483 [28820] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2020-04-29 12:02:17,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-04-29 12:02:17,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,484 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,485 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,486 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-04-29 12:02:17,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,487 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,488 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-04-29 12:02:17,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,489 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-04-29 12:02:17,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,490 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-04-29 12:02:17,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-04-29 12:02:17,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,491 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,492 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,493 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,494 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,495 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-04-29 12:02:17,496 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-04-29 12:02:17,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,497 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,498 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-04-29 12:02:17,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,499 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-04-29 12:02:17,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-04-29 12:02:17,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-04-29 12:02:17,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,500 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,501 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,502 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-04-29 12:02:17,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,503 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,504 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,505 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,506 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,507 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,508 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-04-29 12:02:17,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-04-29 12:02:17,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,509 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,510 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,511 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,512 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,513 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-04-29 12:02:17,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-04-29 12:02:17,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,514 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,515 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,516 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,517 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,518 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-04-29 12:02:17,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,519 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-04-29 12:02:17,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,520 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-04-29 12:02:17,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,521 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,522 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-04-29 12:02:17,523 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,524 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-04-29 12:02:17,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,525 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,526 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-04-29 12:02:17,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-04-29 12:02:17,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,527 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-04-29 12:02:17,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,528 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,529 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-04-29 12:02:17,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,530 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-04-29 12:02:17,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-04-29 12:02:17,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,531 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,532 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-04-29 12:02:17,533 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-04-29 12:02:17,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-04-29 12:02:17,534 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-04-29 12:02:17,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,535 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,536 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-04-29 12:02:17,536 [28820] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-04-29 12:02:17,536 [28820] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-04-29 12:02:17,539 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,539 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,541 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,541 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,543 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,543 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,571 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,571 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,572 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,572 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,573 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,573 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,585 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,586 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,587 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,587 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,588 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,588 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,593 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,593 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,594 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,594 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,595 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,595 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,604 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,604 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,605 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,606 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,606 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,607 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,610 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,610 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,611 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,611 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,612 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,613 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,621 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,621 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,623 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,623 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,623 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,624 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,629 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,630 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,631 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,632 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,633 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,633 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,641 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,641 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,642 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,642 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,643 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,643 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,647 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,648 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,649 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,649 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,650 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,650 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,659 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,659 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,660 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,660 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,661 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,661 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,667 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,668 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,669 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,669 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,670 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,670 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,680 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,680 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,682 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,682 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,683 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,684 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,688 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,689 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,690 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,690 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,691 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,691 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,698 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,699 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,700 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,700 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,701 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,702 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,710 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,711 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,712 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,712 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,713 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,714 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,722 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,722 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,723 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,724 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,724 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,725 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,728 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,729 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,730 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,731 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,731 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,732 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,741 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,741 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,742 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,743 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,743 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,744 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,749 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,749 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,750 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,750 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,751 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,751 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,760 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,760 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,761 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,761 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,762 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,762 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,766 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,767 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,767 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,768 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,769 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,769 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,777 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,777 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,778 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,779 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,780 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,780 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,800 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,800 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,801 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,801 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 12:02:17,802 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 12:02:17,802 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 12:02:17,810 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,811 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,811 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,812 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,812 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,813 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 12:02:17,819 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,819 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,820 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,820 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 12:02:17,821 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.689129894571982 vmax 91.2558208634102
2020-04-29 12:02:17,822 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 19:37:50,914 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:37:51,319 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=compact&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:39:33,447 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:39:34,318 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:47:57,267 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:47:58,189 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:48:00,111 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:48:01,342 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:48:03,154 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:48:03,901 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:48:05,461 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:48:06,253 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:48:08,359 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:48:09,098 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AAPL&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:48:15,181 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:48:15,888 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AMZN&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 19:48:51,683 [28820] DEBUG    urllib3.connectionpool:813: [JupyterRequire] Starting new HTTPS connection (1): www.alphavantage.co:443
2020-04-29 19:48:51,959 [28820] DEBUG    urllib3.connectionpool:393: [JupyterRequire] https://www.alphavantage.co:443 "GET /query?function=TIME_SERIES_DAILY&symbol=AMZN&outputsize=full&apikey=34CW4J294SBIRRAM&datatype=json HTTP/1.1" 200 None
2020-04-29 22:10:36,846 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,846 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,849 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,849 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,854 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,854 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,855 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,855 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,856 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,856 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:36,911 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,911 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,913 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,913 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,914 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,914 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:36,923 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,924 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,925 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,925 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,926 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,926 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:36,951 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,951 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,952 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,953 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,953 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,954 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:36,965 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,965 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,966 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,967 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,967 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,968 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:36,972 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,972 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,973 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,973 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:36,974 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:36,975 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:36,984 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,984 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,986 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,986 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,987 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,987 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:36,990 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,991 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,992 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,992 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:36,993 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:36,993 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,001 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,001 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,002 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,002 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,003 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,003 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,008 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,008 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,009 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,010 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,010 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,011 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,019 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,019 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,020 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,020 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,021 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,021 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,024 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,025 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,026 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,026 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,027 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,027 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,036 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,036 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,037 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,037 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,038 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,039 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,044 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,045 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,046 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,046 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,047 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,047 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,057 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,058 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,059 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,059 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,060 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,060 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,064 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,065 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,066 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,066 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,067 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,067 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,074 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,074 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,076 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,076 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,077 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,077 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,082 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,082 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,083 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,083 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,084 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,084 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,093 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,093 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,094 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,094 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,095 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,095 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,099 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,099 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,100 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,101 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,101 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,102 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,110 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,111 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,112 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,112 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,113 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,113 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,118 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,118 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,119 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,119 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,120 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,121 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,130 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,130 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,131 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,131 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,132 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,132 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,136 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,136 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,137 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,137 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,138 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,138 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,146 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,146 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,147 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,147 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,148 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,148 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,168 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,169 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,170 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,170 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:10:37,171 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.525453620363054 vmax 3915.7381840017647
2020-04-29 22:10:37,171 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:10:37,178 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,178 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,179 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,180 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,180 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,181 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:10:37,186 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,186 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,187 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,188 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:10:37,189 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 3.4437448659740926 vmax 69.8202607929018
2020-04-29 22:10:37,189 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,138 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,138 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,141 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,141 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,145 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,146 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,147 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,147 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,148 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,148 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,198 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,199 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,200 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,201 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,202 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,202 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,212 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,212 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,213 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,214 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,214 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,215 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,241 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,241 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,242 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,243 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,243 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,244 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,255 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,256 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,257 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,257 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,258 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,258 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,263 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,263 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,264 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,264 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,265 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,265 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,273 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,274 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,274 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,275 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,276 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,276 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,280 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,280 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,281 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,282 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,282 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,282 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,290 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,290 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,291 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,292 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,292 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,293 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,297 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,297 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,298 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,299 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,299 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,300 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,308 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,308 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,309 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,309 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,310 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,310 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,314 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,314 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,315 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,315 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,316 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,316 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,323 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,324 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,325 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,325 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,326 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,326 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,331 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,331 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,332 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,332 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,333 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,333 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,342 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,343 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,344 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,345 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,346 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,346 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,350 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,350 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,351 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,351 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,352 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,353 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,359 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,360 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,361 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,362 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,363 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,363 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,368 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,369 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,370 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,370 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,371 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,372 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,381 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,381 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,383 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,383 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,384 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,384 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,391 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,391 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,392 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,393 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,393 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,394 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,401 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,402 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,402 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,403 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,404 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,404 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,408 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,409 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,410 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,410 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,411 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,411 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,419 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,419 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,420 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,420 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,421 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,421 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,425 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,425 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,426 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,426 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,427 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,427 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,435 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,435 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,436 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,437 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,437 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,438 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,457 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,458 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,459 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,459 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03, 1.e+04, 1.e+05])
2020-04-29 22:13:41,460 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 7.527521406631758 vmax 3893.2116677655254
2020-04-29 22:13:41,460 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03,
       2.e+04, 3.e+04, 4.e+04, 5.e+04, 6.e+04, 7.e+04, 8.e+04, 9.e+04,
       2.e+05, 3.e+05, 4.e+05, 5.e+05, 6.e+05, 7.e+05, 8.e+05, 9.e+05])
2020-04-29 22:13:41,467 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,468 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,469 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,469 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,470 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,470 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-29 22:13:41,475 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,476 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,476 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,477 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([1.e-01, 1.e+00, 1.e+01, 1.e+02, 1.e+03])
2020-04-29 22:13:41,477 [28820] DEBUG    matplotlib.ticker:2300: [JupyterRequire] vmin 2.8352395255349356 vmax 64.90683581802244
2020-04-29 22:13:41,478 [28820] DEBUG    matplotlib.ticker:2351: [JupyterRequire] ticklocs array([2.e-01, 3.e-01, 4.e-01, 5.e-01, 6.e-01, 7.e-01, 8.e-01, 9.e-01,
       2.e+00, 3.e+00, 4.e+00, 5.e+00, 6.e+00, 7.e+00, 8.e+00, 9.e+00,
       2.e+01, 3.e+01, 4.e+01, 5.e+01, 6.e+01, 7.e+01, 8.e+01, 9.e+01,
       2.e+02, 3.e+02, 4.e+02, 5.e+02, 6.e+02, 7.e+02, 8.e+02, 9.e+02,
       2.e+03, 3.e+03, 4.e+03, 5.e+03, 6.e+03, 7.e+03, 8.e+03, 9.e+03])
2020-04-30 12:12:35,111 [13540] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-30 12:12:35,112 [13540] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-30 12:12:35,112 [13540] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-30 12:12:35,114 [13540] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-30 12:12:35,115 [13540] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-30 12:12:35,115 [13540] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-04-30 12:12:35,824 [13540] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-04-30 12:12:35,824 [13540] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-04-30 12:12:35,824 [13540] INFO     root:247: [JupyterRequire] Initializing comms.
2020-04-30 12:12:35,826 [13540] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-04-30 12:12:35,826 [13540] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-04-30 12:12:35,827 [13540] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-01 13:43:41,114 [37044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-01 13:43:41,114 [37044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-01 13:43:41,114 [37044] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-01 13:43:41,117 [37044] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-01 13:43:41,118 [37044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-01 13:43:41,118 [37044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-01 13:43:41,639 [37044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-01 13:43:41,639 [37044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-01 13:43:41,640 [37044] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-01 13:43:41,644 [37044] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-01 13:43:41,645 [37044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-01 13:43:41,646 [37044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-01 14:39:45,682 [37044] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-01 14:39:45,683 [37044] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-01 14:39:45,683 [37044] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-01 14:39:45,686 [37044] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-01 14:39:45,687 [37044] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-01 14:39:45,687 [37044] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-01 14:39:45,687 [37044] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-01 14:39:45,688 [37044] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-01 14:39:50,767 [37044] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-01 14:39:50,773 [37044] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-01 14:39:51,047 [37044] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-01 14:39:52,069 [37044] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-01 14:39:54,993 [37044] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-01 14:39:55,101 [37044] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-01 14:39:55,102 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-01 14:39:55,102 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,102 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,103 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,103 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,103 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,103 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,103 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,104 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,104 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,104 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,104 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,104 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,105 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,105 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,105 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,105 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-01 14:39:55,105 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,105 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,106 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,106 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,106 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,106 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,107 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,107 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,107 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,108 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,108 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,108 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-01 14:39:55,108 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,108 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-01 14:39:55,109 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,109 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,109 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,109 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,110 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-01 14:39:55,110 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-01 14:39:55,110 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,110 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,111 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,111 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,111 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,111 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,112 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,112 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,113 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,113 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,114 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,114 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,114 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-01 14:39:55,115 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,115 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,115 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,116 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,116 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,116 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-01 14:39:55,116 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,116 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,117 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,117 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,117 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,117 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-01 14:39:55,118 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-01 14:39:55,118 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,118 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,118 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-01 14:39:55,119 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,119 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,119 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,119 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,120 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,120 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,120 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,120 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-01 14:39:55,121 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,121 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,121 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-01 14:39:55,121 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-01 14:39:55,122 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-01 14:39:55,122 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,122 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,122 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,123 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,123 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,123 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,123 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,123 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,124 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,124 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,124 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,124 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,124 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,124 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,125 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-01 14:39:55,125 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,125 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,125 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,125 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,126 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,127 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,127 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,127 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,128 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,128 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,128 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,129 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,129 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,129 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,130 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,130 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,130 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,130 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,131 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,131 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,131 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,132 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-01 14:39:55,132 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,132 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,133 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-01 14:39:55,133 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,133 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,134 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-01 14:39:55,134 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,134 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,134 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,135 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,135 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,135 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,135 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,136 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,136 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,136 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,136 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,137 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,137 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,137 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,137 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,138 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,138 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,138 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-01 14:39:55,139 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,139 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-01 14:39:55,139 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,139 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,140 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-01 14:39:55,140 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,140 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,140 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,140 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,141 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,141 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,141 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,141 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,141 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,142 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,142 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,142 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,142 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,142 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,143 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,143 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,143 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-01 14:39:55,144 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,144 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,145 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,145 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,145 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-01 14:39:55,145 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,146 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,146 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,146 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,146 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-01 14:39:55,147 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,147 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,147 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,147 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,147 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,148 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,148 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,148 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,148 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,148 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,149 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,149 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,149 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,149 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,150 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,150 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,150 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,150 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,151 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-01 14:39:55,151 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,151 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,151 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,152 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,152 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,152 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,153 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-01 14:39:55,153 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,153 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,154 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,154 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,154 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,154 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,155 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-01 14:39:55,156 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,158 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-01 14:39:55,159 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,160 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,162 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-01 14:39:55,163 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-01 14:39:55,164 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,165 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,165 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,165 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,166 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,166 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,166 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,166 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,167 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,167 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,167 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,167 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,167 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,168 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,168 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,168 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,168 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,169 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,169 [37044] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-01 14:39:55,179 [37044] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-01 14:39:55,180 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-01 14:39:55,181 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,181 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,182 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,182 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,182 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,182 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,182 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,183 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,183 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,183 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,183 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,184 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,184 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,184 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,184 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,185 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-01 14:39:55,185 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,185 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,185 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,186 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,186 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,186 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,187 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,189 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,189 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,190 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,190 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,191 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-01 14:39:55,192 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,192 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-01 14:39:55,193 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,193 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,193 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,193 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,194 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-01 14:39:55,194 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-01 14:39:55,194 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,194 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,195 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,195 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,195 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,195 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,196 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,196 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,196 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,196 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,196 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,197 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,197 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-01 14:39:55,197 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,197 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,197 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,198 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,198 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,198 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-01 14:39:55,198 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,198 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,199 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,199 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,199 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,199 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-01 14:39:55,199 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-01 14:39:55,200 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,200 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,200 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-01 14:39:55,200 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,201 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,201 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,201 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,201 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,201 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,202 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,202 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-01 14:39:55,202 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,202 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,202 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-01 14:39:55,203 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-01 14:39:55,203 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-01 14:39:55,203 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,203 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,203 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,204 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,204 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,204 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,204 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,204 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,205 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,205 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,205 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,205 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,205 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,206 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,206 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,207 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,208 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,208 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,208 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,208 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,209 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,209 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,209 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,209 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,210 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,210 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,210 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,211 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,211 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,211 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,212 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-01 14:39:55,212 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,212 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,212 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-01 14:39:55,212 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,213 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,213 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-01 14:39:55,213 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,213 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,214 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,214 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,214 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,214 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,214 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,215 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,215 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,215 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,215 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,215 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,216 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,216 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,216 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,216 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,216 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,217 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-01 14:39:55,217 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,217 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-01 14:39:55,217 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,217 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,218 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-01 14:39:55,218 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,218 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,218 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,218 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,218 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,219 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,219 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,219 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,219 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,219 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,220 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,220 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,220 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,220 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,220 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,221 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,221 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-01 14:39:55,221 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,221 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,221 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,222 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,222 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-01 14:39:55,222 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,222 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,222 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,223 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,223 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-01 14:39:55,223 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,223 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,223 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,224 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,224 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,224 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,224 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,224 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,225 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,225 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,225 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,225 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-01 14:39:55,226 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,226 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,226 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,226 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,226 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,227 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,227 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-01 14:39:55,227 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,227 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,227 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,228 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,228 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,228 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,228 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-01 14:39:55,228 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-01 14:39:55,229 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,229 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,229 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-01 14:39:55,229 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,229 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,230 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-01 14:39:55,230 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,230 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-01 14:39:55,230 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,230 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,231 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-01 14:39:55,231 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-01 14:39:55,231 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,231 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,232 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,232 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,232 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,232 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,233 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,233 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,233 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-01 14:39:55,233 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,233 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-01 14:39:55,234 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-01 14:39:55,234 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,234 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-01 14:39:55,234 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,235 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,235 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-01 14:39:55,235 [37044] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-01 14:39:55,236 [37044] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-01 15:09:19,534 [20408] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-01 15:09:19,535 [20408] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-01 15:09:19,535 [20408] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-01 15:09:19,537 [20408] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-01 15:09:19,537 [20408] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-01 15:09:19,538 [20408] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-01 15:09:20,046 [20408] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-01 15:09:20,046 [20408] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-01 15:09:20,047 [20408] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-01 15:09:20,048 [20408] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-01 15:09:20,049 [20408] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-01 15:09:20,049 [20408] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-01 15:09:31,019 [20408] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-01 15:09:31,020 [20408] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-01 15:09:31,021 [20408] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-01 15:09:31,028 [20408] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-01 15:09:31,030 [20408] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-01 15:09:31,030 [20408] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-01 15:09:31,030 [20408] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-01 15:09:31,030 [20408] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-01 15:09:39,484 [20408] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-01 15:09:39,491 [20408] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-01 15:09:39,821 [20408] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-01 15:09:41,341 [20408] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-01 15:09:54,197 [20408] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-01 15:09:54,234 [20408] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-01 15:09:54,234 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-01 15:09:54,235 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,235 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,236 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,236 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,236 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,236 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-01 15:09:54,237 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,250 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,250 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-01 15:09:54,250 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,251 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,251 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,251 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,251 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,252 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,252 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,252 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-01 15:09:54,253 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,253 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,253 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-01 15:09:54,253 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-01 15:09:54,254 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-01 15:09:54,254 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,254 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,254 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,255 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,255 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,255 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,255 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,256 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,256 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,256 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,256 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,257 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,257 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,257 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,258 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-01 15:09:54,258 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,258 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,258 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,258 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,259 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,259 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,259 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,259 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,260 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,260 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,260 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,260 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,261 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,261 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,261 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,261 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,262 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,262 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,262 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,262 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,262 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,263 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-01 15:09:54,263 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,263 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,263 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-01 15:09:54,264 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,264 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,264 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-01 15:09:54,264 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,264 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,265 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,265 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,265 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,265 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,265 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,266 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,266 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,266 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,266 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,267 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,267 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,267 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,267 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,268 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,268 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,268 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-01 15:09:54,268 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,269 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-01 15:09:54,269 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,269 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,269 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-01 15:09:54,270 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,270 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,270 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,270 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,270 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,271 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,271 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,271 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,271 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,271 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,272 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,272 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,272 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,272 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,272 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,273 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,273 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-01 15:09:54,273 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,273 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,273 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,274 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,274 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-01 15:09:54,274 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,274 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,274 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,274 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,275 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-01 15:09:54,275 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,275 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,275 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,275 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,276 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,276 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,276 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,276 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,276 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,276 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,277 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,277 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,277 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,277 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,277 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,277 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,278 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,278 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,278 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-01 15:09:54,278 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,278 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,278 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,279 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,279 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,279 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,279 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-01 15:09:54,279 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,279 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,280 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,280 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,280 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,280 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,280 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-01 15:09:54,281 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,281 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-01 15:09:54,281 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,281 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,281 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-01 15:09:54,281 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-01 15:09:54,282 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,282 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,282 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,282 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,282 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,283 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,283 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,283 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,283 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,283 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,284 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,284 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,284 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,284 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,284 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,285 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,285 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,285 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,285 [20408] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-01 15:09:54,293 [20408] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-01 15:09:54,294 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-01 15:09:54,294 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,295 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,295 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,296 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,296 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,296 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,297 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,297 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,297 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,297 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,298 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,298 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,298 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,298 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,299 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,299 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-01 15:09:54,299 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,300 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,300 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,300 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,300 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,301 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,301 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,301 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,301 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,301 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,302 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,302 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-01 15:09:54,302 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,303 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-01 15:09:54,303 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,303 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,303 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,303 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,304 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-01 15:09:54,304 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-01 15:09:54,304 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,304 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,304 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,304 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,305 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,305 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,305 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,305 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,305 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,306 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,306 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,306 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,306 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-01 15:09:54,306 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,306 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,307 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,307 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,307 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,307 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-01 15:09:54,307 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,308 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,308 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,308 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,308 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,308 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-01 15:09:54,308 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-01 15:09:54,309 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,309 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,309 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-01 15:09:54,309 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,309 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,310 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,310 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,310 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,310 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,310 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,311 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-01 15:09:54,311 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,311 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,311 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-01 15:09:54,311 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-01 15:09:54,311 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-01 15:09:54,312 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,312 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,312 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,312 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,312 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,313 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,313 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,313 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,313 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,313 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,313 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,314 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,314 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,314 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,314 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-01 15:09:54,314 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,315 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,315 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,315 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,315 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,315 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,315 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,316 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,316 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,316 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,316 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,317 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,317 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,317 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,317 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,318 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,318 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,318 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,318 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,319 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,319 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,319 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-01 15:09:54,319 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,319 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,320 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-01 15:09:54,320 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,320 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,320 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-01 15:09:54,320 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,321 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,321 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,321 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,321 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,321 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,322 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,322 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,322 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,322 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,322 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,323 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,323 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,323 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,323 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,323 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,323 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,324 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-01 15:09:54,324 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,324 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-01 15:09:54,324 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,324 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,325 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-01 15:09:54,325 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,325 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,325 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,325 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,326 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,326 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,326 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,326 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,326 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,327 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,327 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,327 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,327 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,327 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,328 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,328 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,328 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-01 15:09:54,328 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,328 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,329 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,329 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,329 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-01 15:09:54,329 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,329 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,329 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,330 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,330 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-01 15:09:54,330 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,330 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,330 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,331 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,331 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,331 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,331 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,331 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,331 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,332 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,332 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,332 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-01 15:09:54,332 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,332 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,333 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,333 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,333 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,333 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,334 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-01 15:09:54,334 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,334 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,334 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,335 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,335 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,335 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,335 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-01 15:09:54,336 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-01 15:09:54,336 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,336 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,336 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-01 15:09:54,337 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,337 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,337 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-01 15:09:54,337 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,337 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-01 15:09:54,338 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,338 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,338 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-01 15:09:54,338 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-01 15:09:54,339 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,339 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,339 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,339 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,339 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,340 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,340 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,340 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,340 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-01 15:09:54,341 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,341 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-01 15:09:54,341 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-01 15:09:54,341 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,341 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-01 15:09:54,342 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,342 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,342 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-01 15:09:54,342 [20408] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-01 15:09:54,343 [20408] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-01 18:07:35,482 [20408] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-01 18:07:35,482 [20408] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-01 18:07:35,482 [20408] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-01 18:07:35,486 [20408] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-01 18:07:35,487 [20408] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-01 18:07:35,488 [20408] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-02 20:39:36,199 [17624] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-02 20:39:36,200 [17624] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-02 20:39:36,200 [17624] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-02 20:39:36,203 [17624] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-02 20:39:36,204 [17624] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-02 20:39:36,204 [17624] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-03 22:40:48,614 [15332] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-03 22:40:48,614 [15332] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-03 22:40:48,615 [15332] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-03 22:40:48,616 [15332] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-03 22:40:48,617 [15332] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-03 22:40:48,617 [15332] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-03 22:40:49,126 [15332] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-03 22:40:49,126 [15332] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-03 22:40:49,126 [15332] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-03 22:40:49,128 [15332] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-03 22:40:49,128 [15332] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-03 22:40:49,129 [15332] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-03 22:41:33,018 [15332] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-03 22:41:33,019 [15332] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-03 22:41:33,020 [15332] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-03 22:41:33,028 [15332] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-03 22:41:33,029 [15332] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-03 22:41:33,029 [15332] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-03 22:41:33,030 [15332] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-03 22:41:33,030 [15332] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-03 22:41:52,791 [15332] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-03 22:41:52,798 [15332] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-03 22:41:53,144 [15332] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-03 22:41:54,679 [15332] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-03 22:42:00,910 [15332] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-03 22:42:00,931 [15332] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-03 22:42:00,932 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-03 22:42:00,932 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,932 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,932 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,932 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,933 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,933 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,933 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,933 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,933 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,933 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,934 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,934 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,934 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,934 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,934 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,934 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-03 22:42:00,935 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,935 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,935 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,935 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,935 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,935 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,936 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,936 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,936 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,936 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,936 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,936 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-03 22:42:00,937 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,937 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-03 22:42:00,937 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,937 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,937 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,937 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,938 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-03 22:42:00,938 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-03 22:42:00,938 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,938 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,938 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,938 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,939 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,939 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,939 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,939 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,939 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,939 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,940 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,940 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,940 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-03 22:42:00,940 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,940 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,940 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:00,941 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,941 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,941 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-03 22:42:00,941 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,941 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,941 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,942 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,942 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,942 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-03 22:42:00,942 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-03 22:42:00,942 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,942 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,943 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-03 22:42:00,943 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,943 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,943 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,943 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,943 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,944 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,944 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,944 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-03 22:42:00,944 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,944 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,944 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-03 22:42:00,945 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-03 22:42:00,945 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-03 22:42:00,945 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:00,945 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,945 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,946 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,946 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,946 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,946 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,946 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,946 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,947 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,947 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,947 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,947 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,947 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,947 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-03 22:42:00,948 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,948 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,948 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,948 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,948 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,948 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,949 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,949 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,949 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,949 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,949 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,950 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,950 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,950 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,950 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,950 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,950 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,951 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,951 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,951 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,951 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,951 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-03 22:42:00,951 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,952 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,952 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-03 22:42:00,952 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,952 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,952 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-03 22:42:00,952 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,953 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:00,953 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,953 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,953 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,953 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,953 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,954 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,954 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,954 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,954 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,954 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:00,954 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,955 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,955 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:00,955 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,955 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,955 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-03 22:42:00,955 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,956 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-03 22:42:00,956 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,956 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,956 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-03 22:42:00,956 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,956 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,957 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,957 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:00,957 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,957 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,957 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,958 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,958 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,958 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,958 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,958 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,958 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,959 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,959 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,959 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,959 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-03 22:42:00,959 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,959 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,960 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,960 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,960 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-03 22:42:00,960 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,960 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,960 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,961 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,961 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-03 22:42:00,961 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,961 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,961 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,961 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,962 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,962 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,962 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,962 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,962 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,962 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,963 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,963 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,963 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,963 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,963 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,963 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,964 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,964 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:00,964 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-03 22:42:00,964 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,964 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,964 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,965 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,965 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,965 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,965 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-03 22:42:00,965 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,965 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,966 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,966 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:00,966 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,966 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,966 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-03 22:42:00,966 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,967 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-03 22:42:00,967 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,967 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,967 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-03 22:42:00,967 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-03 22:42:00,967 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,968 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,968 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,968 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,968 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,968 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,968 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,969 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,969 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,969 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,969 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:00,969 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,969 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,970 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,970 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,970 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,970 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,970 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,971 [15332] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-03 22:42:00,978 [15332] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-03 22:42:00,979 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-03 22:42:00,979 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,979 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,979 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,979 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,979 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,980 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,980 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,980 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,980 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,980 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,980 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,981 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,981 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,981 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,981 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,981 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-03 22:42:00,981 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,982 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,982 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,982 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,982 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,982 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,983 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,983 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,983 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,983 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,983 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,983 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-03 22:42:00,984 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,984 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-03 22:42:00,984 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,984 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,984 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,984 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,985 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-03 22:42:00,985 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-03 22:42:00,985 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,985 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,985 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,985 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,986 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,986 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,986 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,986 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,986 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,986 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,987 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,987 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,987 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-03 22:42:00,987 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,987 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,988 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:00,988 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,988 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,988 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-03 22:42:00,988 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,988 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,989 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,989 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,989 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,989 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-03 22:42:00,989 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-03 22:42:00,989 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,990 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,990 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-03 22:42:00,990 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,990 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,990 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,991 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,991 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,991 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,991 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,991 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-03 22:42:00,991 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,992 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:00,992 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-03 22:42:00,992 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-03 22:42:00,992 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-03 22:42:00,992 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:00,992 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,993 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,993 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,993 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-03 22:42:00,993 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,993 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,993 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,994 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,994 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,994 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,994 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,994 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,994 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,995 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-03 22:42:00,995 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,995 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,995 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,995 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,995 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,996 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,996 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,996 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,996 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,996 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,996 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,997 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-03 22:42:00,997 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,997 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,997 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-03 22:42:00,997 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,997 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,998 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:00,998 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,998 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,998 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,998 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-03 22:42:00,999 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,999 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,999 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-03 22:42:00,999 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:00,999 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:00,999 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-03 22:42:01,000 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,000 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:01,000 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,000 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,000 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,000 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,001 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,001 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:01,001 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,001 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,001 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,001 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:01,002 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,002 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,002 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:01,002 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:01,002 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,002 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-03 22:42:01,003 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,003 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-03 22:42:01,003 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,003 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,003 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-03 22:42:01,003 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,004 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,004 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,004 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:01,004 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,004 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,004 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,005 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,005 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,005 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,005 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,005 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,005 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,006 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,006 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,006 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,006 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-03 22:42:01,006 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,006 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,007 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,007 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,007 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-03 22:42:01,007 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,007 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,007 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,008 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,008 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-03 22:42:01,008 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,008 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,008 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,008 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,009 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,009 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,009 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,009 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,009 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,010 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,010 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,010 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-03 22:42:01,010 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,010 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,010 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,011 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,011 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,011 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:01,011 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-03 22:42:01,011 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,012 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,012 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,012 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,012 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,012 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,012 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-03 22:42:01,013 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-03 22:42:01,013 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,013 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,013 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-03 22:42:01,013 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,013 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,014 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-03 22:42:01,014 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,014 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-03 22:42:01,014 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,014 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,014 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-03 22:42:01,015 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-03 22:42:01,015 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,015 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,015 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,015 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,015 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,016 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,016 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,016 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,016 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-03 22:42:01,016 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,016 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-03 22:42:01,017 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-03 22:42:01,017 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,017 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-03 22:42:01,017 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,017 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,017 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-03 22:42:01,018 [15332] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-03 22:42:01,018 [15332] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-04 10:14:05,480 [11224] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-04 10:14:05,481 [11224] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-04 10:14:05,481 [11224] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-04 10:14:05,483 [11224] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-04 10:14:05,483 [11224] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-04 10:14:05,484 [11224] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-04 10:14:06,341 [11224] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-04 10:14:06,341 [11224] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-04 10:14:06,341 [11224] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-04 10:14:06,343 [11224] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-04 10:14:06,343 [11224] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-04 10:14:06,343 [11224] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-04 11:43:10,465 [4712] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-04 11:43:10,465 [4712] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-04 11:43:10,465 [4712] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-04 11:43:10,467 [4712] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-04 11:43:10,467 [4712] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-04 11:43:10,468 [4712] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-04 11:43:10,976 [4712] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-04 11:43:10,976 [4712] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-04 11:43:10,976 [4712] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-04 11:43:10,978 [4712] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-04 11:43:10,978 [4712] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-04 11:43:10,979 [4712] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-04 11:43:14,654 [4712] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-04 11:43:14,654 [4712] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-04 11:43:14,655 [4712] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-04 11:43:14,657 [4712] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-04 11:43:14,658 [4712] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-04 11:43:14,658 [4712] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-04 11:43:14,659 [4712] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-04 11:43:14,659 [4712] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-04 11:43:25,512 [4712] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-04 11:43:25,514 [4712] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-04 11:43:25,648 [4712] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-04 11:43:26,126 [4712] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-04 11:43:32,007 [4712] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-04 11:43:32,040 [4712] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-04 11:43:32,040 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-04 11:43:32,040 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,041 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,041 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,041 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,041 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,042 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,042 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,042 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,042 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,043 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,043 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,043 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,043 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,044 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,044 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,044 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-04 11:43:32,044 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,045 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,045 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,045 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,046 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,046 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,046 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,047 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,047 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,047 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,047 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,047 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-04 11:43:32,048 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,048 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-04 11:43:32,048 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,048 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,049 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,049 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,049 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-04 11:43:32,049 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-04 11:43:32,049 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,050 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,050 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,050 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,050 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,050 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,051 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,051 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,051 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,051 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,052 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,052 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,052 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-04 11:43:32,052 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,052 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,052 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,053 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,053 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,053 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-04 11:43:32,053 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,054 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,054 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,054 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,054 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,054 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-04 11:43:32,055 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-04 11:43:32,055 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,055 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,055 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-04 11:43:32,055 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,056 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,056 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,056 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,056 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,056 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,057 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,057 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-04 11:43:32,057 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,057 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,057 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-04 11:43:32,058 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-04 11:43:32,058 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-04 11:43:32,058 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,058 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,058 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,059 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,059 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,059 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,059 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,060 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,060 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,060 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,060 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,060 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,060 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,061 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,061 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-04 11:43:32,061 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,062 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,062 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,062 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,062 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,062 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,063 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,063 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,063 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,063 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,064 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,064 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,064 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,064 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,064 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,065 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,065 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,065 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,065 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,066 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,066 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,066 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-04 11:43:32,066 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,066 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,067 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-04 11:43:32,067 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,067 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,067 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-04 11:43:32,067 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,068 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,068 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,068 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,068 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,068 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,068 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,069 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,069 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,069 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,069 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,069 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,070 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,070 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,070 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,070 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,070 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,071 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-04 11:43:32,071 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,071 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-04 11:43:32,071 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,071 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,072 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-04 11:43:32,072 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,072 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,072 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,072 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,072 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,073 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,073 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,073 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,073 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,073 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,074 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,074 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,074 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,074 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,075 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,075 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,075 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-04 11:43:32,075 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,075 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,076 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,076 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,076 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-04 11:43:32,076 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,077 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,077 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,077 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,077 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-04 11:43:32,077 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,078 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,078 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,078 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,078 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,078 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,078 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,079 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,079 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,079 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,079 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,079 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,080 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,080 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,080 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,080 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,080 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,080 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,081 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-04 11:43:32,081 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,081 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,081 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,081 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,082 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,082 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,082 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-04 11:43:32,082 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,082 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,083 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,083 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,083 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,083 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,083 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-04 11:43:32,083 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,084 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-04 11:43:32,084 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,084 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,084 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-04 11:43:32,084 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-04 11:43:32,085 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,085 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,085 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,085 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,085 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,085 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,086 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,086 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,086 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,086 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,086 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,087 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,087 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,087 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,087 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,087 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,087 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,088 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,088 [4712] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-04 11:43:32,095 [4712] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-04 11:43:32,096 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-04 11:43:32,096 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,096 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,096 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,096 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,097 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,097 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,097 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,097 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,097 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,098 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,098 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,098 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,098 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,098 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,098 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,099 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-04 11:43:32,099 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,099 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,099 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,099 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,099 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,100 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,100 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,100 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,100 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,100 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,100 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,101 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-04 11:43:32,101 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,101 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-04 11:43:32,101 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,101 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,102 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,102 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,102 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-04 11:43:32,102 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-04 11:43:32,102 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,102 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,103 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,103 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,103 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,103 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,103 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,103 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,104 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,104 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,104 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,104 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,104 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-04 11:43:32,104 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,105 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,105 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,105 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,105 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,105 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-04 11:43:32,106 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,106 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,106 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,106 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,106 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,106 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-04 11:43:32,107 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-04 11:43:32,107 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,107 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,107 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-04 11:43:32,107 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,108 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,108 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,108 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,108 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,108 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,108 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,109 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-04 11:43:32,109 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,109 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,109 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-04 11:43:32,109 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-04 11:43:32,110 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-04 11:43:32,110 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,110 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,110 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,110 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,110 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,111 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,111 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,111 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,111 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,112 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,112 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,112 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,112 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,112 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,112 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-04 11:43:32,113 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,113 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,113 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,113 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,113 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,114 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,114 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,114 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,114 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,114 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,114 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,115 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,115 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,115 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,115 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,115 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,115 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,116 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,116 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,116 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,116 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,116 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-04 11:43:32,116 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,117 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,117 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-04 11:43:32,117 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,117 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,117 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-04 11:43:32,117 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,118 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,118 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,118 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,118 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,118 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,119 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,119 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,119 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,119 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,119 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,119 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,120 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,120 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,120 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,120 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,120 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,120 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-04 11:43:32,121 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,121 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-04 11:43:32,121 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,121 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,121 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-04 11:43:32,121 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,122 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,122 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,122 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,122 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,122 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,123 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,123 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,123 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,123 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,123 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,124 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,124 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,124 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,124 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,125 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,125 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-04 11:43:32,125 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,125 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,125 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,126 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,126 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-04 11:43:32,126 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,126 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,127 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,127 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,127 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-04 11:43:32,127 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,127 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,128 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,128 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,128 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,128 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,129 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,129 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,129 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,129 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,129 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,130 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-04 11:43:32,130 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,130 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,131 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,131 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,131 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,131 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,132 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-04 11:43:32,132 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,132 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,132 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,132 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,133 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,133 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,133 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-04 11:43:32,133 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-04 11:43:32,134 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,134 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,134 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-04 11:43:32,134 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,135 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,135 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-04 11:43:32,135 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,135 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-04 11:43:32,136 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,136 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,136 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-04 11:43:32,136 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-04 11:43:32,136 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,137 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,137 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,137 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,137 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,138 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,138 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,138 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,138 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-04 11:43:32,138 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,139 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-04 11:43:32,139 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-04 11:43:32,139 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,139 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-04 11:43:32,140 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,140 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,140 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-04 11:43:32,140 [4712] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-04 11:43:32,140 [4712] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-04 11:57:15,352 [4712] ERROR    asyncio:1608: [JupyterRequire] Exception in callback BaseSelectorEventLoop._read_from_self()
handle: <Handle BaseSelectorEventLoop._read_from_self()>
Traceback (most recent call last):
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\selector_events.py", line 114, in _read_from_self
    data = self._ssock.recv(4096)
ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host
2020-05-04 11:57:15,353 [4712] ERROR    asyncio:1608: [JupyterRequire] Exception in callback BaseSelectorEventLoop._read_from_self()
handle: <Handle BaseSelectorEventLoop._read_from_self()>
Traceback (most recent call last):
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\events.py", line 88, in _run
    self._context.run(self._callback, *self._args)
  File "C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\asyncio\selector_events.py", line 114, in _read_from_self
    data = self._ssock.recv(4096)
ConnectionResetError: [WinError 10054] An existing connection was forcibly closed by the remote host
2020-05-04 11:59:14,866 [14608] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-04 11:59:14,867 [14608] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-04 11:59:14,867 [14608] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-04 11:59:14,869 [14608] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-04 11:59:14,869 [14608] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-04 11:59:14,869 [14608] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-04 11:59:15,526 [14608] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-04 11:59:15,526 [14608] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-04 11:59:15,526 [14608] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-04 11:59:15,529 [14608] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-04 11:59:15,530 [14608] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-04 11:59:15,530 [14608] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-04 11:59:18,269 [14608] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-04 11:59:18,269 [14608] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-04 11:59:18,270 [14608] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-04 11:59:18,272 [14608] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-04 11:59:18,273 [14608] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-04 11:59:18,273 [14608] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-04 11:59:18,274 [14608] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-04 11:59:18,274 [14608] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-04 20:31:15,916 [14608] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-04 20:31:15,918 [14608] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-04 20:31:16,027 [14608] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-04 20:31:16,159 [14608] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-04 20:31:19,936 [14608] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-04 20:31:19,936 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-04 20:31:19,936 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,936 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,937 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,937 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,937 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,937 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,937 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,938 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,938 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,938 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,938 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,938 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,939 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,939 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,939 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,939 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-04 20:31:19,939 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,940 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,940 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,940 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,941 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,941 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,941 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,941 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,941 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,942 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,942 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,942 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-04 20:31:19,942 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,942 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-04 20:31:19,942 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,943 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,943 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,943 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,943 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-04 20:31:19,943 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-04 20:31:19,944 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,944 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,944 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,944 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,944 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,945 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,945 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,945 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,945 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,945 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,945 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,946 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,946 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-04 20:31:19,946 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,946 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,946 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:19,947 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,947 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,947 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-04 20:31:19,947 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,947 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,947 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,948 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,948 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,948 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-04 20:31:19,948 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-04 20:31:19,948 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,949 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,949 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-04 20:31:19,949 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,949 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,949 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,949 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,950 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,950 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,950 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,950 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-04 20:31:19,950 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,951 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,951 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-04 20:31:19,951 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-04 20:31:19,951 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-04 20:31:19,951 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:19,952 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,952 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,952 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,952 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,953 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,953 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,953 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,953 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,953 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,954 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,954 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,954 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,954 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,955 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-04 20:31:19,955 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,955 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,955 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,955 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,956 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,956 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,956 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:19,956 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,957 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,957 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,957 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,957 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,958 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,958 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,958 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,958 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,959 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,959 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:19,959 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,959 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,960 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,960 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-04 20:31:19,960 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,961 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,961 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-04 20:31:19,961 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,961 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,962 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-04 20:31:19,962 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,962 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:19,963 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,963 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,963 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,964 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,964 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,964 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:19,964 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,965 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,965 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,965 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:19,966 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,966 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,966 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:19,966 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:19,966 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,967 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-04 20:31:19,967 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,967 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-04 20:31:19,967 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,968 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,968 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-04 20:31:19,968 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,969 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,969 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,969 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:19,970 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,970 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,970 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,971 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,971 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,971 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,972 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,972 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,972 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,972 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,973 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,973 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,973 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-04 20:31:19,973 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,974 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,974 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,974 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,974 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-04 20:31:19,975 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,975 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,975 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,975 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,976 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-04 20:31:19,976 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,976 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,976 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,977 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,977 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,977 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,978 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,978 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,978 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,979 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,979 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,979 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:19,979 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,979 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,980 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,980 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,980 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,980 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:19,981 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-04 20:31:19,981 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,981 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,981 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,982 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,982 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,982 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,982 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-04 20:31:19,982 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-04 20:31:19,983 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,983 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,983 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:19,983 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,984 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,984 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-04 20:31:19,984 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,985 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-04 20:31:19,985 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,985 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,985 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-04 20:31:19,986 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-04 20:31:19,986 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,986 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,987 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,987 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,987 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,987 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,988 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,988 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,988 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:19,988 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,989 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:19,989 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:19,989 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,989 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-04 20:31:19,990 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,990 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,990 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:19,990 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:19,991 [14608] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-04 20:31:36,741 [14608] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-04 20:31:36,772 [14608] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-04 20:31:36,772 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-04 20:31:36,772 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,773 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,773 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,773 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,774 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,774 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,774 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,775 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,775 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,775 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,775 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,776 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,776 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,776 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,777 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,777 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-04 20:31:36,777 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,777 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,778 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,778 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,778 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,778 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,779 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,779 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,779 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,780 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,780 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,780 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-04 20:31:36,781 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,781 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-04 20:31:36,781 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,781 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,781 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,782 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,782 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-04 20:31:36,782 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-04 20:31:36,783 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,783 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,783 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,783 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,784 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,784 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,784 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,784 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,785 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,785 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,785 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,785 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,785 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-04 20:31:36,786 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,786 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,786 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:36,787 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,787 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,787 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-04 20:31:36,787 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,787 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,788 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,788 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,788 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,788 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-04 20:31:36,788 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-04 20:31:36,789 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,789 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,789 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-04 20:31:36,789 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,789 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,790 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,790 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,790 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,790 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,791 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,791 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-04 20:31:36,791 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,791 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,792 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-04 20:31:36,792 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-04 20:31:36,792 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-04 20:31:36,793 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:36,793 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,793 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,793 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,794 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,794 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,794 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,795 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,795 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,795 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,795 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,796 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,796 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,796 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,796 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-04 20:31:36,797 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,797 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,797 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,797 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,798 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,798 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,798 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:36,798 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,799 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,799 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,800 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,800 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,800 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,801 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,801 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,801 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,801 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,802 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:36,802 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,802 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,803 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,803 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-04 20:31:36,804 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,804 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,805 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-04 20:31:36,805 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,805 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,805 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-04 20:31:36,806 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,806 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:36,806 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,807 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,807 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,807 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,807 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,808 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:36,808 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,808 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,809 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,809 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:36,809 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,809 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,810 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:36,810 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:36,810 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,810 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-04 20:31:36,810 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,811 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-04 20:31:36,811 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,811 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,811 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-04 20:31:36,812 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,812 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,812 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,812 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:36,812 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,813 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,813 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,813 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,813 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,813 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,814 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,814 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,814 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,814 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,814 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,815 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,815 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-04 20:31:36,815 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,815 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,815 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,816 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,816 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-04 20:31:36,816 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,816 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,817 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,817 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,817 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-04 20:31:36,817 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,817 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,818 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,818 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,818 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,818 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,818 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,819 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,819 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,819 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,819 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,819 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-04 20:31:36,820 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,820 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,820 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,820 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,820 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,821 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:36,821 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-04 20:31:36,821 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,821 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,821 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,822 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,822 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,822 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,822 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-04 20:31:36,822 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-04 20:31:36,823 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,823 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,823 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-04 20:31:36,823 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,823 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,824 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-04 20:31:36,824 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,824 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-04 20:31:36,824 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,825 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,825 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-04 20:31:36,825 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-04 20:31:36,825 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,826 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,826 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,826 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,826 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,827 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,827 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,827 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,827 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-04 20:31:36,827 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,828 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-04 20:31:36,828 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-04 20:31:36,828 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,828 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-04 20:31:36,829 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,829 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,829 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-04 20:31:36,829 [14608] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-04 20:31:36,830 [14608] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-05 10:22:21,484 [12828] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 10:22:21,485 [12828] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 10:22:21,485 [12828] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 10:22:21,486 [12828] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 10:22:21,487 [12828] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 10:22:21,487 [12828] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-05 10:22:21,995 [12828] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 10:22:21,995 [12828] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 10:22:21,995 [12828] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 10:22:21,997 [12828] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 10:22:21,998 [12828] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 10:22:21,999 [12828] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-05 10:23:10,592 [3936] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 10:23:10,592 [3936] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 10:23:10,593 [3936] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 10:23:10,594 [3936] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 10:23:10,595 [3936] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 10:23:10,595 [3936] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-05 10:23:11,103 [3936] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 10:23:11,103 [3936] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 10:23:11,104 [3936] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 10:23:11,105 [3936] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 10:23:11,106 [3936] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 10:23:11,106 [3936] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-05 10:23:20,349 [21148] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 10:23:20,349 [21148] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 10:23:20,349 [21148] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 10:23:20,351 [21148] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 10:23:20,351 [21148] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 10:23:20,352 [21148] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-05 10:23:20,859 [21148] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 10:23:20,859 [21148] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 10:23:20,859 [21148] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 10:23:20,862 [21148] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 10:23:20,863 [21148] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 10:23:20,863 [21148] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-05 10:46:44,566 [21148] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-05 10:46:44,566 [21148] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-05 10:46:44,566 [21148] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-05 10:46:44,573 [21148] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-05 10:46:44,575 [21148] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-05 10:46:44,575 [21148] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-05 10:46:44,575 [21148] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-05 10:46:44,575 [21148] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'hedgepy', 'hedgepy.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-05 11:03:28,862 [21148] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-05 11:03:28,868 [21148] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-05 11:03:29,064 [21148] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-05 11:03:30,224 [21148] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-05 11:03:30,263 [21148] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-05 11:03:30,263 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-05 11:03:30,264 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,264 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,264 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,265 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,265 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,265 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,266 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,266 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,266 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,267 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,267 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,267 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,267 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,268 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,268 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,268 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-05 11:03:30,268 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,269 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,269 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,270 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,270 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,271 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,271 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,271 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,272 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,272 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,273 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,273 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-05 11:03:30,273 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,273 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-05 11:03:30,274 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,274 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,274 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,274 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,275 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-05 11:03:30,275 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-05 11:03:30,275 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,275 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,276 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,276 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,276 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,277 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,277 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,277 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,277 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,277 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,278 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,278 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,278 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-05 11:03:30,278 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,279 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,279 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,279 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,280 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,280 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-05 11:03:30,280 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,280 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,281 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,281 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,281 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,281 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-05 11:03:30,282 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-05 11:03:30,282 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,282 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,282 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-05 11:03:30,282 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,283 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,283 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,283 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,283 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,283 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,284 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,284 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-05 11:03:30,284 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,284 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,285 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-05 11:03:30,285 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-05 11:03:30,285 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-05 11:03:30,285 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,286 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,286 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,286 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,287 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,287 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,287 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,287 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,288 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,288 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,288 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,288 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,289 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,289 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,289 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-05 11:03:30,290 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,290 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,290 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,290 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,291 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,291 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,291 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,291 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,292 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,292 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,293 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,293 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,293 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,294 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,294 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,295 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,295 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,296 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,296 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,296 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,297 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,297 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-05 11:03:30,297 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,298 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,298 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-05 11:03:30,298 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,299 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,299 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-05 11:03:30,299 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,299 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,300 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,300 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,300 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,301 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,301 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,301 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,302 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,302 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,302 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,303 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,303 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,303 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,304 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,304 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,305 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,305 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-05 11:03:30,305 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,306 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-05 11:03:30,306 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,306 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,307 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-05 11:03:30,307 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,307 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,307 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,308 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,308 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,308 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,309 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,309 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,309 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,310 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,310 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,311 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,311 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,311 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,311 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,312 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,312 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-05 11:03:30,312 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,313 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,313 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,313 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,313 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-05 11:03:30,314 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,314 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,314 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,314 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,315 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-05 11:03:30,315 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,315 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,316 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,316 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,317 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,317 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,317 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,318 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,318 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,319 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,319 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,319 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,320 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,320 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,320 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,321 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,321 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,321 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,322 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-05 11:03:30,322 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,323 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,323 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,323 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,324 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,324 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,324 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-05 11:03:30,325 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,325 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,325 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,326 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,326 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,326 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,327 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-05 11:03:30,327 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,328 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-05 11:03:30,328 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,328 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,328 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-05 11:03:30,329 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-05 11:03:30,329 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,329 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,330 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,330 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,330 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,331 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,331 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,331 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,332 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,332 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,332 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,333 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,333 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,333 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,334 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,334 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,334 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,335 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,335 [21148] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-05 11:03:30,345 [21148] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-05 11:03:30,345 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-05 11:03:30,345 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,345 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,346 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,346 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,346 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,346 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,347 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,347 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,347 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,348 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,348 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,348 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,348 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,349 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,349 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,349 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-05 11:03:30,349 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,350 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,350 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,350 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,350 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,350 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,351 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,351 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,351 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,351 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,351 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,352 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-05 11:03:30,352 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,352 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-05 11:03:30,352 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,352 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,353 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,353 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,353 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-05 11:03:30,353 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-05 11:03:30,354 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,354 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,354 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,355 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,355 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,355 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,355 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,356 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,356 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,356 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,357 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,357 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,357 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-05 11:03:30,357 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,358 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,358 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,358 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,358 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,359 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-05 11:03:30,359 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,359 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,359 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,360 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,360 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,360 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-05 11:03:30,360 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-05 11:03:30,360 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,361 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,361 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-05 11:03:30,361 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,361 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,361 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,361 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,362 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,362 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,362 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,362 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-05 11:03:30,362 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,363 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,363 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-05 11:03:30,363 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-05 11:03:30,363 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-05 11:03:30,363 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,363 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,364 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,364 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,364 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,364 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,364 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,365 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,365 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,365 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,365 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,365 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,365 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,366 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,366 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-05 11:03:30,366 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,366 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,366 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,367 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,367 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,367 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,367 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,367 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,367 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,368 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,368 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,368 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,368 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,368 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,369 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,369 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,369 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,369 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,369 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,369 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,370 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,370 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-05 11:03:30,370 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,370 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,370 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-05 11:03:30,371 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,371 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,371 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-05 11:03:30,371 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,371 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,371 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,372 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,372 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,372 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,372 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,372 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,373 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,373 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,373 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,373 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,373 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,373 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,374 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,374 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,374 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,374 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-05 11:03:30,374 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,375 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-05 11:03:30,375 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,375 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,375 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-05 11:03:30,375 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,375 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,376 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,376 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,376 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,376 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,376 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,377 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,377 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,377 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,377 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,377 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,377 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,378 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,378 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,378 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,378 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-05 11:03:30,378 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,378 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,379 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,379 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,379 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-05 11:03:30,379 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,379 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,380 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,380 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,380 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-05 11:03:30,380 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,380 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,380 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,381 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,381 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,381 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,381 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,381 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,382 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,382 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,382 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,382 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-05 11:03:30,382 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,382 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,383 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,383 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,383 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,383 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,383 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-05 11:03:30,384 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,384 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,384 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,384 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,384 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,384 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,385 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-05 11:03:30,385 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-05 11:03:30,385 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,385 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,385 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-05 11:03:30,386 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,386 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,386 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-05 11:03:30,386 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,386 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-05 11:03:30,387 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,387 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,387 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-05 11:03:30,387 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-05 11:03:30,387 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,388 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,388 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,388 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,388 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,388 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,389 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,389 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,389 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-05 11:03:30,389 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,390 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-05 11:03:30,390 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-05 11:03:30,390 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,390 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-05 11:03:30,390 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,391 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,391 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-05 11:03:30,391 [21148] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-05 11:03:30,391 [21148] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-05 11:03:30,409 [21148] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-05 15:05:08,071 [9512] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-05 15:05:08,071 [9512] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-05 15:05:08,071 [9512] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-05 15:05:08,073 [9512] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-05 15:05:08,074 [9512] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-05 15:05:08,074 [9512] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-06 20:36:12,878 [18584] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-06 20:36:12,879 [18584] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-06 20:36:12,879 [18584] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-06 20:36:12,880 [18584] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-06 20:36:12,881 [18584] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-06 20:36:12,881 [18584] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-06 20:36:13,389 [18584] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-06 20:36:13,389 [18584] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-06 20:36:13,389 [18584] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-06 20:36:13,391 [18584] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-06 20:36:13,392 [18584] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-06 20:36:13,393 [18584] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-07 09:32:58,037 [28156] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-07 09:32:58,037 [28156] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-07 09:32:58,037 [28156] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-07 09:32:58,039 [28156] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-07 09:32:58,039 [28156] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-07 09:32:58,040 [28156] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-07 09:32:58,554 [28156] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-07 09:32:58,554 [28156] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-07 09:32:58,554 [28156] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-07 09:32:58,556 [28156] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-07 09:32:58,559 [28156] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-07 09:32:58,559 [28156] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-07 09:38:29,418 [26904] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-07 09:38:29,418 [26904] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-07 09:38:29,419 [26904] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-07 09:38:29,420 [26904] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-07 09:38:29,421 [26904] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-07 09:38:29,422 [26904] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-08 10:56:36,782 [29208] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-08 10:56:36,782 [29208] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-08 10:56:36,783 [29208] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-08 10:56:36,788 [29208] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-08 10:56:36,789 [29208] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-08 10:56:36,790 [29208] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-08 10:56:37,609 [29208] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-08 10:56:37,610 [29208] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-08 10:56:37,610 [29208] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-08 10:56:37,612 [29208] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-08 10:56:37,613 [29208] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-08 10:56:37,614 [29208] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-08 11:11:32,371 [18060] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-08 11:11:32,371 [18060] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-08 11:11:32,373 [18060] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-08 11:11:32,375 [18060] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-08 11:11:32,379 [18060] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-08 11:11:32,380 [18060] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 08:01:52,238 [18000] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 08:01:52,238 [18000] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 08:01:52,238 [18000] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 08:01:52,240 [18000] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 08:01:52,240 [18000] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 08:01:52,241 [18000] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 08:01:52,749 [18000] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 08:01:52,749 [18000] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 08:01:52,749 [18000] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 08:01:52,751 [18000] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 08:01:52,751 [18000] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 08:01:52,752 [18000] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 08:02:00,064 [4504] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 08:02:00,064 [4504] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 08:02:00,064 [4504] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 08:02:00,066 [4504] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 08:02:00,067 [4504] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 08:02:00,067 [4504] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 08:02:00,573 [4504] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 08:02:00,574 [4504] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 08:02:00,574 [4504] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 08:02:00,575 [4504] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 08:02:00,576 [4504] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 08:02:00,576 [4504] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 08:07:05,884 [10420] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 08:07:05,884 [10420] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 08:07:05,884 [10420] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 08:07:05,886 [10420] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 08:07:05,886 [10420] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 08:07:05,887 [10420] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 18:22:17,820 [1784] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 18:22:17,820 [1784] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 18:22:17,820 [1784] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 18:22:17,822 [1784] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 18:22:17,823 [1784] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 18:22:17,823 [1784] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 18:22:18,429 [1784] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 18:22:18,429 [1784] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 18:22:18,429 [1784] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 18:22:18,431 [1784] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 18:22:18,432 [1784] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 18:22:18,433 [1784] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 18:28:06,100 [21784] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-11 18:28:06,101 [21784] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-11 18:28:06,101 [21784] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-11 18:28:06,102 [21784] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-11 18:28:06,103 [21784] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-11 18:28:06,103 [21784] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-11 18:58:28,250 [21784] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-05-11 18:58:28,251 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-11 18:58:28,251 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,251 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,252 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,252 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,252 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,252 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,252 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,253 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,253 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,253 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,253 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,254 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,254 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,254 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,254 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,254 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-11 18:58:28,254 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,255 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,255 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,255 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,255 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,255 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,256 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,256 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,256 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,256 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,256 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,256 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-11 18:58:28,257 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,257 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-11 18:58:28,257 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,257 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,257 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,257 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,258 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-11 18:58:28,258 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-11 18:58:28,258 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,258 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,258 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,258 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,259 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,259 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,259 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,259 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,259 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,260 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,260 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,260 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,260 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-11 18:58:28,260 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,260 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,261 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-11 18:58:28,261 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,261 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,261 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-11 18:58:28,261 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,261 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,262 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,262 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,262 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,262 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-11 18:58:28,262 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-11 18:58:28,262 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,263 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,263 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-11 18:58:28,263 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,263 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,263 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,264 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,264 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,264 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,264 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,264 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-11 18:58:28,264 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,265 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,265 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-11 18:58:28,265 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-11 18:58:28,265 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-11 18:58:28,265 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-11 18:58:28,265 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,266 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,266 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,266 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,266 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,266 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,266 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,267 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,267 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,267 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,267 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,267 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,268 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,268 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-11 18:58:28,268 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,268 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,268 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,268 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,269 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,269 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,269 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-11 18:58:28,269 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,270 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,270 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,270 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,270 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,270 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,271 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,271 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,271 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,271 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,271 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-11 18:58:28,271 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,272 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,272 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,272 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-11 18:58:28,272 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,272 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,273 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-11 18:58:28,273 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,273 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,273 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-11 18:58:28,273 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,273 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-11 18:58:28,274 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,274 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,274 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,274 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,274 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,274 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-11 18:58:28,275 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,275 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,275 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,275 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-11 18:58:28,275 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,276 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,276 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-11 18:58:28,276 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-11 18:58:28,276 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,276 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-11 18:58:28,276 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,277 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-11 18:58:28,277 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,277 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,277 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-11 18:58:28,277 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,277 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,278 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,278 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-11 18:58:28,278 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,278 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,278 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,279 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,279 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,279 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,279 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,279 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,279 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,280 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,280 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,280 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,280 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-11 18:58:28,281 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,281 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,281 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,281 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,281 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-11 18:58:28,282 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,282 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,282 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,282 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,282 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-11 18:58:28,283 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,283 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,283 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,283 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,283 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,284 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,284 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,284 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,284 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,284 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,285 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,285 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-11 18:58:28,285 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,286 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,286 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,286 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,286 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,287 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-11 18:58:28,287 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-11 18:58:28,287 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,288 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,288 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,288 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,288 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,289 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,289 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-11 18:58:28,289 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-11 18:58:28,290 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,290 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,290 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-11 18:58:28,290 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,291 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,291 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-11 18:58:28,291 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,291 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-11 18:58:28,292 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,292 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,292 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-11 18:58:28,292 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-11 18:58:28,292 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,293 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,293 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,293 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,294 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,294 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,294 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,294 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,295 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-11 18:58:28,295 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,295 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-11 18:58:28,295 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-11 18:58:28,296 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,296 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-11 18:58:28,296 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,297 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,297 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-11 18:58:28,297 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-11 18:58:28,297 [21784] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-11 19:28:39,821 [21784] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0.
2020-05-11 19:28:39,821 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-11 19:28:39,822 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,822 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,822 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,822 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,822 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,823 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,823 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,823 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,823 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,823 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,824 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,824 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,824 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,824 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,824 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,824 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-11 19:28:39,825 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,825 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,825 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,825 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,825 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,825 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,826 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,826 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,826 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,826 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,826 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,826 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-11 19:28:39,827 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,827 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-11 19:28:39,827 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,827 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,827 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,828 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,828 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-11 19:28:39,828 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-11 19:28:39,828 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,828 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,829 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,829 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,829 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,829 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,829 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,829 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,830 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,830 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,830 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,830 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,830 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-11 19:28:39,831 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,831 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,831 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-11 19:28:39,831 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,831 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,832 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-11 19:28:39,832 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,832 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,832 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,832 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,832 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,833 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-11 19:28:39,833 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-11 19:28:39,833 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,833 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,833 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-11 19:28:39,833 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,834 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,834 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,834 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,834 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,834 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,834 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,835 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-11 19:28:39,835 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,835 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,835 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-11 19:28:39,835 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-11 19:28:39,836 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-11 19:28:39,836 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-11 19:28:39,836 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,836 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,836 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,836 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,837 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,837 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,837 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,837 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,837 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,838 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,838 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,838 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,838 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,838 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-11 19:28:39,838 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,839 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,839 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,839 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,839 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,839 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,839 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-11 19:28:39,840 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,840 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,840 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,840 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,840 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,840 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,841 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,841 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,841 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,841 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,841 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-11 19:28:39,841 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,842 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,842 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,842 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-11 19:28:39,842 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,842 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,842 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-11 19:28:39,843 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,843 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,843 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-11 19:28:39,843 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,843 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-11 19:28:39,843 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,844 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,844 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,844 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,844 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,844 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-11 19:28:39,845 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,845 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,845 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,845 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-11 19:28:39,845 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,845 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,846 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-11 19:28:39,846 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-11 19:28:39,846 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,846 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-11 19:28:39,846 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,846 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-11 19:28:39,847 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,847 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,847 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-11 19:28:39,847 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,847 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,848 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,848 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-11 19:28:39,848 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,849 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,849 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,849 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,849 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,849 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,850 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,850 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,850 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,850 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,850 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,851 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,851 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-11 19:28:39,851 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,851 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,851 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,852 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,852 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-11 19:28:39,852 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,852 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,852 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,852 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,853 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-11 19:28:39,853 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,853 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,853 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,853 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,853 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,854 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,854 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,854 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,854 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,855 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,855 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,855 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-11 19:28:39,855 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,855 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,856 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,856 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,856 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,856 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-11 19:28:39,857 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-11 19:28:39,857 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,857 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,857 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,858 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,858 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,858 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,858 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-11 19:28:39,859 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-11 19:28:39,859 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,859 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,859 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-11 19:28:39,859 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,860 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,860 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-11 19:28:39,860 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,861 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-11 19:28:39,861 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,861 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,861 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-11 19:28:39,862 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-11 19:28:39,862 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,862 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,862 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,863 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,863 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,863 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,864 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,864 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,864 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-11 19:28:39,865 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,865 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-11 19:28:39,865 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-11 19:28:39,865 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,866 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-11 19:28:39,866 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,867 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,867 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-11 19:28:39,867 [21784] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-11 19:28:39,868 [21784] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=15.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-12 08:09:39,447 [19036] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 08:09:39,448 [19036] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 08:09:39,448 [19036] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 08:09:39,450 [19036] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 08:09:39,451 [19036] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 08:09:39,451 [19036] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 08:09:40,039 [19036] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 08:09:40,040 [19036] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 08:09:40,040 [19036] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 08:09:40,043 [19036] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 08:09:40,044 [19036] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 08:09:40,044 [19036] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 08:15:32,152 [12608] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 08:15:32,152 [12608] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 08:15:32,152 [12608] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 08:15:32,154 [12608] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 08:15:32,155 [12608] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 08:15:32,155 [12608] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 10:08:32,466 [12608] WARNING  matplotlib.legend:1282: [JupyterRequire] No handles with labels found to put in legend.
2020-05-12 10:10:24,331 [12608] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:8: UserWarning: Legend does not support 'Correlation' instances.
A proxy artist may be used instead.
See: http://matplotlib.org/users/legend_guide.html#creating-artists-specifically-for-adding-to-the-legend-aka-proxy-artists
  

2020-05-12 14:42:29,108 [9824] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 14:42:29,108 [9824] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 14:42:29,108 [9824] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 14:42:29,110 [9824] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 14:42:29,110 [9824] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 14:42:29,111 [9824] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 14:42:29,629 [9824] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 14:42:29,629 [9824] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 14:42:29,629 [9824] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 14:42:29,631 [9824] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 14:42:29,631 [9824] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 14:42:29,632 [9824] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 14:48:31,501 [15832] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 14:48:31,501 [15832] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 14:48:31,501 [15832] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 14:48:31,503 [15832] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 14:48:31,503 [15832] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 14:48:31,504 [15832] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 14:48:32,012 [15832] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-12 14:48:32,013 [15832] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-12 14:48:32,013 [15832] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-12 14:48:32,014 [15832] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-12 14:48:32,015 [15832] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-12 14:48:32,016 [15832] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-12 21:55:13,592 [15832] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\networkx\algorithms\centrality\subgraph_alg.py:246: RuntimeWarning: invalid value encountered in true_divide
  B = (expA - scipy.linalg.expm(A.A)) / expA

2020-05-13 08:55:39,564 [15832] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 08:55:39,565 [15832] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 08:55:39,565 [15832] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 08:55:39,568 [15832] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 08:55:39,568 [15832] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 08:55:39,569 [15832] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 10:49:51,334 [20292] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 10:49:51,334 [20292] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 10:49:51,334 [20292] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 10:49:51,336 [20292] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 10:49:51,336 [20292] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 10:49:51,336 [20292] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 10:49:51,896 [20292] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 10:49:51,897 [20292] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 10:49:51,897 [20292] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 10:49:51,899 [20292] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 10:49:51,899 [20292] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 10:49:51,899 [20292] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 11:17:56,863 [16872] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 11:17:56,865 [16872] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 11:17:56,865 [16872] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 11:17:56,867 [16872] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 11:17:56,867 [16872] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 11:17:56,867 [16872] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 11:17:57,373 [16872] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 11:17:57,373 [16872] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 11:17:57,374 [16872] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 11:17:57,375 [16872] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 11:17:57,376 [16872] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 11:17:57,376 [16872] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 11:19:30,086 [16872] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-13 11:19:30,087 [16872] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-13 11:19:30,087 [16872] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-13 11:19:30,089 [16872] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-13 11:19:30,091 [16872] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-13 11:19:30,091 [16872] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-13 11:19:30,091 [16872] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-13 11:19:30,091 [16872] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-13 11:19:31,418 [16872] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-13 11:19:31,421 [16872] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-13 11:19:31,529 [16872] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-13 11:19:31,661 [16872] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-13 13:28:20,478 [24080] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 13:28:20,479 [24080] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 13:28:20,479 [24080] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 13:28:20,480 [24080] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 13:28:20,481 [24080] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 13:28:20,482 [24080] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 13:28:20,989 [24080] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 13:28:20,989 [24080] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 13:28:20,989 [24080] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 13:28:20,991 [24080] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 13:28:20,991 [24080] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 13:28:20,992 [24080] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 13:33:26,517 [24080] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-13 13:33:26,517 [24080] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-13 13:33:26,517 [24080] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-13 13:33:26,520 [24080] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-13 13:33:26,521 [24080] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-13 13:33:26,521 [24080] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-13 13:33:26,521 [24080] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-13 13:33:26,522 [24080] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-13 13:33:27,850 [24080] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-13 13:33:27,852 [24080] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-13 13:33:27,959 [24080] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-13 13:33:28,091 [24080] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-13 14:51:33,807 [25192] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 14:51:33,808 [25192] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 14:51:33,808 [25192] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 14:51:33,812 [25192] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 14:51:33,813 [25192] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 14:51:33,813 [25192] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 14:51:34,621 [25192] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 14:51:34,621 [25192] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 14:51:34,622 [25192] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 14:51:34,624 [25192] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 14:51:34,625 [25192] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 14:51:34,625 [25192] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 16:35:01,406 [13020] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 16:35:01,408 [13020] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 16:35:01,408 [13020] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 16:35:01,410 [13020] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 16:35:01,410 [13020] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 16:35:01,411 [13020] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 16:35:01,919 [13020] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 16:35:01,919 [13020] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 16:35:01,919 [13020] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 16:35:01,921 [13020] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 16:35:01,922 [13020] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 16:35:01,923 [13020] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 16:35:26,700 [13020] DEBUG    matplotlib:271: [JupyterRequire] $HOME=C:\Users\maya.benowitz
2020-05-13 16:35:26,701 [13020] DEBUG    matplotlib:271: [JupyterRequire] CONFIGDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-13 16:35:26,702 [13020] DEBUG    matplotlib:271: [JupyterRequire] matplotlib data path: C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data
2020-05-13 16:35:26,709 [13020] DEBUG    matplotlib:997: [JupyterRequire] loaded rc file C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\matplotlib\mpl-data\matplotlibrc
2020-05-13 16:35:26,711 [13020] DEBUG    matplotlib:1634: [JupyterRequire] matplotlib version 3.1.0
2020-05-13 16:35:26,711 [13020] DEBUG    matplotlib:1635: [JupyterRequire] interactive is False
2020-05-13 16:35:26,711 [13020] DEBUG    matplotlib:1636: [JupyterRequire] platform is win32
2020-05-13 16:35:26,711 [13020] DEBUG    matplotlib:1637: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'nt', 'winreg', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'encodings.cp1252', 'site', 'os', 'stat', '_stat', 'ntpath', 'genericpath', 'os.path', '_collections_abc', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'mpl_toolkits', 'snowflake', 'sphinxcontrib', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'msvcrt', '_winapi', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'posixpath', 'logging', 'collections.abc', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'math', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'urllib', 'urllib.parse', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'pygments.util', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_win32', 'ctypes', '_ctypes', 'ctypes._endian', 'ctypes.wintypes', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'typing', 'typing.io', 'typing.re', 'IPython.core.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'selectors', 'select', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.windows_events', '_overlapped', 'asyncio.base_subprocess', 'asyncio.proactor_events', 'asyncio.selector_events', 'asyncio.windows_utils', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.base', 'prompt_toolkit.log', 'prompt_toolkit.eventloop.coroutine', 'prompt_toolkit.eventloop.defaults', 'prompt_toolkit.utils', 'six.moves', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'prompt_toolkit.cache', 'prompt_toolkit.eventloop.future', 'prompt_toolkit.eventloop.context', 'prompt_toolkit.eventloop.async_generator', 'queue', '_queue', 'six.moves.queue', 'prompt_toolkit.eventloop.event', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.filters', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.app', 'prompt_toolkit.enums', 'prompt_toolkit.filters.utils', 'prompt_toolkit.filters.cli', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.document', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.layout.screen', 'prompt_toolkit.output.defaults', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.vt100', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'array', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.mouse_events', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.renderer', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.patch_stdout', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'parso.file_io', 'jedi._compatibility', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.evaluate', 'jedi.evaluate.utils', 'jedi.evaluate.imports', 'jedi.evaluate.sys_path', 'jedi.evaluate.cache', 'jedi.evaluate.base_context', 'jedi.common', 'jedi.common.context', 'jedi.evaluate.helpers', 'jedi.common.utils', 'jedi.evaluate.compiled', 'jedi.evaluate.compiled.context', 'jedi.evaluate.filters', 'jedi.evaluate.flow_analysis', 'jedi.evaluate.recursion', 'jedi.evaluate.lazy_context', 'jedi.evaluate.compiled.access', 'jedi.evaluate.compiled.getattr_static', 'jedi.evaluate.compiled.fake', 'jedi.evaluate.analysis', 'jedi.evaluate.context', 'jedi.evaluate.context.module', 'jedi.evaluate.context.klass', 'jedi.evaluate.context.function', 'jedi.evaluate.docstrings', 'jedi.evaluate.pep0484', 'jedi.evaluate.arguments', 'jedi.evaluate.context.iterable', 'jedi.evaluate.param', 'jedi.evaluate.context.asynchronous', 'jedi.evaluate.parser_cache', 'jedi.evaluate.context.instance', 'jedi.evaluate.syntax_tree', 'jedi.evaluate.finder', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.interpreter', 'jedi.evaluate.compiled.mixed', 'jedi.api.helpers', 'jedi.api.completion', 'jedi.api.environment', 'filecmp', 'jedi.evaluate.compiled.subprocess', 'jedi.evaluate.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.evaluate.usages', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.lib.clipboard', 'IPython.terminal.magics', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', 'nturl2path', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_5', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'simplejson', 'decimal', 'numbers', '_decimal', 'simplejson.errors', 'simplejson.raw_json', 'simplejson.decoder', 'simplejson.compat', 'simplejson.scanner', 'simplejson._speedups', 'simplejson.encoder', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.multikernelmanager', 'uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'colorama', 'colorama.initialise', 'colorama.ansitowin32', 'colorama.ansi', 'colorama.winterm', 'colorama.win32', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.tz.win', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'storemagic', 'ipywidgets', 'ipywidgets._version', 'ipywidgets.widgets', 'ipywidgets.widgets.widget', 'ipywidgets.widgets.domwidget', 'ipywidgets.widgets.trait_types', 'ipywidgets.widgets.util', 'ipywidgets.widgets.widget_layout', 'ipywidgets.widgets.widget_style', 'ipywidgets.widgets.valuewidget', 'ipywidgets.widgets.widget_core', 'ipywidgets.widgets.widget_bool', 'ipywidgets.widgets.widget_description', 'ipywidgets.widgets.widget_button', 'ipywidgets.widgets.widget_box', 'ipywidgets.widgets.docutils', 'ipywidgets.widgets.widget_float', 'ipywidgets.widgets.widget_int', 'ipywidgets.widgets.widget_color', 'ipywidgets.widgets.widget_date', 'ipywidgets.widgets.widget_output', 'ipywidgets.widgets.widget_selection', 'ipywidgets.widgets.widget_selectioncontainer', 'ipywidgets.widgets.widget_string', 'ipywidgets.widgets.widget_controller', 'ipywidgets.widgets.interaction', 'ipywidgets.widgets.widget_link', 'ipywidgets.widgets.widget_media', 'ipywidgets.widgets.widget_templates', 'ipywidgets.widgets.widget_upload', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'autoreload', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy._mklinit', 'numpy.core', 'numpy.core.info', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core._internal', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.shape_base', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.info', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.info', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.utils', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.mixins', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.scimath', 'numpy.lib.polynomial', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft.info', 'numpy.fft.fftpack', 'numpy.fft.fftpack_lite', 'numpy.fft.helper', 'mkl_fft', 'mkl_fft._pydfti', '_cython_0_29_7', 'mkl_fft._version', 'mkl_fft._numpy_fft', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random.mtrand', 'mtrand', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'distutils', 'distutils.version', 'pandas.compat.chainmap', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.nattype', '_cython_0_29_6', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.missing', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.config', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.printing', 'pandas.core.dtypes', 'pandas.core.dtypes.inference', 'pandas.io.formats.console', 'pandas.io.formats.terminal', 'pandas.core.api', 'pandas.core.arrays', 'pandas.core.arrays.array_', 'pandas.core.dtypes.common', 'pandas._libs.algos', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.core.dtypes.missing', 'pandas.util._validators', 'pandas.core.ops', 'pandas._libs.ops', 'pandas.core.common', 'pandas.core.missing', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.algorithms', 'pandas.core.base', 'pandas.core.nanops', 'bottleneck', 'bottleneck.reduce', 'bottleneck.nonreduce', 'bottleneck.nonreduce_axis', 'bottleneck.move', 'bottleneck.slow', 'bottleneck.slow.reduce', 'bottleneck.slow.nonreduce', 'bottleneck.slow.nonreduce_axis', 'bottleneck.slow.move', 'bottleneck.version', 'bottleneck.benchmark', 'bottleneck.benchmark.bench', 'bottleneck.benchmark.autotimeit', 'bottleneck.benchmark.bench_detailed', 'bottleneck.tests', 'bottleneck.tests.util', 'pandas.tseries', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.tools', 'pandas.core.tools.datetimes', 'pandas.core.sorting', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries.frequencies', 'pandas.core.arrays._ranges', 'pandas.core.arrays.interval', 'pandas.util._doctools', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.core.strings', 'pandas.core.arrays.period', 'pandas.core.arrays.timedeltas', 'pandas.core.arrays.integer', 'pandas.core.tools.numeric', 'pandas.core.arrays.sparse', 'pandas._libs.sparse', 'pandas.core.arrays.numpy_', 'pandas.core.groupby', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.index', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.tools.timedeltas', 'pandas.core.indexes.numeric', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.internals', 'pandas.core.internals.arrays', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'csv', '_csv', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._misc', 'pandas.plotting._style', 'pandas.plotting._tools', 'pandas.plotting._core', 'pandas.plotting._compat', 'pandas.plotting._converter', 'matplotlib', 'matplotlib.cbook', 'gzip', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'kiwisolver']
2020-05-13 16:35:29,971 [13020] DEBUG    matplotlib:271: [JupyterRequire] CACHEDIR=C:\Users\maya.benowitz\.matplotlib
2020-05-13 16:35:29,979 [13020] DEBUG    matplotlib.font_manager:1352: [JupyterRequire] Using fontManager instance from C:\Users\maya.benowitz\.matplotlib\fontlist-v310.json
2020-05-13 16:35:30,241 [13020] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-13 16:35:30,486 [13020] DEBUG    matplotlib.pyplot:219: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-05-13 16:45:32,161 [344] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 16:45:32,161 [344] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 16:45:32,161 [344] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 16:45:32,163 [344] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 16:45:32,164 [344] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 16:45:32,164 [344] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 16:45:32,672 [344] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 16:45:32,672 [344] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 16:45:32,672 [344] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 16:45:32,675 [344] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 16:45:32,675 [344] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 16:45:32,676 [344] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 17:00:14,217 [17640] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 17:00:14,218 [17640] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 17:00:14,218 [17640] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 17:00:14,220 [17640] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 17:00:14,220 [17640] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 17:00:14,221 [17640] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 18:03:33,342 [344] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-13 18:03:33,342 [344] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-13 18:03:33,343 [344] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-13 18:03:33,345 [344] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-13 18:03:33,346 [344] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-13 18:03:33,346 [344] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-13 18:23:43,679 [17640] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\pandas\plotting\_converter.py:129: FutureWarning: Using an implicitly registered datetime converter for a matplotlib plotting method. The converter was registered by pandas on import. Future versions of pandas will require you to explicitly register matplotlib converters.

To register the converters:
	>>> from pandas.plotting import register_matplotlib_converters
	>>> register_matplotlib_converters()
  warnings.warn(msg, FutureWarning)

2020-05-13 18:23:43,702 [17640] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6.
2020-05-13 18:23:43,703 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-13 18:23:43,703 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,703 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,704 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,704 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,704 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,704 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,704 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,705 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,705 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,705 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,705 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,705 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,706 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,706 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,706 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,706 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-13 18:23:43,706 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,707 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,707 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,707 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,707 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,707 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,707 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,708 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,708 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,708 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,708 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,708 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-13 18:23:43,709 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,709 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-13 18:23:43,709 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,709 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,709 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,710 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,710 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-13 18:23:43,710 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-13 18:23:43,710 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,710 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,711 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,711 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,711 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,711 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,711 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,712 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,712 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,712 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,712 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,712 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,713 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:23:43,713 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,713 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,713 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:23:43,714 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,714 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,714 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:23:43,714 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,714 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,714 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,715 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,715 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,715 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-13 18:23:43,715 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:23:43,715 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,715 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,716 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-13 18:23:43,716 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,716 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,716 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,716 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,717 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,717 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,717 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,717 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:23:43,717 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,718 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,718 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-13 18:23:43,718 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-13 18:23:43,718 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-13 18:23:43,718 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:23:43,719 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,719 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,719 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,719 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,720 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,720 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,720 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,720 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,721 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,721 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,721 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,721 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,722 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,722 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-13 18:23:43,722 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,723 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,723 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,723 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,724 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,724 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,724 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-13 18:23:43,725 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,725 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,725 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,726 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,726 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,726 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,726 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,726 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,727 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,727 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,727 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:23:43,727 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,727 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,728 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,728 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-13 18:23:43,728 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,729 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,729 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-13 18:23:43,729 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,730 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,730 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-13 18:23:43,730 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,731 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:23:43,731 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,731 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,731 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,732 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,732 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,732 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-13 18:23:43,732 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,732 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,733 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,733 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-13 18:23:43,733 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,734 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,734 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:23:43,734 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-13 18:23:43,734 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,735 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-13 18:23:43,735 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,735 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-13 18:23:43,735 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,736 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,736 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-13 18:23:43,736 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,737 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,737 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,737 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:23:43,738 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,738 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,738 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,739 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,739 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,739 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,740 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,740 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,740 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,740 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,741 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,741 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,741 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-13 18:23:43,741 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,742 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,742 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,742 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,742 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-13 18:23:43,742 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,742 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,743 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,743 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,743 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-13 18:23:43,743 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,744 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,744 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,744 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,744 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,744 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,745 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,745 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,745 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,746 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,746 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,746 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-13 18:23:43,746 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,747 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,747 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,747 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,748 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,748 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:23:43,748 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-13 18:23:43,748 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,749 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,749 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,749 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,749 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,750 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,750 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-13 18:23:43,750 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-13 18:23:43,750 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,751 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,751 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:23:43,751 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,751 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,752 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:23:43,752 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,752 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-13 18:23:43,752 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,753 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,753 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-13 18:23:43,753 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:23:43,753 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,754 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,754 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,754 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,754 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,755 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,755 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,755 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,756 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:23:43,756 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,756 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:23:43,756 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:23:43,756 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,757 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-13 18:23:43,757 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,757 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,757 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:23:43,758 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:23:43,758 [17640] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.6 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-13 18:24:05,417 [17640] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0.
2020-05-13 18:24:05,418 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-13 18:24:05,418 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,418 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,418 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,419 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,419 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,419 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,419 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,420 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,420 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,420 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,420 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,420 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,421 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,421 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,421 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,421 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-13 18:24:05,422 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,422 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,422 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,422 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,422 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,423 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,423 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,423 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,423 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,423 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,424 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,424 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-13 18:24:05,424 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,424 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-13 18:24:05,424 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,425 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,425 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,425 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,425 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-13 18:24:05,425 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-13 18:24:05,426 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,426 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,426 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,426 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,426 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,427 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,427 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,427 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,427 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,427 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,428 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,428 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,428 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:24:05,428 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,428 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,429 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:24:05,429 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,429 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,429 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:24:05,429 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,429 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,430 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,430 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,430 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,430 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-13 18:24:05,430 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:24:05,430 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,431 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,431 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-13 18:24:05,431 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,431 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,431 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,432 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,432 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,432 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,432 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,432 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:24:05,432 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,433 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,433 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-13 18:24:05,433 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-13 18:24:05,433 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-13 18:24:05,433 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:24:05,433 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,434 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,434 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,434 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,434 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,434 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,434 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,435 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,435 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,435 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,435 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,435 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,436 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,436 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-13 18:24:05,436 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,436 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,436 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,436 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,437 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,437 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,437 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-13 18:24:05,437 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,437 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,438 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,438 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,438 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,438 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,438 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,439 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,439 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,439 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,439 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:24:05,439 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,439 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,440 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,440 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-13 18:24:05,440 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,440 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,440 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-13 18:24:05,440 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,441 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,441 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-13 18:24:05,441 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,441 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:24:05,441 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,442 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,442 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,442 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,442 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,442 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-13 18:24:05,442 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,443 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,443 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,443 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-13 18:24:05,443 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,443 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,443 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:24:05,444 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-13 18:24:05,444 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,444 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-13 18:24:05,444 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,444 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-13 18:24:05,444 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,445 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,445 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-13 18:24:05,445 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,445 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,445 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,446 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:24:05,446 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,446 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,446 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,446 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,446 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,447 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,447 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,447 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,447 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,447 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,447 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,448 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,448 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-13 18:24:05,448 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,448 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,448 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,449 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,449 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-13 18:24:05,449 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,449 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,449 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,450 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,450 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-13 18:24:05,450 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,450 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,450 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,450 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,451 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,451 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,451 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,451 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,451 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,452 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,452 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,452 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-13 18:24:05,452 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,452 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,452 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,453 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,453 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,453 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:24:05,453 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-13 18:24:05,453 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,454 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,454 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,454 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,454 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,455 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,455 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-13 18:24:05,455 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-13 18:24:05,455 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,455 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,455 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:24:05,456 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,456 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,456 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:24:05,456 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,456 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-13 18:24:05,456 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,457 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,457 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-13 18:24:05,457 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:24:05,457 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,457 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,458 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,458 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,458 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,458 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,458 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,459 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,459 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:24:05,459 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,459 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:24:05,459 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:24:05,459 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,460 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-13 18:24:05,460 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,460 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,460 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:24:05,460 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:24:05,461 [17640] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-13 18:38:05,247 [17640] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999.
2020-05-13 18:38:05,247 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-13 18:38:05,248 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,248 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,248 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,248 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,249 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,249 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,249 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,249 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,249 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,249 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,250 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,250 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,250 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,250 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,250 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,251 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-13 18:38:05,251 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,251 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,251 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,251 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,252 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,252 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,252 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,252 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,252 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,252 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,253 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,253 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-13 18:38:05,253 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,253 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-13 18:38:05,253 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,253 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,254 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,254 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,254 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-13 18:38:05,254 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-13 18:38:05,254 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,254 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,255 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,255 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,255 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,255 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,255 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,256 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,256 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,256 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,256 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,256 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,256 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:38:05,257 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,257 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,257 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,257 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,258 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,258 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:38:05,258 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,258 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,258 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,258 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,259 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,259 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-13 18:38:05,259 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:38:05,259 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,259 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,259 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-13 18:38:05,260 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,260 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,260 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,260 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,260 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,260 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,261 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,261 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:38:05,261 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,261 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,261 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-13 18:38:05,262 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-13 18:38:05,262 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-13 18:38:05,262 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,262 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,262 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,263 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,263 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,263 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,263 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,263 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,263 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,264 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,264 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,264 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,264 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,264 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,264 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-13 18:38:05,265 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,265 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,265 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,265 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,265 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,265 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,266 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,266 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,266 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,266 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,266 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,266 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,267 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,267 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,267 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,267 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,267 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,268 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,268 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,268 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,268 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,268 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-13 18:38:05,268 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,269 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,269 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-13 18:38:05,269 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,269 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,269 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-13 18:38:05,270 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,270 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,270 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,270 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,270 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,271 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,271 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,271 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,271 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,271 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,271 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,272 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,272 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,272 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,272 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,272 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,272 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,273 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-13 18:38:05,273 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,273 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-13 18:38:05,273 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,273 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,273 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-13 18:38:05,274 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,274 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,274 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,274 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,274 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,274 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,275 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,275 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,275 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,275 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,276 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,276 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,276 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,276 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,277 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,277 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,277 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-13 18:38:05,277 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,278 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,278 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,278 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,278 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-13 18:38:05,278 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,279 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,279 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,279 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,279 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-13 18:38:05,279 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,279 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,280 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,280 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,280 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,280 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,280 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,281 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,281 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,281 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,281 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,282 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,282 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,282 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,283 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,283 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,283 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,283 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,284 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-13 18:38:05,284 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,284 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,284 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,285 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,285 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,285 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,286 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-13 18:38:05,286 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,286 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,287 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,287 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,287 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,288 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,288 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:38:05,289 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,289 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-13 18:38:05,289 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,290 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,290 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-13 18:38:05,290 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:38:05,290 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,291 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,291 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,291 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,291 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,292 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,292 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,292 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,293 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,293 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,293 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,294 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,294 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,294 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,294 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,295 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,295 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,295 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,295 [17640] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=14.399999999999999 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-13 18:38:05,335 [17640] DEBUG    matplotlib.font_manager:1259: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2020-05-13 18:38:05,335 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-05-13 18:38:05,336 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,336 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,336 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,336 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,337 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,337 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,337 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,338 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,338 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,338 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,338 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,339 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,339 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,339 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,339 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,340 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal bold normal>) = 11.335
2020-05-13 18:38:05,340 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,340 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,340 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,340 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,341 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,341 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,341 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,341 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,341 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,341 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,342 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,342 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal bold normal>) = 5.335
2020-05-13 18:38:05,342 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,342 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 5.05
2020-05-13 18:38:05,342 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,343 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,343 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,343 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,344 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal bold normal>) = 6.335
2020-05-13 18:38:05,344 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 6.05
2020-05-13 18:38:05,344 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,344 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,344 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspa.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,345 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Historic' (seguihis.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,345 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft PhagsPa' (phagspab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,345 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuiz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,345 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgia.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,345 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-BOLD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,346 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (pala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,346 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Javanese Text' (javatext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,347 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings' (wingding.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,347 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (REFSAN.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,347 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:38:05,347 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,347 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Juice ITC' (JUICE___.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,347 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,348 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,348 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,348 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesbd.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:38:05,348 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,348 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century' (CENTURY.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,349 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,349 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUR.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,349 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtextb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,349 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNI.TTF) italic normal 400 condensed>) = 4.583333333333333
2020-05-13 18:38:05,349 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:38:05,349 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,350 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,350 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-LIGHT.TTF) normal normal light normal>) = 10.24
2020-05-13 18:38:05,350 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (WINGDNG2.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,350 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,350 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailub.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,351 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Console' (lucon.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,351 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (WINGDNG3.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,351 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrimabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,351 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelaUIb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,351 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (times.ttf) normal normal roman normal>) = 10.145
2020-05-13 18:38:05,352 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,352 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaS.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,352 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arial.ttf) normal normal 400 normal>) = 3.383333333333333
2020-05-13 18:38:05,352 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbi.ttf) italic normal bold normal>) = 4.668333333333333
2020-05-13 18:38:05,352 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALN.TTF) normal normal 400 condensed>) = 3.583333333333333
2020-05-13 18:38:05,352 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSBI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,353 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Uighur' (MSUIGHUB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,353 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbel.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,353 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,353 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-REGULAR.TTF) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,353 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,354 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (NirmalaB.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,354 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdana.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,354 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Outlook' (OUTLOOK.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,354 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambria.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,354 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,355 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Myanmar Text' (mmrtext.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,355 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoescb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,355 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucit.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,355 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisb.ttf) normal normal semibold normal>) = 10.24
2020-05-13 18:38:05,355 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,356 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,356 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Symbol' (seguisym.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,356 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MV Boli' (mvboli.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,356 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (Sitka.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,356 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,357 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (BSSYM7.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,357 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,357 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Pristina' (PRISTINA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,357 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Kristen ITC' (ITCKRIST.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,357 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,358 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICI.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,358 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,358 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constan.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,358 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaZ.ttc) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,358 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,359 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taileb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,359 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,359 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (courbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,359 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (REFSPCL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,359 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,360 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framd.ttf) normal normal medium normal>) = 10.145
2020-05-13 18:38:05,360 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft New Tai Lue' (ntailu.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,360 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MT Extra' (MTEXTRA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,360 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (framdit.ttf) italic normal medium normal>) = 11.145
2020-05-13 18:38:05,360 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWDB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,360 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebuc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,361 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibli.ttf) italic normal black normal>) = 11.525
2020-05-13 18:38:05,361 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelawUI.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,361 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,361 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,361 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Cambria' (cambriai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,362 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARABD.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,362 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comici.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,362 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Garamond' (GARAIT.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,362 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOS.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,362 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (micross.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,362 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Script' (segoesc.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,363 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,363 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarali.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,363 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICB.TTF) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,363 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee UI' (LeelUIsl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,364 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUAI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,364 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (BKANT.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,364 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHIC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,364 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (arialbd.ttf) normal normal bold normal>) = 3.668333333333333
2020-05-13 18:38:05,364 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Papyrus' (PAPYRUS.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,365 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNBI.TTF) italic normal bold condensed>) = 4.868333333333333
2020-05-13 18:38:05,365 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'HoloLens MDL2 Assets' (holomdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,365 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibri.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,366 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothM.ttc) normal normal medium normal>) = 10.145
2020-05-13 18:38:05,366 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaral.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,366 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'French Script MT' (FRSCRIPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,366 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bahnschrift' (bahnschrift.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,366 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrili.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,366 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Verdana' (verdanab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,367 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Webdings' (webdings.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,367 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibriz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,367 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bradley Hand ITC' (BRADHITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,367 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbell.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,367 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mistral' (MISTRAL.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,368 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothB.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,368 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuil.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,368 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MS Gothic' (msgothic.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,368 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft JhengHei' (msjhbd.ttc) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,368 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (mingliub.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,369 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sylfaen' (sylfaen.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,369 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariali.ttf) italic normal 400 normal>) = 4.383333333333333
2020-05-13 18:38:05,369 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiab.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,369 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Symbol' (symbol.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,369 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trajan Pro' (TrajanPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,370 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tempus Sans ITC' (TEMPSITC.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,370 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Dubai' (DUBAI-MEDIUM.TTF) normal normal medium normal>) = 10.145
2020-05-13 18:38:05,370 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Nirmala UI' (Nirmala.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,370 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,371 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ebrima' (ebrima.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,371 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahoma.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,371 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ariblk.ttf) normal normal black normal>) = 3.858333333333333
2020-05-13 18:38:05,371 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,371 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consolai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,372 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comicz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,372 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,372 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuisl.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,372 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (simsunb.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,372 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (cour.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,372 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI Emoji' (seguiemj.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,373 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibrib.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,373 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candarai.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,373 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Impact' (impact.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,373 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Calibri' (calibril.ttf) normal normal light normal>) = 10.24
2020-05-13 18:38:05,373 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Consolas' (consola.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,374 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Candara' (Candaraz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,374 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constani.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,374 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Leelawadee' (LEELAWAD.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,374 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Handwriting' (LHANDW.TTF) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,374 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Book Antiqua' (ANTQUABI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,375 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisbi.ttf) italic normal semibold normal>) = 11.24
2020-05-13 18:38:05,375 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,375 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Century Gothic' (GOTHICBI.TTF) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,375 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Courier New' (couri.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,375 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Georgia' (georgiaz.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,376 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Freestyle Script' (FREESCPT.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,376 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (comic.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,376 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Arial' (ARIALNB.TTF) normal normal bold condensed>) = 3.868333333333333
2020-05-13 18:38:05,376 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothR.ttc) normal normal regular normal>) = 10.05
2020-05-13 18:38:05,376 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Gadugi' (gadugi.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,377 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeui.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,377 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSI.TTF) italic normal book normal>) = 11.05
2020-05-13 18:38:05,377 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgun.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,377 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbeli.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,377 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyhl.ttc) normal normal light normal>) = 10.24
2020-05-13 18:38:05,378 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoepr.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,378 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Yu Gothic' (YuGothL.ttc) normal normal light normal>) = 10.24
2020-05-13 18:38:05,378 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'SimSun' (simsun.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,378 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Ink Free' (Inkfree.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,378 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguibl.ttf) normal normal black normal>) = 10.525
2020-05-13 18:38:05,379 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Times New Roman' (timesi.ttf) italic normal roman normal>) = 11.145
2020-05-13 18:38:05,379 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe MDL2 Assets' (segmdl2.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,379 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Constantia' (constanb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,379 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,379 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Malgun Gothic' (malgunbd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,379 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (segoeuii.ttf) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,380 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe Print' (segoeprb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,380 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Tahoma' (tahomabd.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,380 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (trebucbi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,380 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (palabi.ttf) italic normal bold normal>) = 11.335
2020-05-13 18:38:05,380 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Monotype Corsiva' (MTCORSVA.TTF) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,381 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Segoe UI' (seguisli.ttf) italic normal light normal>) = 11.24
2020-05-13 18:38:05,381 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Corbel' (corbelb.ttf) normal normal bold normal>) = 10.335
2020-05-13 18:38:05,381 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft YaHei' (msyh.ttc) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,381 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Sitka Small' (SitkaI.ttc) italic normal 400 normal>) = 11.05
2020-05-13 18:38:05,381 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (l_10646.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,382 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,382 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Bookman Old Style' (BOOKOSB.TTF) normal normal book normal>) = 10.05
2020-05-13 18:38:05,382 [17640] DEBUG    matplotlib.font_manager:1271: [JupyterRequire] findfont: score(<Font 'Marlett' (marlett.ttf) normal normal 400 normal>) = 10.05
2020-05-13 18:38:05,382 [17640] DEBUG    matplotlib.font_manager:1294: [JupyterRequire] findfont: Matching :family=sans-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to Arial ('C:\\WINDOWS\\Fonts\\arial.ttf') with score of 3.383333.
2020-05-14 08:36:28,034 [11084] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-14 08:36:28,035 [11084] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-14 08:36:28,035 [11084] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-14 08:36:28,037 [11084] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-14 08:36:28,037 [11084] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-14 08:36:28,038 [11084] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-14 10:35:15,614 [9044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-14 10:35:15,614 [9044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-14 10:35:15,614 [9044] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-14 10:35:15,616 [9044] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-14 10:35:15,616 [9044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-14 10:35:15,617 [9044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-14 10:35:16,206 [9044] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-14 10:35:16,206 [9044] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-14 10:35:16,206 [9044] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-14 10:35:16,208 [9044] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-14 10:35:16,209 [9044] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-14 10:35:16,209 [9044] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-14 14:13:49,370 [20952] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-14 14:13:49,370 [20952] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-14 14:13:49,370 [20952] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-14 14:13:49,372 [20952] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-14 14:13:49,373 [20952] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-14 14:13:49,373 [20952] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-14 14:13:49,899 [20952] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-14 14:13:49,899 [20952] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-14 14:13:49,900 [20952] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-14 14:13:49,901 [20952] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-14 14:13:49,902 [20952] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-14 14:13:49,902 [20952] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-15 08:07:33,873 [24108] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-15 08:07:33,873 [24108] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-15 08:07:33,873 [24108] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-15 08:07:33,875 [24108] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-15 08:07:33,876 [24108] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-15 08:07:33,876 [24108] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-15 08:16:19,283 [23264] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-05-15 08:16:19,283 [23264] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-05-15 08:16:19,284 [23264] INFO     root:247: [JupyterRequire] Initializing comms.
2020-05-15 08:16:19,285 [23264] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-05-15 08:16:19,286 [23264] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-05-15 08:16:19,286 [23264] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-05-15 09:44:13,828 [23264] WARNING  py.warnings:110: [JupyterRequire] C:\Users\maya.benowitz\AppData\Local\Continuum\anaconda3\lib\site-packages\ipykernel_launcher.py:1: FutureWarning: Sorting because non-concatenation axis is not aligned. A future version
of pandas will change to not sort by default.

To accept the future behavior, pass 'sort=False'.

To retain the current behavior and silence the warning, pass 'sort=True'.

  """Entry point for launching an IPython kernel.

